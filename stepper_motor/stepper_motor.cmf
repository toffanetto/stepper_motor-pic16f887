%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$stepper_motor.obj
cinit CODE 0 15 15 11 2
text1 CODE 0 100 100 11 2
text2 CODE 0 111 111 10 2
text3 CODE 0 26 26 94 2
maintext CODE 0 BA BA 46 2
cstackCOMMON COMMON 1 70 70 7 1
cstackBANK0 BANK0 1 20 20 F 1
intentry CODE 0 4 4 E 2
bssBANK0 BANK0 1 2F 2F 3 1
idataBANK0 CODE 0 121 121 2 2
dataBANK0 BANK0 1 32 32 2 1
$startup.obj
reset_vec CODE 0 0 0 3 2
end_init CODE 0 12 12 3 2
config CONFIG 0 2007 2007 2 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 34-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 34-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 3-3 2
CONST 123-1FFF 2
ENTRY 3-3 2
ENTRY 123-1FFF 2
IDLOC 2000-2003 2
STACK 110-16F 1
CODE 3-3 2
CODE 123-1FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-10F 1
SFR3 180-18F 1
COMMON 77-7D 1
EEDATA 2100-21FF 2
STRCODE 3-3 2
STRCODE 123-1FFF 2
STRING 3-3 2
STRING 123-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$stepper_motor.obj
15 cinit CODE >251:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
15 cinit CODE >254:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
15 cinit CODE >286:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
1A cinit CODE >287:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
1B cinit CODE >288:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
1E cinit CODE >289:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
1F cinit CODE >293:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
20 cinit CODE >294:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
21 cinit CODE >295:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
22 cinit CODE >301:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
22 cinit CODE >303:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
23 cinit CODE >304:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\stepper_motor.as
4 intentry CODE >21:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
26 text3 CODE >21:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
26 text3 CODE >23:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
2A text3 CODE >24:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
2F text3 CODE >25:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
4E text3 CODE >26:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
68 text3 CODE >29:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
6A text3 CODE >30:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
8B text3 CODE >31:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
A7 text3 CODE >33:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
A8 text3 CODE >36:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
AA text3 CODE >38:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
AE text3 CODE >40:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
AF text3 CODE >41:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
111 text2 CODE >4:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c
111 text2 CODE >6:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c
115 text2 CODE >7:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c
100 text1 CODE >43:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
100 text1 CODE >45:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
104 text1 CODE >47:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
105 text1 CODE >48:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
106 text1 CODE >50:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
107 text1 CODE >51:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
10A text1 CODE >52:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
10C text1 CODE >53:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
110 text1 CODE >55:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
BA maintext CODE >57:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
BA maintext CODE >59:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
BF maintext CODE >63:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
C2 maintext CODE >64:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
C3 maintext CODE >65:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
C5 maintext CODE >66:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
C9 maintext CODE >67:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
CB maintext CODE >68:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
CF maintext CODE >70:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
E9 maintext CODE >72:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
F2 maintext CODE >73:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
F4 maintext CODE >75:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
FD maintext CODE >76:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
FF maintext CODE >61:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\main.c
$startup.obj
12 end_init CODE >77:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
12 init CODE >74:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 functab ENTRY >40:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 functab ENTRY >41:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 functab ENTRY >42:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 functab ENTRY >43:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 functab ENTRY >44:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 functab ENTRY >45:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 reset_vec CODE >64:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
0 reset_vec CODE >69:D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 2 0 ABS 0 - stepper_motor.obj
__LdataBANK0 0 0 ABS 0 dataBANK0 -
__Hspace_0 2009 0 ABS 0 - -
__Hspace_1 77 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__HidataBANK0 0 0 ABS 0 idataBANK0 -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__CFG_MCLRE$ON 0 0 ABS 0 - stepper_motor.obj
?_abs 28 0 BANK0 1 cstackBANK0 stepper_motor.obj
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack startup.obj
_main 174 0 CODE 0 maintext stepper_motor.obj
abs@a 28 0 BANK0 1 cstackBANK0 stepper_motor.obj
btemp 7E 0 ABS 0 - stepper_motor.obj
start 24 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - stepper_motor.obj
__CFG_DEBUG$OFF 0 0 ABS 0 - stepper_motor.obj
__LidataBANK0 0 0 ABS 0 idataBANK0 -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
wtemp0 7E 0 ABS 0 - stepper_motor.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Lmaintext 0 0 ABS 0 maintext -
__size_of_setup 0 0 ABS 0 - stepper_motor.obj
start_initialization 2A 0 CODE 0 cinit stepper_motor.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 stepper_motor.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 ABS 0 bank3 -
__Hcinit 4C 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 4012 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lbank3 0 0 ABS 0 bank3 -
__Lcinit 2A 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
_PORTDbits 8 0 ABS 0 - stepper_motor.obj
_INTCONbits B 0 ABS 0 - stepper_motor.obj
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 24 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 24 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_ISR 4C 0 CODE 0 text3 stepper_motor.obj
_PR2 92 0 ABS 0 - stepper_motor.obj
__S0 2009 0 ABS 0 - -
__S1 77 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
_abs 222 0 CODE 0 text2 stepper_motor.obj
__CFG_BOR4V$BOR40V 0 0 ABS 0 - stepper_motor.obj
saved_w 7E 0 ABS 0 - stepper_motor.obj
__CFG_FOSC$INTRC_NOCLKOUT 0 0 ABS 0 - stepper_motor.obj
__end_of_ISR 174 0 CODE 0 text3 stepper_motor.obj
__end_of_abs 242 0 CODE 0 text2 stepper_motor.obj
__CFG_BOREN$ON 0 0 ABS 0 - stepper_motor.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__pdataBANK0 32 0 BANK0 1 dataBANK0 stepper_motor.obj
__LbssBANK0 0 0 ABS 0 bssBANK0 -
__CFG_FCMEN$ON 0 0 ABS 0 - stepper_motor.obj
_PIE1bits 8C 0 ABS 0 - stepper_motor.obj
__pmaintext 174 0 CODE 0 maintext stepper_motor.obj
_poscaler2 2F 0 BANK0 1 bssBANK0 stepper_motor.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 400E 0 CONFIG 0 config -
__CFG_CP$OFF 0 0 ABS 0 - stepper_motor.obj
__CFG_IESO$ON 0 0 ABS 0 - stepper_motor.obj
__CFG_WDTE$OFF 0 0 ABS 0 - stepper_motor.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__CFG_LVP$OFF 0 0 ABS 0 - stepper_motor.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
_PIR1bits C 0 ABS 0 - stepper_motor.obj
__Lend_init 24 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 44 0 CODE 0 cinit stepper_motor.obj
__Hintentry 24 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 6 0 CODE 0 reset_vec -
__HbssBANK0 0 0 ABS 0 bssBANK0 -
_setpoint 31 0 BANK0 1 bssBANK0 stepper_motor.obj
__ptext1 200 0 CODE 0 text1 stepper_motor.obj
__ptext2 222 0 CODE 0 text2 stepper_motor.obj
__ptext3 4C 0 CODE 0 text3 stepper_motor.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 44 0 CODE 0 cinit stepper_motor.obj
__Lfunctab 0 0 ENTRY 0 functab -
__pidataBANK0 242 0 CODE 0 idataBANK0 stepper_motor.obj
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON stepper_motor.obj
_ISR$136 20 0 BANK0 1 cstackBANK0 stepper_motor.obj
_ISR$137 22 0 BANK0 1 cstackBANK0 stepper_motor.obj
_ISR$138 24 0 BANK0 1 cstackBANK0 stepper_motor.obj
_ISR$139 26 0 BANK0 1 cstackBANK0 stepper_motor.obj
__Hend_init 2A 0 CODE 0 end_init -
__end_of_main 200 0 CODE 0 maintext stepper_motor.obj
_PORTD 8 0 ABS 0 - stepper_motor.obj
_T2CON 12 0 ABS 0 - stepper_motor.obj
_TRISD 88 0 ABS 0 - stepper_motor.obj
__end_of_setup 222 0 CODE 0 text1 stepper_motor.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry stepper_motor.obj
_error 33 0 BANK0 1 dataBANK0 stepper_motor.obj
_phase 32 0 BANK0 1 dataBANK0 stepper_motor.obj
__CFG_CPD$OFF 0 0 ABS 0 - stepper_motor.obj
_setup 200 0 CODE 0 text1 stepper_motor.obj
__pintentry 8 0 CODE 0 intentry stepper_motor.obj
__size_of_ISR 0 0 ABS 0 - stepper_motor.obj
__size_of_abs 0 0 ABS 0 - stepper_motor.obj
__HdataBANK0 0 0 ABS 0 dataBANK0 -
__initialization 2A 0 CODE 0 cinit stepper_motor.obj
__CFG_PWRTE$OFF 0 0 ABS 0 - stepper_motor.obj
__pbssBANK0 2F 0 BANK0 1 bssBANK0 stepper_motor.obj
__CFG_WRT$OFF 0 0 ABS 0 - stepper_motor.obj
_position 30 0 BANK0 1 bssBANK0 stepper_motor.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cstackCOMMON 1 70 70 7 1
cstackBANK0 1 20 20 14 1
intentry 0 4 8 11F 2
reset_vec 0 0 0 3 2
config 0 2007 400E 2 2



Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 06 12:44:06 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	nvBANK0
   216  005D                     __pnvBANK0:	
   217  005D                     _position:	
   218  005D                     	ds	1
   219  0008                     _PORTDbits	set	8
   220  0008                     _PORTD	set	8
   221  0003                     _STATUSbits	set	3
   222  0012                     _T2CON	set	18
   223  000C                     _PIR1bits	set	12
   224  000B                     _INTCONbits	set	11
   225  0092                     _PR2	set	146
   226  008C                     _PIE1bits	set	140
   227  0088                     _TRISD	set	136
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  0015                     start_initialization:	
   233  0015                     __initialization:	
   234                           
   235                           ; Clear objects allocated to BANK0
   236  0015  1283               	bcf	3,5	;RP0=0, select bank0
   237  0016  1303               	bcf	3,6	;RP1=0, select bank0
   238  0017  01D9               	clrf	__pbssBANK0& (0+127)
   239  0018  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   240  0019  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   241  001A  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   242  001B                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  001B                     __end_of__initialization:	
   246  001B  0183               	clrf	3
   247  001C  120A  118A  2AC0   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250  0059                     __pbssBANK0:	
   251  0059                     _poscaler2:	
   252  0059                     	ds	1
   253  005A                     _phase:	
   254  005A                     	ds	1
   255  005B                     _error:	
   256  005B                     	ds	1
   257  005C                     _setpoint:	
   258  005C                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:	
   262  0070                     ?_setupStepper:	
   263  0070                     ?_calculaErro:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_ISR:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_ISR:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_setup:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280  0070                     	ds	7
   281  0077                     ??_setupStepper:	
   282  0077                     ??_setup:	
   283                           ; 1 bytes @ 0x7
   284                           
   285  0077                     ??_main:	
   286                           ; 1 bytes @ 0x7
   287                           
   288                           
   289                           	psect	cstackBANK0
   290  0020                     __pcstackBANK0:	
   291                           ; 1 bytes @ 0x7
   292                           
   293  0020                     _ISR$221:	
   294                           
   295                           ; 2 bytes @ 0x0
   296  0020                     	ds	2
   297  0022                     _ISR$222:	
   298                           
   299                           ; 2 bytes @ 0x2
   300  0022                     	ds	2
   301  0024                     _ISR$223:	
   302                           
   303                           ; 2 bytes @ 0x4
   304  0024                     	ds	2
   305  0026                     _ISR$224:	
   306                           
   307                           ; 2 bytes @ 0x6
   308  0026                     	ds	2
   309  0028                     _ISR$225:	
   310                           
   311                           ; 2 bytes @ 0x8
   312  0028                     	ds	2
   313  002A                     _ISR$226:	
   314                           
   315                           ; 2 bytes @ 0xA
   316  002A                     	ds	2
   317  002C                     ?_abs:	
   318  002C                     ?___ftpack:	
   319                           ; 2 bytes @ 0xC
   320                           
   321  002C                     abs@a:	
   322                           ; 3 bytes @ 0xC
   323                           
   324  002C                     ___ftpack@arg:	
   325                           ; 2 bytes @ 0xC
   326                           
   327                           
   328                           ; 3 bytes @ 0xC
   329  002C                     	ds	2
   330  002E                     ??_abs:	
   331                           
   332                           ; 1 bytes @ 0xE
   333  002E                     	ds	1
   334  002F                     ___ftpack@exp:	
   335                           
   336                           ; 1 bytes @ 0xF
   337  002F                     	ds	1
   338  0030                     ??_calculaErro:	
   339  0030                     ___ftpack@sign:	
   340                           ; 1 bytes @ 0x10
   341                           
   342                           
   343                           ; 1 bytes @ 0x10
   344  0030                     	ds	1
   345  0031                     ??___ftpack:	
   346                           
   347                           ; 1 bytes @ 0x11
   348  0031                     	ds	3
   349  0034                     ?___lwtoft:	
   350  0034                     ___lwtoft@c:	
   351                           ; 3 bytes @ 0x14
   352                           
   353                           
   354                           ; 2 bytes @ 0x14
   355  0034                     	ds	3
   356  0037                     ??___lwtoft:	
   357                           
   358                           ; 1 bytes @ 0x17
   359  0037                     	ds	1
   360  0038                     ?___ftdiv:	
   361  0038                     ___ftdiv@f2:	
   362                           ; 3 bytes @ 0x18
   363                           
   364                           
   365                           ; 3 bytes @ 0x18
   366  0038                     	ds	3
   367  003B                     ___ftdiv@f1:	
   368                           
   369                           ; 3 bytes @ 0x1B
   370  003B                     	ds	3
   371  003E                     ??___ftdiv:	
   372                           
   373                           ; 1 bytes @ 0x1E
   374  003E                     	ds	4
   375  0042                     ___ftdiv@cntr:	
   376                           
   377                           ; 1 bytes @ 0x22
   378  0042                     	ds	1
   379  0043                     ___ftdiv@f3:	
   380                           
   381                           ; 3 bytes @ 0x23
   382  0043                     	ds	3
   383  0046                     ___ftdiv@exp:	
   384                           
   385                           ; 1 bytes @ 0x26
   386  0046                     	ds	1
   387  0047                     ___ftdiv@sign:	
   388                           
   389                           ; 1 bytes @ 0x27
   390  0047                     	ds	1
   391  0048                     ?___fttol:	
   392  0048                     ___fttol@f1:	
   393                           ; 4 bytes @ 0x28
   394                           
   395                           
   396                           ; 3 bytes @ 0x28
   397  0048                     	ds	4
   398  004C                     ??___fttol:	
   399                           
   400                           ; 1 bytes @ 0x2C
   401  004C                     	ds	4
   402  0050                     ___fttol@sign1:	
   403                           
   404                           ; 1 bytes @ 0x30
   405  0050                     	ds	1
   406  0051                     ___fttol@lval:	
   407                           
   408                           ; 4 bytes @ 0x31
   409  0051                     	ds	4
   410  0055                     ___fttol@exp1:	
   411                           
   412                           ; 1 bytes @ 0x35
   413  0055                     	ds	1
   414  0056                     ?_setPosicaoAtual:	
   415  0056                     ?_setPosicaoDesejada:	
   416                           ; 1 bytes @ 0x36
   417                           
   418  0056                     setPosicaoAtual@posicao_atual:	
   419                           ; 1 bytes @ 0x36
   420                           
   421  0056                     setPosicaoDesejada@posicao_desejada:	
   422                           ; 2 bytes @ 0x36
   423                           
   424                           
   425                           ; 2 bytes @ 0x36
   426  0056                     	ds	2
   427  0058                     ??_setPosicaoAtual:	
   428  0058                     ??_setPosicaoDesejada:	
   429                           ; 1 bytes @ 0x38
   430                           
   431                           
   432                           ; 1 bytes @ 0x38
   433  0058                     	ds	1
   434                           
   435                           	psect	maintext
   436  02C0                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 50 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : B00/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels required when called:    5
   462 ;; This function calls:
   463 ;;		_calculaErro
   464 ;;		_setPosicaoDesejada
   465 ;;		_setup
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  02C0                     _main:	
   474                           
   475                           ;main.c: 52: setup();
   476                           
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   479  02C0  120A  118A  238A  120A  118A  	fcall	_setup
   480  02C5                     l1029:	
   481                           ;main.c: 54: while(1){
   482                           
   483                           
   484                           ;main.c: 56: if(PORTDbits.RD4==1)
   485  02C5  1283               	bcf	3,5	;RP0=0, select bank0
   486  02C6  1303               	bcf	3,6	;RP1=0, select bank0
   487  02C7  1E08               	btfss	8,4	;volatile
   488  02C8  2AD1               	goto	l1033
   489                           
   490                           ;main.c: 57: setPosicaoDesejada(0);
   491  02C9  3000               	movlw	0
   492  02CA  00D6               	movwf	setPosicaoDesejada@posicao_desejada
   493  02CB  00D7               	movwf	setPosicaoDesejada@posicao_desejada+1
   494  02CC  120A  118A  2321  120A  118A  	fcall	_setPosicaoDesejada
   495  02D1                     l1033:	
   496                           
   497                           ;main.c: 58: if(PORTDbits.RD5==1)
   498  02D1  1283               	bcf	3,5	;RP0=0, select bank0
   499  02D2  1303               	bcf	3,6	;RP1=0, select bank0
   500  02D3  1E88               	btfss	8,5	;volatile
   501  02D4  2ADE               	goto	l1037
   502                           
   503                           ;main.c: 59: setPosicaoDesejada(120);
   504  02D5  3078               	movlw	120
   505  02D6  00D6               	movwf	setPosicaoDesejada@posicao_desejada
   506  02D7  3000               	movlw	0
   507  02D8  00D7               	movwf	setPosicaoDesejada@posicao_desejada+1
   508  02D9  120A  118A  2321  120A  118A  	fcall	_setPosicaoDesejada
   509  02DE                     l1037:	
   510                           
   511                           ;main.c: 60: if(PORTDbits.RD6==1)
   512  02DE  1283               	bcf	3,5	;RP0=0, select bank0
   513  02DF  1303               	bcf	3,6	;RP1=0, select bank0
   514  02E0  1F08               	btfss	8,6	;volatile
   515  02E1  2AEB               	goto	l106
   516                           
   517                           ;main.c: 61: setPosicaoDesejada(240);
   518  02E2  30F0               	movlw	240
   519  02E3  00D6               	movwf	setPosicaoDesejada@posicao_desejada
   520  02E4  3000               	movlw	0
   521  02E5  00D7               	movwf	setPosicaoDesejada@posicao_desejada+1
   522  02E6  120A  118A  2321  120A  118A  	fcall	_setPosicaoDesejada
   523  02EB                     l106:	
   524                           
   525                           ;main.c: 63: calculaErro();
   526  02EB  120A  118A  228D  120A  118A  	fcall	_calculaErro
   527  02F0  2AC5               	goto	l1029
   528  02F1                     __end_of_main:	
   529                           
   530                           	psect	text1
   531  038A                     __ptext1:	
   532 ;; *************** function _setup *****************
   533 ;; Defined at:
   534 ;;		line 43 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    4
   555 ;; This function calls:
   556 ;;		_setPosicaoAtual
   557 ;;		_setupStepper
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _setup
   565  038A                     _setup:	
   566                           
   567                           ;main.c: 45: setupStepper();
   568                           
   569                           ;incstack = 0
   570                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   571  038A  120A  118A  2369  120A  118A  	fcall	_setupStepper
   572                           
   573                           ;main.c: 46: setPosicaoAtual(0);
   574  038F  3000               	movlw	0
   575  0390  1283               	bcf	3,5	;RP0=0, select bank0
   576  0391  1303               	bcf	3,6	;RP1=0, select bank0
   577  0392  00D6               	movwf	setPosicaoAtual@posicao_atual
   578  0393  00D7               	movwf	setPosicaoAtual@posicao_atual+1
   579  0394  120A  118A  22F1   	fcall	_setPosicaoAtual
   580  0397  0008               	return
   581  0398                     __end_of_setup:	
   582                           
   583                           	psect	text2
   584  0369                     __ptext2:	
   585 ;; *************** function _setupStepper *****************
   586 ;; Defined at:
   587 ;;		line 6 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\s
      +tepper.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_setup
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _setupStepper
   617  0369                     _setupStepper:	
   618                           
   619                           ;stepper.c: 8: TRISD = 0b11110000;
   620                           
   621                           ;incstack = 0
   622                           ; Regs used in _setupStepper: [wreg]
   623  0369  30F0               	movlw	240
   624  036A  1683               	bsf	3,5	;RP0=1, select bank1
   625  036B  1303               	bcf	3,6	;RP1=0, select bank1
   626  036C  0088               	movwf	8	;volatile
   627                           
   628                           ;stepper.c: 10: INTCONbits.GIE = 1;
   629  036D  178B               	bsf	11,7	;volatile
   630                           
   631                           ;stepper.c: 11: INTCONbits.PEIE = 1;
   632  036E  170B               	bsf	11,6	;volatile
   633                           
   634                           ;stepper.c: 13: PIE1bits.TMR2IE = 1;
   635  036F  148C               	bsf	12,1	;volatile
   636                           
   637                           ;stepper.c: 14: PIR1bits.TMR2IF = 0;
   638  0370  1283               	bcf	3,5	;RP0=0, select bank0
   639  0371  1303               	bcf	3,6	;RP1=0, select bank0
   640  0372  108C               	bcf	12,1	;volatile
   641                           
   642                           ;stepper.c: 15: T2CON = 0b01111110;
   643  0373  307E               	movlw	126
   644  0374  0092               	movwf	18	;volatile
   645                           
   646                           ;stepper.c: 16: PR2=255;
   647  0375  30FF               	movlw	255
   648  0376  1683               	bsf	3,5	;RP0=1, select bank1
   649  0377  1303               	bcf	3,6	;RP1=0, select bank1
   650  0378  0092               	movwf	18	;volatile
   651  0379  0008               	return
   652  037A                     __end_of_setupStepper:	
   653                           
   654                           	psect	text3
   655  02F1                     __ptext3:	
   656 ;; *************** function _setPosicaoAtual *****************
   657 ;; Defined at:
   658 ;;		line 19 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +stepper.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  posicao_atua    2   54[BANK0 ] unsigned int 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       2       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       1       0       0       0
   675 ;;      Totals:         0       3       0       0       0
   676 ;;Total ram usage:        3 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    3
   679 ;; This function calls:
   680 ;;		___ftdiv
   681 ;;		___fttol
   682 ;;		___lwtoft
   683 ;; This function is called by:
   684 ;;		_setup
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _setPosicaoAtual
   690  02F1                     _setPosicaoAtual:	
   691                           
   692                           ;stepper.c: 20: position = posicao_atual/5.525;
   693                           
   694                           ;incstack = 0
   695                           ; Regs used in _setPosicaoAtual: [wreg+status,2+status,0+pclath+cstack]
   696  02F1  1283               	bcf	3,5	;RP0=0, select bank0
   697  02F2  1303               	bcf	3,6	;RP1=0, select bank0
   698  02F3  0857               	movf	setPosicaoAtual@posicao_atual+1,w
   699  02F4  00B5               	movwf	___lwtoft@c+1
   700  02F5  0856               	movf	setPosicaoAtual@posicao_atual,w
   701  02F6  00B4               	movwf	___lwtoft@c
   702  02F7  120A  118A  2351  120A  118A  	fcall	___lwtoft
   703  02FC  1283               	bcf	3,5	;RP0=0, select bank0
   704  02FD  1303               	bcf	3,6	;RP1=0, select bank0
   705  02FE  0834               	movf	?___lwtoft,w
   706  02FF  00BB               	movwf	___ftdiv@f1
   707  0300  0835               	movf	?___lwtoft+1,w
   708  0301  00BC               	movwf	___ftdiv@f1+1
   709  0302  0836               	movf	?___lwtoft+2,w
   710  0303  00BD               	movwf	___ftdiv@f1+2
   711  0304  30CD               	movlw	205
   712  0305  00B8               	movwf	___ftdiv@f2
   713  0306  30B0               	movlw	176
   714  0307  00B9               	movwf	___ftdiv@f2+1
   715  0308  3040               	movlw	64
   716  0309  00BA               	movwf	___ftdiv@f2+2
   717  030A  120A  118A  20D9  120A  118A  	fcall	___ftdiv
   718  030F  1283               	bcf	3,5	;RP0=0, select bank0
   719  0310  1303               	bcf	3,6	;RP1=0, select bank0
   720  0311  0838               	movf	?___ftdiv,w
   721  0312  00C8               	movwf	___fttol@f1
   722  0313  0839               	movf	?___ftdiv+1,w
   723  0314  00C9               	movwf	___fttol@f1+1
   724  0315  083A               	movf	?___ftdiv+2,w
   725  0316  00CA               	movwf	___fttol@f1+2
   726  0317  120A  118A  2191   	fcall	___fttol
   727  031A  1283               	bcf	3,5	;RP0=0, select bank0
   728  031B  1303               	bcf	3,6	;RP1=0, select bank0
   729  031C  0848               	movf	?___fttol,w
   730  031D  00D8               	movwf	??_setPosicaoAtual
   731  031E  0858               	movf	??_setPosicaoAtual,w
   732  031F  00DD               	movwf	_position
   733  0320  0008               	return
   734  0321                     __end_of_setPosicaoAtual:	
   735                           
   736                           	psect	text4
   737  0321                     __ptext4:	
   738 ;; *************** function _setPosicaoDesejada *****************
   739 ;; Defined at:
   740 ;;		line 27 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +stepper.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  posicao_dese    2   54[BANK0 ] unsigned int 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       2       0       0       0
   755 ;;      Locals:         0       0       0       0       0
   756 ;;      Temps:          0       1       0       0       0
   757 ;;      Totals:         0       3       0       0       0
   758 ;;Total ram usage:        3 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    3
   761 ;; This function calls:
   762 ;;		___ftdiv
   763 ;;		___fttol
   764 ;;		___lwtoft
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _setPosicaoDesejada
   772  0321                     _setPosicaoDesejada:	
   773                           
   774                           ;stepper.c: 28: setpoint = posicao_desejada/5.525;
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _setPosicaoDesejada: [wreg+status,2+status,0+pclath+cstack]
   778  0321  1283               	bcf	3,5	;RP0=0, select bank0
   779  0322  1303               	bcf	3,6	;RP1=0, select bank0
   780  0323  0857               	movf	setPosicaoDesejada@posicao_desejada+1,w
   781  0324  00B5               	movwf	___lwtoft@c+1
   782  0325  0856               	movf	setPosicaoDesejada@posicao_desejada,w
   783  0326  00B4               	movwf	___lwtoft@c
   784  0327  120A  118A  2351  120A  118A  	fcall	___lwtoft
   785  032C  1283               	bcf	3,5	;RP0=0, select bank0
   786  032D  1303               	bcf	3,6	;RP1=0, select bank0
   787  032E  0834               	movf	?___lwtoft,w
   788  032F  00BB               	movwf	___ftdiv@f1
   789  0330  0835               	movf	?___lwtoft+1,w
   790  0331  00BC               	movwf	___ftdiv@f1+1
   791  0332  0836               	movf	?___lwtoft+2,w
   792  0333  00BD               	movwf	___ftdiv@f1+2
   793  0334  30CD               	movlw	205
   794  0335  00B8               	movwf	___ftdiv@f2
   795  0336  30B0               	movlw	176
   796  0337  00B9               	movwf	___ftdiv@f2+1
   797  0338  3040               	movlw	64
   798  0339  00BA               	movwf	___ftdiv@f2+2
   799  033A  120A  118A  20D9  120A  118A  	fcall	___ftdiv
   800  033F  1283               	bcf	3,5	;RP0=0, select bank0
   801  0340  1303               	bcf	3,6	;RP1=0, select bank0
   802  0341  0838               	movf	?___ftdiv,w
   803  0342  00C8               	movwf	___fttol@f1
   804  0343  0839               	movf	?___ftdiv+1,w
   805  0344  00C9               	movwf	___fttol@f1+1
   806  0345  083A               	movf	?___ftdiv+2,w
   807  0346  00CA               	movwf	___fttol@f1+2
   808  0347  120A  118A  2191   	fcall	___fttol
   809  034A  1283               	bcf	3,5	;RP0=0, select bank0
   810  034B  1303               	bcf	3,6	;RP1=0, select bank0
   811  034C  0848               	movf	?___fttol,w
   812  034D  00D8               	movwf	??_setPosicaoDesejada
   813  034E  0858               	movf	??_setPosicaoDesejada,w
   814  034F  00DC               	movwf	_setpoint
   815  0350  0008               	return
   816  0351                     __end_of_setPosicaoDesejada:	
   817                           
   818                           	psect	text5
   819  0351                     __ptext5:	
   820 ;; *************** function ___lwtoft *****************
   821 ;; Defined at:
   822 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  c               2   20[BANK0 ] unsigned int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  3   20[BANK0 ] float 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       3       0       0       0
   837 ;;      Locals:         0       0       0       0       0
   838 ;;      Temps:          0       1       0       0       0
   839 ;;      Totals:         0       4       0       0       0
   840 ;;Total ram usage:        4 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    2
   843 ;; This function calls:
   844 ;;		___ftpack
   845 ;; This function is called by:
   846 ;;		_setPosicaoAtual
   847 ;;		_setPosicaoDesejada
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function ___lwtoft
   853  0351                     ___lwtoft:	
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   857  0351  1283               	bcf	3,5	;RP0=0, select bank0
   858  0352  1303               	bcf	3,6	;RP1=0, select bank0
   859  0353  0834               	movf	___lwtoft@c,w
   860  0354  00AC               	movwf	___ftpack@arg
   861  0355  0835               	movf	___lwtoft@c+1,w
   862  0356  00AD               	movwf	___ftpack@arg+1
   863  0357  01AE               	clrf	___ftpack@arg+2
   864  0358  308E               	movlw	142
   865  0359  00B7               	movwf	??___lwtoft
   866  035A  0837               	movf	??___lwtoft,w
   867  035B  00AF               	movwf	___ftpack@exp
   868  035C  01B0               	clrf	___ftpack@sign
   869  035D  120A  118A  221F   	fcall	___ftpack
   870  0360  1283               	bcf	3,5	;RP0=0, select bank0
   871  0361  1303               	bcf	3,6	;RP1=0, select bank0
   872  0362  082C               	movf	?___ftpack,w
   873  0363  00B4               	movwf	?___lwtoft
   874  0364  082D               	movf	?___ftpack+1,w
   875  0365  00B5               	movwf	?___lwtoft+1
   876  0366  082E               	movf	?___ftpack+2,w
   877  0367  00B6               	movwf	?___lwtoft+2
   878  0368  0008               	return
   879  0369                     __end_of___lwtoft:	
   880                           
   881                           	psect	text6
   882  0191                     __ptext6:	
   883 ;; *************** function ___fttol *****************
   884 ;; Defined at:
   885 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  f1              3   40[BANK0 ] float 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  lval            4   49[BANK0 ] unsigned long 
   890 ;;  exp1            1   53[BANK0 ] unsigned char 
   891 ;;  sign1           1   48[BANK0 ] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  4   40[BANK0 ] long 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       4       0       0       0
   902 ;;      Locals:         0       6       0       0       0
   903 ;;      Temps:          0       4       0       0       0
   904 ;;      Totals:         0      14       0       0       0
   905 ;;Total ram usage:       14 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_setPosicaoAtual
   912 ;;		_setPosicaoDesejada
   913 ;;		_getPosicaoAtual
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function ___fttol
   919  0191                     ___fttol:	
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   923  0191  1283               	bcf	3,5	;RP0=0, select bank0
   924  0192  1303               	bcf	3,6	;RP1=0, select bank0
   925  0193  0848               	movf	___fttol@f1,w
   926  0194  00CC               	movwf	??___fttol
   927  0195  0849               	movf	___fttol@f1+1,w
   928  0196  00CD               	movwf	??___fttol+1
   929  0197  084A               	movf	___fttol@f1+2,w
   930  0198  00CE               	movwf	??___fttol+2
   931  0199  1003               	clrc
   932  019A  0D4D               	rlf	??___fttol+1,w
   933  019B  0D4E               	rlf	??___fttol+2,w
   934  019C  00CF               	movwf	??___fttol+3
   935  019D  084F               	movf	??___fttol+3,w
   936  019E  00D5               	movwf	___fttol@exp1
   937  019F  0855               	movf	___fttol@exp1,w
   938  01A0  1D03               	btfss	3,2
   939  01A1  29AB               	goto	l887
   940  01A2  3000               	movlw	0
   941  01A3  00CB               	movwf	?___fttol+3
   942  01A4  3000               	movlw	0
   943  01A5  00CA               	movwf	?___fttol+2
   944  01A6  3000               	movlw	0
   945  01A7  00C9               	movwf	?___fttol+1
   946  01A8  3000               	movlw	0
   947  01A9  00C8               	movwf	?___fttol
   948  01AA  0008               	return
   949  01AB                     l887:	
   950  01AB  0848               	movf	___fttol@f1,w
   951  01AC  00CC               	movwf	??___fttol
   952  01AD  0849               	movf	___fttol@f1+1,w
   953  01AE  00CD               	movwf	??___fttol+1
   954  01AF  084A               	movf	___fttol@f1+2,w
   955  01B0  00CE               	movwf	??___fttol+2
   956  01B1  3017               	movlw	23
   957  01B2                     u705:	
   958  01B2  1003               	clrc
   959  01B3  0CCE               	rrf	??___fttol+2,f
   960  01B4  0CCD               	rrf	??___fttol+1,f
   961  01B5  0CCC               	rrf	??___fttol,f
   962  01B6  3EFF               	addlw	-1
   963  01B7  1D03               	skipz
   964  01B8  29B2               	goto	u705
   965  01B9  084C               	movf	??___fttol,w
   966  01BA  00CF               	movwf	??___fttol+3
   967  01BB  084F               	movf	??___fttol+3,w
   968  01BC  00D0               	movwf	___fttol@sign1
   969  01BD  17C9               	bsf	___fttol@f1+1,7
   970  01BE  30FF               	movlw	255
   971  01BF  05C8               	andwf	___fttol@f1,f
   972  01C0  30FF               	movlw	255
   973  01C1  05C9               	andwf	___fttol@f1+1,f
   974  01C2  3000               	movlw	0
   975  01C3  05CA               	andwf	___fttol@f1+2,f
   976  01C4  0848               	movf	___fttol@f1,w
   977  01C5  00D1               	movwf	___fttol@lval
   978  01C6  0849               	movf	___fttol@f1+1,w
   979  01C7  00D2               	movwf	___fttol@lval+1
   980  01C8  084A               	movf	___fttol@f1+2,w
   981  01C9  00D3               	movwf	___fttol@lval+2
   982  01CA  01D4               	clrf	___fttol@lval+3
   983  01CB  308E               	movlw	142
   984  01CC  02D5               	subwf	___fttol@exp1,f
   985  01CD  1FD5               	btfss	___fttol@exp1,7
   986  01CE  29ED               	goto	l907
   987  01CF  0855               	movf	___fttol@exp1,w
   988  01D0  3A80               	xorlw	128
   989  01D1  3E8F               	addlw	143
   990  01D2  1803               	skipnc
   991  01D3  29DD               	goto	l905
   992  01D4  3000               	movlw	0
   993  01D5  00CB               	movwf	?___fttol+3
   994  01D6  3000               	movlw	0
   995  01D7  00CA               	movwf	?___fttol+2
   996  01D8  3000               	movlw	0
   997  01D9  00C9               	movwf	?___fttol+1
   998  01DA  3000               	movlw	0
   999  01DB  00C8               	movwf	?___fttol
  1000  01DC  0008               	return
  1001  01DD                     l905:	
  1002  01DD  3001               	movlw	1
  1003  01DE                     u735:	
  1004  01DE  1003               	clrc
  1005  01DF  0CD4               	rrf	___fttol@lval+3,f
  1006  01E0  0CD3               	rrf	___fttol@lval+2,f
  1007  01E1  0CD2               	rrf	___fttol@lval+1,f
  1008  01E2  0CD1               	rrf	___fttol@lval,f
  1009  01E3  3EFF               	addlw	-1
  1010  01E4  1D03               	skipz
  1011  01E5  29DE               	goto	u735
  1012  01E6  3001               	movlw	1
  1013  01E7  00CC               	movwf	??___fttol
  1014  01E8  084C               	movf	??___fttol,w
  1015  01E9  07D5               	addwf	___fttol@exp1,f
  1016  01EA  1903               	btfsc	3,2
  1017  01EB  2A08               	goto	l915
  1018  01EC  29DD               	goto	l905
  1019  01ED                     l907:	
  1020  01ED  3018               	movlw	24
  1021  01EE  0255               	subwf	___fttol@exp1,w
  1022  01EF  1C03               	skipc
  1023  01F0  2A05               	goto	l449
  1024  01F1  3000               	movlw	0
  1025  01F2  00CB               	movwf	?___fttol+3
  1026  01F3  3000               	movlw	0
  1027  01F4  00CA               	movwf	?___fttol+2
  1028  01F5  3000               	movlw	0
  1029  01F6  00C9               	movwf	?___fttol+1
  1030  01F7  3000               	movlw	0
  1031  01F8  00C8               	movwf	?___fttol
  1032  01F9  0008               	return
  1033  01FA                     l913:	
  1034  01FA  3001               	movlw	1
  1035  01FB  00CC               	movwf	??___fttol
  1036  01FC                     u765:	
  1037  01FC  1003               	clrc
  1038  01FD  0DD1               	rlf	___fttol@lval,f
  1039  01FE  0DD2               	rlf	___fttol@lval+1,f
  1040  01FF  0DD3               	rlf	___fttol@lval+2,f
  1041  0200  0DD4               	rlf	___fttol@lval+3,f
  1042  0201  0BCC               	decfsz	??___fttol,f
  1043  0202  29FC               	goto	u765
  1044  0203  3001               	movlw	1
  1045  0204  02D5               	subwf	___fttol@exp1,f
  1046  0205                     l449:	
  1047  0205  0855               	movf	___fttol@exp1,w
  1048  0206  1D03               	btfss	3,2
  1049  0207  29FA               	goto	l913
  1050  0208                     l915:	
  1051  0208  0850               	movf	___fttol@sign1,w
  1052  0209  1903               	btfsc	3,2
  1053  020A  2A16               	goto	l919
  1054  020B  09D1               	comf	___fttol@lval,f
  1055  020C  09D2               	comf	___fttol@lval+1,f
  1056  020D  09D3               	comf	___fttol@lval+2,f
  1057  020E  09D4               	comf	___fttol@lval+3,f
  1058  020F  0AD1               	incf	___fttol@lval,f
  1059  0210  1903               	skipnz
  1060  0211  0AD2               	incf	___fttol@lval+1,f
  1061  0212  1903               	skipnz
  1062  0213  0AD3               	incf	___fttol@lval+2,f
  1063  0214  1903               	skipnz
  1064  0215  0AD4               	incf	___fttol@lval+3,f
  1065  0216                     l919:	
  1066  0216  0854               	movf	___fttol@lval+3,w
  1067  0217  00CB               	movwf	?___fttol+3
  1068  0218  0853               	movf	___fttol@lval+2,w
  1069  0219  00CA               	movwf	?___fttol+2
  1070  021A  0852               	movf	___fttol@lval+1,w
  1071  021B  00C9               	movwf	?___fttol+1
  1072  021C  0851               	movf	___fttol@lval,w
  1073  021D  00C8               	movwf	?___fttol
  1074  021E  0008               	return
  1075  021F                     __end_of___fttol:	
  1076                           
  1077                           	psect	text7
  1078  00D9                     __ptext7:	
  1079 ;; *************** function ___ftdiv *****************
  1080 ;; Defined at:
  1081 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  f2              3   24[BANK0 ] float 
  1084 ;;  f1              3   27[BANK0 ] float 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  f3              3   35[BANK0 ] float 
  1087 ;;  sign            1   39[BANK0 ] unsigned char 
  1088 ;;  exp             1   38[BANK0 ] unsigned char 
  1089 ;;  cntr            1   34[BANK0 ] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  3   24[BANK0 ] float 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       6       0       0       0
  1100 ;;      Locals:         0       6       0       0       0
  1101 ;;      Temps:          0       4       0       0       0
  1102 ;;      Totals:         0      16       0       0       0
  1103 ;;Total ram usage:       16 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    2
  1106 ;; This function calls:
  1107 ;;		___ftpack
  1108 ;; This function is called by:
  1109 ;;		_setPosicaoAtual
  1110 ;;		_setPosicaoDesejada
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function ___ftdiv
  1116  00D9                     ___ftdiv:	
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1120  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1121  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1122  00DB  083B               	movf	___ftdiv@f1,w
  1123  00DC  00BE               	movwf	??___ftdiv
  1124  00DD  083C               	movf	___ftdiv@f1+1,w
  1125  00DE  00BF               	movwf	??___ftdiv+1
  1126  00DF  083D               	movf	___ftdiv@f1+2,w
  1127  00E0  00C0               	movwf	??___ftdiv+2
  1128  00E1  1003               	clrc
  1129  00E2  0D3F               	rlf	??___ftdiv+1,w
  1130  00E3  0D40               	rlf	??___ftdiv+2,w
  1131  00E4  00C1               	movwf	??___ftdiv+3
  1132  00E5  0841               	movf	??___ftdiv+3,w
  1133  00E6  00C6               	movwf	___ftdiv@exp
  1134  00E7  0846               	movf	___ftdiv@exp,w
  1135  00E8  1D03               	btfss	3,2
  1136  00E9  28F1               	goto	l845
  1137  00EA  3000               	movlw	0
  1138  00EB  00B8               	movwf	?___ftdiv
  1139  00EC  3000               	movlw	0
  1140  00ED  00B9               	movwf	?___ftdiv+1
  1141  00EE  3000               	movlw	0
  1142  00EF  00BA               	movwf	?___ftdiv+2
  1143  00F0  0008               	return
  1144  00F1                     l845:	
  1145  00F1  0838               	movf	___ftdiv@f2,w
  1146  00F2  00BE               	movwf	??___ftdiv
  1147  00F3  0839               	movf	___ftdiv@f2+1,w
  1148  00F4  00BF               	movwf	??___ftdiv+1
  1149  00F5  083A               	movf	___ftdiv@f2+2,w
  1150  00F6  00C0               	movwf	??___ftdiv+2
  1151  00F7  1003               	clrc
  1152  00F8  0D3F               	rlf	??___ftdiv+1,w
  1153  00F9  0D40               	rlf	??___ftdiv+2,w
  1154  00FA  00C1               	movwf	??___ftdiv+3
  1155  00FB  0841               	movf	??___ftdiv+3,w
  1156  00FC  00C7               	movwf	___ftdiv@sign
  1157  00FD  0847               	movf	___ftdiv@sign,w
  1158  00FE  1D03               	btfss	3,2
  1159  00FF  2907               	goto	l851
  1160  0100  3000               	movlw	0
  1161  0101  00B8               	movwf	?___ftdiv
  1162  0102  3000               	movlw	0
  1163  0103  00B9               	movwf	?___ftdiv+1
  1164  0104  3000               	movlw	0
  1165  0105  00BA               	movwf	?___ftdiv+2
  1166  0106  0008               	return
  1167  0107                     l851:	
  1168  0107  3000               	movlw	0
  1169  0108  00C3               	movwf	___ftdiv@f3
  1170  0109  3000               	movlw	0
  1171  010A  00C4               	movwf	___ftdiv@f3+1
  1172  010B  3000               	movlw	0
  1173  010C  00C5               	movwf	___ftdiv@f3+2
  1174  010D  3089               	movlw	137
  1175  010E  0747               	addwf	___ftdiv@sign,w
  1176  010F  00BE               	movwf	??___ftdiv
  1177  0110  083E               	movf	??___ftdiv,w
  1178  0111  02C6               	subwf	___ftdiv@exp,f
  1179  0112  083B               	movf	___ftdiv@f1,w
  1180  0113  00BE               	movwf	??___ftdiv
  1181  0114  083C               	movf	___ftdiv@f1+1,w
  1182  0115  00BF               	movwf	??___ftdiv+1
  1183  0116  083D               	movf	___ftdiv@f1+2,w
  1184  0117  00C0               	movwf	??___ftdiv+2
  1185  0118  3010               	movlw	16
  1186  0119                     u635:	
  1187  0119  1003               	clrc
  1188  011A  0CC0               	rrf	??___ftdiv+2,f
  1189  011B  0CBF               	rrf	??___ftdiv+1,f
  1190  011C  0CBE               	rrf	??___ftdiv,f
  1191  011D  3EFF               	addlw	-1
  1192  011E  1D03               	skipz
  1193  011F  2919               	goto	u635
  1194  0120  083E               	movf	??___ftdiv,w
  1195  0121  00C1               	movwf	??___ftdiv+3
  1196  0122  0841               	movf	??___ftdiv+3,w
  1197  0123  00C7               	movwf	___ftdiv@sign
  1198  0124  0838               	movf	___ftdiv@f2,w
  1199  0125  00BE               	movwf	??___ftdiv
  1200  0126  0839               	movf	___ftdiv@f2+1,w
  1201  0127  00BF               	movwf	??___ftdiv+1
  1202  0128  083A               	movf	___ftdiv@f2+2,w
  1203  0129  00C0               	movwf	??___ftdiv+2
  1204  012A  3010               	movlw	16
  1205  012B                     u645:	
  1206  012B  1003               	clrc
  1207  012C  0CC0               	rrf	??___ftdiv+2,f
  1208  012D  0CBF               	rrf	??___ftdiv+1,f
  1209  012E  0CBE               	rrf	??___ftdiv,f
  1210  012F  3EFF               	addlw	-1
  1211  0130  1D03               	skipz
  1212  0131  292B               	goto	u645
  1213  0132  083E               	movf	??___ftdiv,w
  1214  0133  00C1               	movwf	??___ftdiv+3
  1215  0134  0841               	movf	??___ftdiv+3,w
  1216  0135  06C7               	xorwf	___ftdiv@sign,f
  1217  0136  3080               	movlw	128
  1218  0137  00BE               	movwf	??___ftdiv
  1219  0138  083E               	movf	??___ftdiv,w
  1220  0139  05C7               	andwf	___ftdiv@sign,f
  1221  013A  17BC               	bsf	___ftdiv@f1+1,7
  1222  013B  30FF               	movlw	255
  1223  013C  05BB               	andwf	___ftdiv@f1,f
  1224  013D  30FF               	movlw	255
  1225  013E  05BC               	andwf	___ftdiv@f1+1,f
  1226  013F  3000               	movlw	0
  1227  0140  05BD               	andwf	___ftdiv@f1+2,f
  1228  0141  17B9               	bsf	___ftdiv@f2+1,7
  1229  0142  30FF               	movlw	255
  1230  0143  05B8               	andwf	___ftdiv@f2,f
  1231  0144  30FF               	movlw	255
  1232  0145  05B9               	andwf	___ftdiv@f2+1,f
  1233  0146  3000               	movlw	0
  1234  0147  05BA               	andwf	___ftdiv@f2+2,f
  1235  0148  3018               	movlw	24
  1236  0149  00BE               	movwf	??___ftdiv
  1237  014A  083E               	movf	??___ftdiv,w
  1238  014B  00C2               	movwf	___ftdiv@cntr
  1239  014C                     l865:	
  1240  014C  3001               	movlw	1
  1241  014D                     u655:	
  1242  014D  1003               	clrc
  1243  014E  0DC3               	rlf	___ftdiv@f3,f
  1244  014F  0DC4               	rlf	___ftdiv@f3+1,f
  1245  0150  0DC5               	rlf	___ftdiv@f3+2,f
  1246  0151  3EFF               	addlw	-1
  1247  0152  1D03               	skipz
  1248  0153  294D               	goto	u655
  1249  0154  083A               	movf	___ftdiv@f2+2,w
  1250  0155  023D               	subwf	___ftdiv@f1+2,w
  1251  0156  1D03               	skipz
  1252  0157  295E               	goto	u665
  1253  0158  0839               	movf	___ftdiv@f2+1,w
  1254  0159  023C               	subwf	___ftdiv@f1+1,w
  1255  015A  1D03               	skipz
  1256  015B  295E               	goto	u665
  1257  015C  0838               	movf	___ftdiv@f2,w
  1258  015D  023B               	subwf	___ftdiv@f1,w
  1259  015E                     u665:	
  1260  015E  1C03               	skipc
  1261  015F  296B               	goto	l873
  1262  0160  0838               	movf	___ftdiv@f2,w
  1263  0161  02BB               	subwf	___ftdiv@f1,f
  1264  0162  0839               	movf	___ftdiv@f2+1,w
  1265  0163  1C03               	skipc
  1266  0164  0F39               	incfsz	___ftdiv@f2+1,w
  1267  0165  02BC               	subwf	___ftdiv@f1+1,f
  1268  0166  083A               	movf	___ftdiv@f2+2,w
  1269  0167  1C03               	skipc
  1270  0168  0A3A               	incf	___ftdiv@f2+2,w
  1271  0169  02BD               	subwf	___ftdiv@f1+2,f
  1272  016A  1443               	bsf	___ftdiv@f3,0
  1273  016B                     l873:	
  1274  016B  3001               	movlw	1
  1275  016C                     u675:	
  1276  016C  1003               	clrc
  1277  016D  0DBB               	rlf	___ftdiv@f1,f
  1278  016E  0DBC               	rlf	___ftdiv@f1+1,f
  1279  016F  0DBD               	rlf	___ftdiv@f1+2,f
  1280  0170  3EFF               	addlw	-1
  1281  0171  1D03               	skipz
  1282  0172  296C               	goto	u675
  1283  0173  3001               	movlw	1
  1284  0174  02C2               	subwf	___ftdiv@cntr,f
  1285  0175  1D03               	btfss	3,2
  1286  0176  294C               	goto	l865
  1287  0177  0843               	movf	___ftdiv@f3,w
  1288  0178  00AC               	movwf	___ftpack@arg
  1289  0179  0844               	movf	___ftdiv@f3+1,w
  1290  017A  00AD               	movwf	___ftpack@arg+1
  1291  017B  0845               	movf	___ftdiv@f3+2,w
  1292  017C  00AE               	movwf	___ftpack@arg+2
  1293  017D  0846               	movf	___ftdiv@exp,w
  1294  017E  00BE               	movwf	??___ftdiv
  1295  017F  083E               	movf	??___ftdiv,w
  1296  0180  00AF               	movwf	___ftpack@exp
  1297  0181  0847               	movf	___ftdiv@sign,w
  1298  0182  00BF               	movwf	??___ftdiv+1
  1299  0183  083F               	movf	??___ftdiv+1,w
  1300  0184  00B0               	movwf	___ftpack@sign
  1301  0185  120A  118A  221F   	fcall	___ftpack
  1302  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1304  018A  082C               	movf	?___ftpack,w
  1305  018B  00B8               	movwf	?___ftdiv
  1306  018C  082D               	movf	?___ftpack+1,w
  1307  018D  00B9               	movwf	?___ftdiv+1
  1308  018E  082E               	movf	?___ftpack+2,w
  1309  018F  00BA               	movwf	?___ftdiv+2
  1310  0190  0008               	return
  1311  0191                     __end_of___ftdiv:	
  1312                           
  1313                           	psect	text8
  1314  021F                     __ptext8:	
  1315 ;; *************** function ___ftpack *****************
  1316 ;; Defined at:
  1317 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  arg             3   12[BANK0 ] unsigned um
  1320 ;;  exp             1   15[BANK0 ] unsigned char 
  1321 ;;  sign            1   16[BANK0 ] unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  3   12[BANK0 ] float 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       5       0       0       0
  1334 ;;      Locals:         0       0       0       0       0
  1335 ;;      Temps:          0       3       0       0       0
  1336 ;;      Totals:         0       8       0       0       0
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		___ftdiv
  1344 ;;		___lwtoft
  1345 ;;		___lbtoft
  1346 ;;		___ftmul
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function ___ftpack
  1352  021F                     ___ftpack:	
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1356  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0221  082F               	movf	___ftpack@exp,w
  1359  0222  1903               	btfsc	3,2
  1360  0223  2A29               	goto	l811
  1361  0224  082E               	movf	___ftpack@arg+2,w
  1362  0225  042D               	iorwf	___ftpack@arg+1,w
  1363  0226  042C               	iorwf	___ftpack@arg,w
  1364  0227  1D03               	skipz
  1365  0228  2A3C               	goto	l817
  1366  0229                     l811:	
  1367  0229  3000               	movlw	0
  1368  022A  00AC               	movwf	?___ftpack
  1369  022B  3000               	movlw	0
  1370  022C  00AD               	movwf	?___ftpack+1
  1371  022D  3000               	movlw	0
  1372  022E  00AE               	movwf	?___ftpack+2
  1373  022F  0008               	return
  1374  0230                     l815:	
  1375  0230  3001               	movlw	1
  1376  0231  00B1               	movwf	??___ftpack
  1377  0232  0831               	movf	??___ftpack,w
  1378  0233  07AF               	addwf	___ftpack@exp,f
  1379  0234  3001               	movlw	1
  1380  0235                     u515:	
  1381  0235  1003               	clrc
  1382  0236  0CAE               	rrf	___ftpack@arg+2,f
  1383  0237  0CAD               	rrf	___ftpack@arg+1,f
  1384  0238  0CAC               	rrf	___ftpack@arg,f
  1385  0239  3EFF               	addlw	-1
  1386  023A  1D03               	skipz
  1387  023B  2A35               	goto	u515
  1388  023C                     l817:	
  1389  023C  30FE               	movlw	254
  1390  023D  052E               	andwf	___ftpack@arg+2,w
  1391  023E  1903               	btfsc	3,2
  1392  023F  2A57               	goto	l358
  1393  0240  2A30               	goto	l815
  1394  0241                     l819:	
  1395  0241  3001               	movlw	1
  1396  0242  00B1               	movwf	??___ftpack
  1397  0243  0831               	movf	??___ftpack,w
  1398  0244  07AF               	addwf	___ftpack@exp,f
  1399  0245  3001               	movlw	1
  1400  0246  07AC               	addwf	___ftpack@arg,f
  1401  0247  3000               	movlw	0
  1402  0248  1803               	skipnc
  1403  0249  3001               	movlw	1
  1404  024A  07AD               	addwf	___ftpack@arg+1,f
  1405  024B  3000               	movlw	0
  1406  024C  1803               	skipnc
  1407  024D  3001               	movlw	1
  1408  024E  07AE               	addwf	___ftpack@arg+2,f
  1409  024F  3001               	movlw	1
  1410  0250                     u535:	
  1411  0250  1003               	clrc
  1412  0251  0CAE               	rrf	___ftpack@arg+2,f
  1413  0252  0CAD               	rrf	___ftpack@arg+1,f
  1414  0253  0CAC               	rrf	___ftpack@arg,f
  1415  0254  3EFF               	addlw	-1
  1416  0255  1D03               	skipz
  1417  0256  2A50               	goto	u535
  1418  0257                     l358:	
  1419  0257  30FF               	movlw	255
  1420  0258  052E               	andwf	___ftpack@arg+2,w
  1421  0259  1903               	btfsc	3,2
  1422  025A  2A66               	goto	l827
  1423  025B  2A41               	goto	l819
  1424  025C                     l825:	
  1425  025C  3001               	movlw	1
  1426  025D  02AF               	subwf	___ftpack@exp,f
  1427  025E  3001               	movlw	1
  1428  025F                     u555:	
  1429  025F  1003               	clrc
  1430  0260  0DAC               	rlf	___ftpack@arg,f
  1431  0261  0DAD               	rlf	___ftpack@arg+1,f
  1432  0262  0DAE               	rlf	___ftpack@arg+2,f
  1433  0263  3EFF               	addlw	-1
  1434  0264  1D03               	skipz
  1435  0265  2A5F               	goto	u555
  1436  0266                     l827:	
  1437  0266  1BAD               	btfsc	___ftpack@arg+1,7
  1438  0267  2A6C               	goto	l365
  1439  0268  3002               	movlw	2
  1440  0269  022F               	subwf	___ftpack@exp,w
  1441  026A  1803               	skipnc
  1442  026B  2A5C               	goto	l825
  1443  026C                     l365:	
  1444  026C  182F               	btfsc	___ftpack@exp,0
  1445  026D  2A74               	goto	l366
  1446  026E  30FF               	movlw	255
  1447  026F  05AC               	andwf	___ftpack@arg,f
  1448  0270  307F               	movlw	127
  1449  0271  05AD               	andwf	___ftpack@arg+1,f
  1450  0272  30FF               	movlw	255
  1451  0273  05AE               	andwf	___ftpack@arg+2,f
  1452  0274                     l366:	
  1453  0274  1003               	clrc
  1454  0275  0CAF               	rrf	___ftpack@exp,f
  1455  0276  082F               	movf	___ftpack@exp,w
  1456  0277  00B1               	movwf	??___ftpack
  1457  0278  01B2               	clrf	??___ftpack+1
  1458  0279  01B3               	clrf	??___ftpack+2
  1459  027A  3010               	movlw	16
  1460  027B                     u595:	
  1461  027B  1003               	clrc
  1462  027C  0DB1               	rlf	??___ftpack,f
  1463  027D  0DB2               	rlf	??___ftpack+1,f
  1464  027E  0DB3               	rlf	??___ftpack+2,f
  1465  027F  3EFF               	addlw	-1
  1466  0280  1D03               	skipz
  1467  0281  2A7B               	goto	u595
  1468  0282  0831               	movf	??___ftpack,w
  1469  0283  04AC               	iorwf	___ftpack@arg,f
  1470  0284  0832               	movf	??___ftpack+1,w
  1471  0285  04AD               	iorwf	___ftpack@arg+1,f
  1472  0286  0833               	movf	??___ftpack+2,w
  1473  0287  04AE               	iorwf	___ftpack@arg+2,f
  1474  0288  0830               	movf	___ftpack@sign,w
  1475  0289  1903               	btfsc	3,2
  1476  028A  0008               	return
  1477  028B  17AE               	bsf	___ftpack@arg+2,7
  1478  028C  0008               	return
  1479  028D                     __end_of___ftpack:	
  1480                           
  1481                           	psect	text9
  1482  028D                     __ptext9:	
  1483 ;; *************** function _calculaErro *****************
  1484 ;; Defined at:
  1485 ;;		line 31 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +stepper.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       3       0       0       0
  1502 ;;      Totals:         0       3       0       0       0
  1503 ;;Total ram usage:        3 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    2
  1506 ;; This function calls:
  1507 ;;		_abs
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _calculaErro
  1515  028D                     _calculaErro:	
  1516                           
  1517                           ;stepper.c: 32: error = abs(position - setpoint);
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _calculaErro: [wreg+status,2+status,0+pclath+cstack]
  1521  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1522  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1523  028F  085C               	movf	_setpoint,w
  1524  0290  00B0               	movwf	??_calculaErro
  1525  0291  01B1               	clrf	??_calculaErro+1
  1526  0292  09B0               	comf	??_calculaErro,f
  1527  0293  09B1               	comf	??_calculaErro+1,f
  1528  0294  0AB0               	incf	??_calculaErro,f
  1529  0295  1903               	skipnz
  1530  0296  0AB1               	incf	??_calculaErro+1,f
  1531  0297  085D               	movf	_position,w
  1532  0298  0730               	addwf	??_calculaErro,w
  1533  0299  00AC               	movwf	abs@a
  1534  029A  0831               	movf	??_calculaErro+1,w
  1535  029B  1803               	skipnc
  1536  029C  0A31               	incf	??_calculaErro+1,w
  1537  029D  00AD               	movwf	abs@a+1
  1538  029E  120A  118A  237A  120A  118A  	fcall	_abs
  1539  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1540  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1541  02A5  082C               	movf	?_abs,w
  1542  02A6  00B2               	movwf	??_calculaErro+2
  1543  02A7  0832               	movf	??_calculaErro+2,w
  1544  02A8  00DB               	movwf	_error
  1545                           
  1546                           ;stepper.c: 34: if(setpoint > position && error > 32)
  1547  02A9  085C               	movf	_setpoint,w
  1548  02AA  025D               	subwf	_position,w
  1549  02AB  1803               	skipnc
  1550  02AC  2AB4               	goto	l955
  1551  02AD  085B               	movf	_error,w
  1552  02AE  3A80               	xorlw	128
  1553  02AF  3E5F               	addlw	-161
  1554  02B0  1C03               	skipc
  1555  02B1  2AB4               	goto	l955
  1556                           
  1557                           ;stepper.c: 35: error = -error;
  1558  02B2  09DB               	comf	_error,f
  1559  02B3  0ADB               	incf	_error,f
  1560  02B4                     l955:	
  1561                           
  1562                           ;stepper.c: 37: if(setpoint < position && error < 32)
  1563  02B4  085D               	movf	_position,w
  1564  02B5  025C               	subwf	_setpoint,w
  1565  02B6  1803               	skipnc
  1566  02B7  0008               	return
  1567  02B8  085B               	movf	_error,w
  1568  02B9  3A80               	xorlw	128
  1569  02BA  3E60               	addlw	-160
  1570  02BB  1803               	skipnc
  1571  02BC  0008               	return
  1572                           
  1573                           ;stepper.c: 38: error = -error;
  1574  02BD  09DB               	comf	_error,f
  1575  02BE  0ADB               	incf	_error,f
  1576  02BF  0008               	return
  1577  02C0                     __end_of_calculaErro:	
  1578                           
  1579                           	psect	text10
  1580  037A                     __ptext10:	
  1581 ;; *************** function _abs *****************
  1582 ;; Defined at:
  1583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  a               2   12[BANK0 ] int 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2   12[BANK0 ] int 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       2       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          0       2       0       0       0
  1600 ;;      Totals:         0       4       0       0       0
  1601 ;;Total ram usage:        4 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    1
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_calculaErro
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _abs
  1613  037A                     _abs:	
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _abs: [wreg+status,2+status,0]
  1617  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1618  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1619  037C  1FAD               	btfss	abs@a+1,7
  1620  037D  0008               	return
  1621  037E  092C               	comf	abs@a,w
  1622  037F  00AE               	movwf	??_abs
  1623  0380  092D               	comf	abs@a+1,w
  1624  0381  00AF               	movwf	??_abs+1
  1625  0382  0AAE               	incf	??_abs,f
  1626  0383  1903               	skipnz
  1627  0384  0AAF               	incf	??_abs+1,f
  1628  0385  082E               	movf	??_abs,w
  1629  0386  00AC               	movwf	?_abs
  1630  0387  082F               	movf	??_abs+1,w
  1631  0388  00AD               	movwf	?_abs+1
  1632  0389  0008               	return
  1633  038A                     __end_of_abs:	
  1634                           
  1635                           	psect	text11
  1636  001F                     __ptext11:	
  1637 ;; *************** function _ISR *****************
  1638 ;; Defined at:
  1639 ;;		line 17 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +main.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       0       0       0       0
  1654 ;;      Locals:         0      12       0       0       0
  1655 ;;      Temps:          7       0       0       0       0
  1656 ;;      Totals:         7      12       0       0       0
  1657 ;;Total ram usage:       19 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		Interrupt level 1
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _ISR
  1668  001F                     _ISR:	
  1669                           
  1670                           ;main.c: 19: if(poscaler2 >= 5){
  1671  001F  3005               	movlw	5
  1672  0020  0259               	subwf	_poscaler2,w
  1673  0021  1C03               	skipc
  1674  0022  28C9               	goto	i1l1023
  1675                           
  1676                           ;main.c: 21: if(error > 0){
  1677  0023  085B               	movf	_error,w
  1678  0024  3A80               	xorlw	128
  1679  0025  3E7F               	addlw	-129
  1680  0026  1C03               	skipc
  1681  0027  2874               	goto	i1l995
  1682                           
  1683                           ;main.c: 22: STATUSbits.C = 0;
  1684  0028  1003               	bcf	3,0	;volatile
  1685                           
  1686                           ;main.c: 23: phase = (phase == 0) ? 1 : phase;
  1687  0029  085A               	movf	_phase,w
  1688  002A  1903               	btfsc	3,2
  1689  002B  2833               	goto	i1l977
  1690  002C  085A               	movf	_phase,w
  1691  002D  00F0               	movwf	??_ISR
  1692  002E  01F1               	clrf	??_ISR+1
  1693  002F  0870               	movf	??_ISR,w
  1694  0030  00A0               	movwf	_ISR$221
  1695  0031  0871               	movf	??_ISR+1,w
  1696  0032  2836               	goto	L1
  1697  0033                     i1l977:	
  1698  0033  3001               	movlw	1
  1699  0034  00A0               	movwf	_ISR$221
  1700  0035  3000               	movlw	0
  1701  0036                     L1:	
  1702  0036  00A1               	movwf	_ISR$221+1
  1703  0037  0820               	movf	_ISR$221,w
  1704  0038  00F0               	movwf	??_ISR
  1705  0039  0870               	movf	??_ISR,w
  1706  003A  00DA               	movwf	_phase
  1707                           
  1708                           ;main.c: 24: phase = (phase == 8) ? phase >> 3 : phase << 1;
  1709  003B  3008               	movlw	8
  1710  003C  065A               	xorwf	_phase,w
  1711  003D  1903               	btfsc	3,2
  1712  003E  2847               	goto	i1l983
  1713  003F  085A               	movf	_phase,w
  1714  0040  00F0               	movwf	??_ISR
  1715  0041  01F1               	clrf	??_ISR+1
  1716  0042  1003               	clrc
  1717  0043  0D70               	rlf	??_ISR,w
  1718  0044  00A2               	movwf	_ISR$222
  1719  0045  0D71               	rlf	??_ISR+1,w
  1720  0046  2855               	goto	L2
  1721  0047                     i1l983:	
  1722  0047  085A               	movf	_phase,w
  1723  0048  00F0               	movwf	??_ISR
  1724  0049  3003               	movlw	3
  1725  004A                     u88_25:	
  1726  004A  1003               	clrc
  1727  004B  0CF0               	rrf	??_ISR,f
  1728  004C  3EFF               	addlw	-1
  1729  004D  1D03               	skipz
  1730  004E  284A               	goto	u88_25
  1731  004F  0870               	movf	??_ISR,w
  1732  0050  00F1               	movwf	??_ISR+1
  1733  0051  01F2               	clrf	??_ISR+2
  1734  0052  0871               	movf	??_ISR+1,w
  1735  0053  00A2               	movwf	_ISR$222
  1736  0054  0872               	movf	??_ISR+2,w
  1737  0055                     L2:	
  1738  0055  00A3               	movwf	_ISR$222+1
  1739  0056  0822               	movf	_ISR$222,w
  1740  0057  00F0               	movwf	??_ISR
  1741  0058  0870               	movf	??_ISR,w
  1742  0059  00DA               	movwf	_phase
  1743                           
  1744                           ;main.c: 25: position = ((position + 1)== 64) ? 0 : (position + 1);
  1745  005A  085D               	movf	_position,w
  1746  005B  3E01               	addlw	1
  1747  005C  00F0               	movwf	??_ISR
  1748  005D  3000               	movlw	0
  1749  005E  1803               	skipnc
  1750  005F  3001               	movlw	1
  1751  0060  00F1               	movwf	??_ISR+1
  1752  0061  3040               	movlw	64
  1753  0062  0670               	xorwf	??_ISR,w
  1754  0063  0471               	iorwf	??_ISR+1,w
  1755  0064  1903               	btfsc	3,2
  1756  0065  286E               	goto	i1l991
  1757  0066  085D               	movf	_position,w
  1758  0067  3E01               	addlw	1
  1759  0068  00A4               	movwf	_ISR$223
  1760  0069  3000               	movlw	0
  1761  006A  1803               	skipnc
  1762  006B  3001               	movlw	1
  1763  006C  00A5               	movwf	_ISR$223+1
  1764  006D  2870               	goto	i1l993
  1765  006E                     i1l991:	
  1766  006E  01A4               	clrf	_ISR$223
  1767  006F  01A5               	clrf	_ISR$223+1
  1768  0070                     i1l993:	
  1769  0070  0824               	movf	_ISR$223,w
  1770  0071  00F0               	movwf	??_ISR
  1771  0072  0870               	movf	??_ISR,w
  1772  0073  00DD               	movwf	_position
  1773  0074                     i1l995:	
  1774                           
  1775                           ;main.c: 26: }
  1776                           ;main.c: 28: if(error < 0){
  1777  0074  1FDB               	btfss	_error,7
  1778  0075  28C6               	goto	i1l1019
  1779                           
  1780                           ;main.c: 29: STATUSbits.C = 0;
  1781  0076  1003               	bcf	3,0	;volatile
  1782                           
  1783                           ;main.c: 30: phase = (phase == 0) ? 8 : phase;
  1784  0077  085A               	movf	_phase,w
  1785  0078  1903               	btfsc	3,2
  1786  0079  2881               	goto	i1l1003
  1787  007A  085A               	movf	_phase,w
  1788  007B  00F0               	movwf	??_ISR
  1789  007C  01F1               	clrf	??_ISR+1
  1790  007D  0870               	movf	??_ISR,w
  1791  007E  00A6               	movwf	_ISR$224
  1792  007F  0871               	movf	??_ISR+1,w
  1793  0080  2884               	goto	L3
  1794  0081                     i1l1003:	
  1795  0081  3008               	movlw	8
  1796  0082  00A6               	movwf	_ISR$224
  1797  0083  3000               	movlw	0
  1798  0084                     L3:	
  1799  0084  00A7               	movwf	_ISR$224+1
  1800  0085  0826               	movf	_ISR$224,w
  1801  0086  00F0               	movwf	??_ISR
  1802  0087  0870               	movf	??_ISR,w
  1803  0088  00DA               	movwf	_phase
  1804                           
  1805                           ;main.c: 31: phase = (phase == 1) ? phase << 3 : phase >> 1;
  1806  0089  035A               	decf	_phase,w
  1807  008A  1903               	btfsc	3,2
  1808  008B  2896               	goto	i1l1009
  1809  008C  085A               	movf	_phase,w
  1810  008D  00F0               	movwf	??_ISR
  1811  008E  1003               	clrc
  1812  008F  0C70               	rrf	??_ISR,w
  1813  0090  00F1               	movwf	??_ISR+1
  1814  0091  01F2               	clrf	??_ISR+2
  1815  0092  0871               	movf	??_ISR+1,w
  1816  0093  00A8               	movwf	_ISR$225
  1817  0094  0872               	movf	??_ISR+2,w
  1818  0095  28A5               	goto	L4
  1819  0096                     i1l1009:	
  1820  0096  085A               	movf	_phase,w
  1821  0097  00F0               	movwf	??_ISR
  1822  0098  01F1               	clrf	??_ISR+1
  1823  0099  1003               	clrc
  1824  009A  0DF0               	rlf	??_ISR,f
  1825  009B  0DF1               	rlf	??_ISR+1,f
  1826  009C  1003               	clrc
  1827  009D  0DF0               	rlf	??_ISR,f
  1828  009E  0DF1               	rlf	??_ISR+1,f
  1829  009F  1003               	clrc
  1830  00A0  0DF0               	rlf	??_ISR,f
  1831  00A1  0DF1               	rlf	??_ISR+1,f
  1832  00A2  0870               	movf	??_ISR,w
  1833  00A3  00A8               	movwf	_ISR$225
  1834  00A4  0871               	movf	??_ISR+1,w
  1835  00A5                     L4:	
  1836  00A5  00A9               	movwf	_ISR$225+1
  1837  00A6  0828               	movf	_ISR$225,w
  1838  00A7  00F0               	movwf	??_ISR
  1839  00A8  0870               	movf	??_ISR,w
  1840  00A9  00DA               	movwf	_phase
  1841                           
  1842                           ;main.c: 32: position = ((position - 1)== -1) ? 63 : (position - 1);
  1843  00AA  085D               	movf	_position,w
  1844  00AB  3EFF               	addlw	255
  1845  00AC  00F0               	movwf	??_ISR
  1846  00AD  30FF               	movlw	255
  1847  00AE  1803               	skipnc
  1848  00AF  3000               	movlw	0
  1849  00B0  00F1               	movwf	??_ISR+1
  1850  00B1  0A70               	incf	??_ISR,w
  1851  00B2  1903               	btfsc	3,2
  1852  00B3  0A71               	incf	??_ISR+1,w
  1853  00B4  1903               	btfsc	3,2
  1854  00B5  28BE               	goto	i1l1017
  1855  00B6  085D               	movf	_position,w
  1856  00B7  3EFF               	addlw	255
  1857  00B8  00AA               	movwf	_ISR$226
  1858  00B9  30FF               	movlw	255
  1859  00BA  1803               	skipnc
  1860  00BB  3000               	movlw	0
  1861  00BC  00AB               	movwf	_ISR$226+1
  1862  00BD  28C2               	goto	i1l94
  1863  00BE                     i1l1017:	
  1864  00BE  303F               	movlw	63
  1865  00BF  00AA               	movwf	_ISR$226
  1866  00C0  3000               	movlw	0
  1867  00C1  00AB               	movwf	_ISR$226+1
  1868  00C2                     i1l94:	
  1869  00C2  082A               	movf	_ISR$226,w
  1870  00C3  00F0               	movwf	??_ISR
  1871  00C4  0870               	movf	??_ISR,w
  1872  00C5  00DD               	movwf	_position
  1873  00C6                     i1l1019:	
  1874                           
  1875                           ;main.c: 33: }
  1876                           ;main.c: 34: poscaler2 = 0;
  1877  00C6  01D9               	clrf	_poscaler2
  1878                           
  1879                           ;main.c: 35: PORTD = phase;
  1880  00C7  085A               	movf	_phase,w
  1881  00C8  0088               	movwf	8	;volatile
  1882  00C9                     i1l1023:	
  1883                           
  1884                           ;main.c: 36: }
  1885                           ;main.c: 38: poscaler2++;
  1886  00C9  3001               	movlw	1
  1887  00CA  00F0               	movwf	??_ISR
  1888  00CB  0870               	movf	??_ISR,w
  1889  00CC  07D9               	addwf	_poscaler2,f
  1890                           
  1891                           ;main.c: 40: PIR1bits.TMR2IF = 0;
  1892  00CD  108C               	bcf	12,1	;volatile
  1893  00CE  0876               	movf	??_ISR+6,w
  1894  00CF  00FF               	movwf	127
  1895  00D0  0875               	movf	??_ISR+5,w
  1896  00D1  008A               	movwf	10
  1897  00D2  0874               	movf	??_ISR+4,w
  1898  00D3  0084               	movwf	4
  1899  00D4  0E73               	swapf	(??_ISR+3)^(0+-128),w
  1900  00D5  0083               	movwf	3
  1901  00D6  0EFE               	swapf	126,f
  1902  00D7  0E7E               	swapf	126,w
  1903  00D8  0009               	retfie
  1904  00D9                     __end_of_ISR:	
  1905  007E                     btemp	set	126	;btemp
  1906  007E                     wtemp0	set	126
  1907                           
  1908                           	psect	intentry
  1909  0004                     __pintentry:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1912                           
  1913  0004                     interrupt_function:	
  1914  007E                     saved_w	set	btemp
  1915  0004  00FE               	movwf	btemp
  1916  0005  0E03               	swapf	3,w
  1917  0006  00F3               	movwf	??_ISR+3
  1918  0007  0804               	movf	4,w
  1919  0008  00F4               	movwf	??_ISR+4
  1920  0009  080A               	movf	10,w
  1921  000A  00F5               	movwf	??_ISR+5
  1922  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1923  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1924  000D  087F               	movf	btemp+1,w
  1925  000E  00F6               	movwf	??_ISR+6
  1926  000F  120A  118A  281F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     57      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setPosicaoDesejada
    _setup->_setPosicaoAtual
    _setPosicaoAtual->___fttol
    _setPosicaoDesejada->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft
    _calculaErro->_abs

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8977
                        _calculaErro
                 _setPosicaoDesejada
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4376
                    _setPosicaoAtual
                       _setupStepper
 ---------------------------------------------------------------------------------
 (2) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPosicaoAtual                                      3     1      2    4376
                                             54 BANK0      3     1      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _setPosicaoDesejada                                   3     1      2    4482
                                             54 BANK0      3     1      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1763
                                             20 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     411
                                             40 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2127
                                             24 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1635
                                             12 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _calculaErro                                          3     3      0     119
                                             16 BANK0      3     3      0
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     119
                                             12 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 19    19      0     144
                                              0 COMMON     7     7      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculaErro
     _abs
   _setPosicaoDesejada
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _setup
     _setPosicaoAtual
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _setupStepper

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 06 12:44:06 2022

                       __CFG_CP$OFF 0000                                 l106 02EB  
                               l365 026C                                 l366 0274  
                               l358 0257                                 l449 0205  
                               l811 0229                                 l815 0230  
                               l825 025C                                 l817 023C  
                               l913 01FA                                 l905 01DD  
                               l827 0266                                 l819 0241  
                               l851 0107                                 l915 0208  
                               l907 01ED                                 l845 00F1  
                               l919 0216                                 l873 016B  
                               l865 014C                                 l955 02B4  
                               l887 01AB                                 _PR2 0092  
                      __CFG_CPD$OFF 0000                                 u515 0235  
                               _ISR 001F                                 u535 0250  
                               u705 01B2                                 u555 025F  
                               u635 0119                                 u645 012B  
                               u655 014D                                 u735 01DE  
                               u665 015E                                 u595 027B  
                               u675 016C                                 u765 01FC  
                               _abs 037A                                 fsr0 0004  
                      __CFG_IESO$ON 0000                        __CFG_LVP$OFF 0000  
                              ?_ISR 0070                        ___ftdiv@cntr 0042  
                      ___ftdiv@sign 0047                                l1033 02D1  
                              ?_abs 002C                                l1037 02DE  
                              l1029 02C5                                i1l94 00C2  
                      __CFG_WRT$OFF 0000                       __CFG_FCMEN$ON 0000  
                              abs@a 002C                                _main 02C0  
                      ___ftpack@arg 002C                        ___ftpack@exp 002F  
                              btemp 007E                       __CFG_BOREN$ON 0000  
                              start 0012                       __CFG_MCLRE$ON 0000  
                             ??_ISR 0070                        ___fttol@exp1 0055  
                             ??_abs 002E                        ___fttol@lval 0051  
              __size_of_calculaErro 0033                               ?_main 0070  
                     __CFG_WDTE$OFF 0000                     __end_of___ftdiv 0191  
                   __end_of___fttol 021F                               _T2CON 0012  
                    __CFG_DEBUG$OFF 0000                               i1l991 006E  
                             i1l983 0047                               i1l993 0070  
                             i1l977 0033                               i1l995 0074  
                             _PORTD 0008                               _TRISD 0088  
                             u88_25 004A                               _error 005B  
                             _phase 005A                       ___ftpack@sign 0030  
                             _setup 038A                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __initialization 0015                        __end_of_main 02F1  
                            ??_main 0077                       ___fttol@sign1 0050  
          __size_of_setPosicaoAtual 0030                              ?_setup 0070  
                  __end_of___ftpack 028D                              i1l1003 0081  
                            i1l1023 00C9                              i1l1017 00BE  
                            i1l1009 0096                              i1l1019 00C6  
                  __end_of___lwtoft 0369          __end_of_setPosicaoDesejada 0351  
                    __CFG_PWRTE$OFF 0000                           ??___ftdiv 003E  
                         ??___fttol 004C                              saved_w 007E  
           __end_of__initialization 001B                          ___ftdiv@f1 003B  
                        ___ftdiv@f2 0038                          ___ftdiv@f3 0043  
                        ___fttol@f1 0048                      __pcstackCOMMON 0070  
                     __end_of_setup 0398                          ___lwtoft@c 0034  
                           ??_setup 0077                          __pbssBANK0 0059  
                 ??_setPosicaoAtual 0058                          __pmaintext 02C0  
                        __pintentry 0004                           ?___ftpack 002C  
                         ?___lwtoft 0034                             _ISR$221 0020  
                           _ISR$222 0022                             _ISR$223 0024  
                           _ISR$224 0026                             _ISR$225 0028  
                           _ISR$226 002A                       ??_calculaErro 0030  
                           ___ftdiv 00D9                             ___fttol 0191  
                        ??___ftpack 0031                             __ptext1 038A  
                           __ptext2 0369                             __ptext3 02F1  
                           __ptext4 0321                             __ptext5 0351  
                           __ptext6 0191                             __ptext7 00D9  
                           __ptext8 021F                             __ptext9 028D  
setPosicaoDesejada@posicao_desejada 0056                          ??___lwtoft 0037  
                      __size_of_ISR 00BA                        __size_of_abs 0010  
              end_of_initialization 001B                  _setPosicaoDesejada 0321  
                     ?_setupStepper 0070                           _PORTDbits 0008  
               __end_of_calculaErro 02C0                 ?_setPosicaoDesejada 0056  
                       ___ftdiv@exp 0046                ??_setPosicaoDesejada 0058  
                    ??_setupStepper 0077                     _setPosicaoAtual 02F1  
               start_initialization 0015                         __end_of_ISR 00D9  
                       __end_of_abs 038A            __CFG_FOSC$INTRC_NOCLKOUT 0000  
                       _calculaErro 028D                   __size_of___ftpack 006E  
                         ___latbits 0002                   __size_of___lwtoft 0018  
                     __pcstackBANK0 0020                           __pnvBANK0 005D  
                          ?___ftdiv 0038                            ?___fttol 0048  
           __end_of_setPosicaoAtual 0321                      __size_of_setup 000E  
                 interrupt_function 0004                __end_of_setupStepper 037A  
                          _PIE1bits 008C                            _PIR1bits 000C  
                         _poscaler2 0059                    __size_of___ftdiv 00B8  
                  ?_setPosicaoAtual 0056                    __size_of___fttol 008E  
                          ___ftpack 021F                            ___lwtoft 0351  
                          __ptext10 037A                            __ptext11 001F  
                 __CFG_BOR4V$BOR40V 0000                       __size_of_main 0031  
       __size_of_setPosicaoDesejada 0030                            _setpoint 005C  
                          _position 005D                        ?_calculaErro 0070  
      setPosicaoAtual@posicao_atual 0056                          _INTCONbits 000B  
             __size_of_setupStepper 0011                            intlevel1 0000  
                      _setupStepper 0369                          _STATUSbits 0003  

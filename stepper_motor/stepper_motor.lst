

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 12 08:47:26 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  03F1                     __pidataBANK0:	
   219                           
   220                           ;initializer for _poscaler_virtual_pv
   221  03F1  3406               	retlw	6
   222                           
   223                           	psect	nvBANK0
   224  005F                     __pnvBANK0:	
   225  005F                     _position:	
   226  005F                     	ds	2
   227  0008                     _PORTDbits	set	8
   228  0008                     _PORTD	set	8
   229  0003                     _STATUSbits	set	3
   230  0012                     _T2CON	set	18
   231  000C                     _PIR1bits	set	12
   232  000B                     _INTCONbits	set	11
   233  0092                     _PR2	set	146
   234  008C                     _PIE1bits	set	140
   235  0088                     _TRISD	set	136
   236                           
   237                           ; #config settings
   238  0000                     
   239                           	psect	cinit
   240  0015                     start_initialization:	
   241  0015                     __initialization:	
   242                           
   243                           ; Initialize objects allocated to BANK0
   244  0015  120A  118A  23F1   	fcall	__pidataBANK0	;fetch initializer
   245  0018  00E1               	movwf	__pdataBANK0& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK0
   248  0019  01D6               	clrf	__pbssBANK0& (0+127)
   249  001A  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   250  001B  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   251  001C  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   252  001D  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   253  001E  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   254  001F  01DC               	clrf	(__pbssBANK0+6)& (0+127)
   255  0020  01DD               	clrf	(__pbssBANK0+7)& (0+127)
   256  0021  01DE               	clrf	(__pbssBANK0+8)& (0+127)
   257  0022                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  0022                     __end_of__initialization:	
   261  0022  0183               	clrf	3
   262  0023  120A  118A  2B80   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  0056                     __pbssBANK0:	
   266  0056                     _speed:	
   267  0056                     	ds	2
   268  0058                     _error:	
   269  0058                     	ds	2
   270  005A                     _setpoint:	
   271  005A                     	ds	2
   272  005C                     _poscaler_virtual:	
   273  005C                     	ds	1
   274  005D                     _speed_ramp:	
   275  005D                     	ds	1
   276  005E                     _phase:	
   277  005E                     	ds	1
   278                           
   279                           	psect	dataBANK0
   280  0061                     __pdataBANK0:	
   281  0061                     _poscaler_virtual_pv:	
   282  0061                     	ds	1
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:	
   286  0070                     ?_setupStepper:	
   287  0070                     ?_calculaErro:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_ISR:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_setup:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_main:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_abs:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     abs@a:	
   303                           ; 2 bytes @ 0x0
   304                           
   305                           
   306                           ; 2 bytes @ 0x0
   307  0070                     	ds	2
   308  0072                     ??_abs:	
   309                           
   310                           ; 1 bytes @ 0x2
   311  0072                     	ds	2
   312  0074                     ??_calculaErro:	
   313                           
   314                           ; 1 bytes @ 0x4
   315  0074                     	ds	2
   316  0076                     ??_ISR:	
   317                           
   318                           ; 1 bytes @ 0x6
   319  0076                     	ds	7
   320                           
   321                           	psect	cstackBANK0
   322  0020                     __pcstackBANK0:	
   323  0020                     _ISR$223:	
   324                           
   325                           ; 2 bytes @ 0x0
   326  0020                     	ds	2
   327  0022                     _ISR$231:	
   328                           
   329                           ; 2 bytes @ 0x2
   330  0022                     	ds	2
   331  0024                     _ISR$232:	
   332                           
   333                           ; 2 bytes @ 0x4
   334  0024                     	ds	2
   335  0026                     _ISR$233:	
   336                           
   337                           ; 2 bytes @ 0x6
   338  0026                     	ds	2
   339  0028                     _ISR$234:	
   340                           
   341                           ; 2 bytes @ 0x8
   342  0028                     	ds	2
   343  002A                     ??_setupStepper:	
   344  002A                     ?___ftpack:	
   345                           ; 1 bytes @ 0xA
   346                           
   347  002A                     ___ftpack@arg:	
   348                           ; 3 bytes @ 0xA
   349                           
   350                           
   351                           ; 3 bytes @ 0xA
   352  002A                     	ds	3
   353  002D                     ___ftpack@exp:	
   354                           
   355                           ; 1 bytes @ 0xD
   356  002D                     	ds	1
   357  002E                     ___ftpack@sign:	
   358                           
   359                           ; 1 bytes @ 0xE
   360  002E                     	ds	1
   361  002F                     ??___ftpack:	
   362                           
   363                           ; 1 bytes @ 0xF
   364  002F                     	ds	3
   365  0032                     ?___lwtoft:	
   366  0032                     ___lwtoft@c:	
   367                           ; 3 bytes @ 0x12
   368                           
   369                           
   370                           ; 2 bytes @ 0x12
   371  0032                     	ds	3
   372  0035                     ??___lwtoft:	
   373                           
   374                           ; 1 bytes @ 0x15
   375  0035                     	ds	1
   376  0036                     ?___ftdiv:	
   377  0036                     ___ftdiv@f2:	
   378                           ; 3 bytes @ 0x16
   379                           
   380                           
   381                           ; 3 bytes @ 0x16
   382  0036                     	ds	3
   383  0039                     ___ftdiv@f1:	
   384                           
   385                           ; 3 bytes @ 0x19
   386  0039                     	ds	3
   387  003C                     ??___ftdiv:	
   388                           
   389                           ; 1 bytes @ 0x1C
   390  003C                     	ds	4
   391  0040                     ___ftdiv@cntr:	
   392                           
   393                           ; 1 bytes @ 0x20
   394  0040                     	ds	1
   395  0041                     ___ftdiv@f3:	
   396                           
   397                           ; 3 bytes @ 0x21
   398  0041                     	ds	3
   399  0044                     ___ftdiv@exp:	
   400                           
   401                           ; 1 bytes @ 0x24
   402  0044                     	ds	1
   403  0045                     ___ftdiv@sign:	
   404                           
   405                           ; 1 bytes @ 0x25
   406  0045                     	ds	1
   407  0046                     ?___fttol:	
   408  0046                     ___fttol@f1:	
   409                           ; 4 bytes @ 0x26
   410                           
   411                           
   412                           ; 3 bytes @ 0x26
   413  0046                     	ds	4
   414  004A                     ??___fttol:	
   415                           
   416                           ; 1 bytes @ 0x2A
   417  004A                     	ds	4
   418  004E                     ___fttol@sign1:	
   419                           
   420                           ; 1 bytes @ 0x2E
   421  004E                     	ds	1
   422  004F                     ___fttol@lval:	
   423                           
   424                           ; 4 bytes @ 0x2F
   425  004F                     	ds	4
   426  0053                     ___fttol@exp1:	
   427                           
   428                           ; 1 bytes @ 0x33
   429  0053                     	ds	1
   430  0054                     ?_setPosicaoAtual:	
   431  0054                     ?_setPosicaoDesejada:	
   432                           ; 1 bytes @ 0x34
   433                           
   434  0054                     setPosicaoAtual@posicao_atual:	
   435                           ; 1 bytes @ 0x34
   436                           
   437  0054                     setPosicaoDesejada@posicao_desejada:	
   438                           ; 2 bytes @ 0x34
   439                           
   440                           
   441                           ; 2 bytes @ 0x34
   442  0054                     	ds	2
   443  0056                     ??_setPosicaoAtual:	
   444  0056                     ??_setPosicaoDesejada:	
   445                           ; 1 bytes @ 0x36
   446                           
   447  0056                     ??_setup:	
   448                           ; 1 bytes @ 0x36
   449                           
   450  0056                     ??_main:	
   451                           ; 1 bytes @ 0x36
   452                           
   453                           
   454                           	psect	maintext
   455  0380                     __pmaintext:	
   456                           ; 1 bytes @ 0x36
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 62 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels required when called:    7
   482 ;; This function calls:
   483 ;;		_setPosicaoDesejada
   484 ;;		_setup
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _main
   492  0380                     _main:	
   493                           
   494                           ;main.c: 64: setup();
   495                           
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   498  0380  120A  118A  23D5  120A  118A  	fcall	_setup
   499  0385                     l1091:	
   500                           ;main.c: 66: while(1){
   501                           
   502                           
   503                           ;main.c: 68: if(PORTDbits.RD4==1)
   504  0385  1283               	bcf	3,5	;RP0=0, select bank0
   505  0386  1303               	bcf	3,6	;RP1=0, select bank0
   506  0387  1E08               	btfss	8,4	;volatile
   507  0388  2B91               	goto	l1095
   508                           
   509                           ;main.c: 69: setPosicaoDesejada(0);
   510  0389  3000               	movlw	0
   511  038A  00D4               	movwf	setPosicaoDesejada@posicao_desejada
   512  038B  00D5               	movwf	setPosicaoDesejada@posicao_desejada+1
   513  038C  120A  118A  2350  120A  118A  	fcall	_setPosicaoDesejada
   514  0391                     l1095:	
   515                           
   516                           ;main.c: 70: if(PORTDbits.RD5==1)
   517  0391  1283               	bcf	3,5	;RP0=0, select bank0
   518  0392  1303               	bcf	3,6	;RP1=0, select bank0
   519  0393  1E88               	btfss	8,5	;volatile
   520  0394  2B9E               	goto	l1099
   521                           
   522                           ;main.c: 71: setPosicaoDesejada(90);
   523  0395  305A               	movlw	90
   524  0396  00D4               	movwf	setPosicaoDesejada@posicao_desejada
   525  0397  3000               	movlw	0
   526  0398  00D5               	movwf	setPosicaoDesejada@posicao_desejada+1
   527  0399  120A  118A  2350  120A  118A  	fcall	_setPosicaoDesejada
   528  039E                     l1099:	
   529                           
   530                           ;main.c: 72: if(PORTDbits.RD6==1)
   531  039E  1283               	bcf	3,5	;RP0=0, select bank0
   532  039F  1303               	bcf	3,6	;RP1=0, select bank0
   533  03A0  1F08               	btfss	8,6	;volatile
   534  03A1  2B85               	goto	l1091
   535                           
   536                           ;main.c: 73: setPosicaoDesejada(180);
   537  03A2  30B4               	movlw	180
   538  03A3  00D4               	movwf	setPosicaoDesejada@posicao_desejada
   539  03A4  3000               	movlw	0
   540  03A5  00D5               	movwf	setPosicaoDesejada@posicao_desejada+1
   541  03A6  120A  118A  2350  120A  118A  	fcall	_setPosicaoDesejada
   542  03AB  2B85               	goto	l1091
   543  03AC                     __end_of_main:	
   544                           
   545                           	psect	text1
   546  03D5                     __ptext1:	
   547 ;; *************** function _setup *****************
   548 ;; Defined at:
   549 ;;		line 55 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    6
   570 ;; This function calls:
   571 ;;		_setPosicaoAtual
   572 ;;		_setupStepper
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _setup
   580  03D5                     _setup:	
   581                           
   582                           ;main.c: 57: setupStepper();
   583                           
   584                           ;incstack = 0
   585                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   586  03D5  120A  118A  23C4  120A  118A  	fcall	_setupStepper
   587                           
   588                           ;main.c: 58: setPosicaoAtual(0);
   589  03DA  3000               	movlw	0
   590  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   591  03DC  1303               	bcf	3,6	;RP1=0, select bank0
   592  03DD  00D4               	movwf	setPosicaoAtual@posicao_atual
   593  03DE  00D5               	movwf	setPosicaoAtual@posicao_atual+1
   594  03DF  120A  118A  2320   	fcall	_setPosicaoAtual
   595  03E2  0008               	return
   596  03E3                     __end_of_setup:	
   597                           
   598                           	psect	text2
   599  03C4                     __ptext2:	
   600 ;; *************** function _setupStepper *****************
   601 ;; Defined at:
   602 ;;		line 6 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\s
      +tepper.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    3
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_setup
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _setupStepper
   632  03C4                     _setupStepper:	
   633                           
   634                           ;stepper.c: 8: TRISD = 0b11110000;
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _setupStepper: [wreg]
   638  03C4  30F0               	movlw	240
   639  03C5  1683               	bsf	3,5	;RP0=1, select bank1
   640  03C6  1303               	bcf	3,6	;RP1=0, select bank1
   641  03C7  0088               	movwf	8	;volatile
   642                           
   643                           ;stepper.c: 10: INTCONbits.GIE = 1;
   644  03C8  178B               	bsf	11,7	;volatile
   645                           
   646                           ;stepper.c: 11: INTCONbits.PEIE = 1;
   647  03C9  170B               	bsf	11,6	;volatile
   648                           
   649                           ;stepper.c: 13: PIE1bits.TMR2IE = 1;
   650  03CA  148C               	bsf	12,1	;volatile
   651                           
   652                           ;stepper.c: 14: PIR1bits.TMR2IF = 0;
   653  03CB  1283               	bcf	3,5	;RP0=0, select bank0
   654  03CC  1303               	bcf	3,6	;RP1=0, select bank0
   655  03CD  108C               	bcf	12,1	;volatile
   656                           
   657                           ;stepper.c: 15: T2CON = 0b01111110;
   658  03CE  307E               	movlw	126
   659  03CF  0092               	movwf	18	;volatile
   660                           
   661                           ;stepper.c: 16: PR2=50;
   662  03D0  3032               	movlw	50
   663  03D1  1683               	bsf	3,5	;RP0=1, select bank1
   664  03D2  1303               	bcf	3,6	;RP1=0, select bank1
   665  03D3  0092               	movwf	18	;volatile
   666  03D4  0008               	return
   667  03D5                     __end_of_setupStepper:	
   668                           
   669                           	psect	text3
   670  0320                     __ptext3:	
   671 ;; *************** function _setPosicaoAtual *****************
   672 ;; Defined at:
   673 ;;		line 19 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +stepper.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  posicao_atua    2   52[BANK0 ] unsigned int 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       2       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       2       0       0       0
   691 ;;Total ram usage:        2 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    5
   694 ;; This function calls:
   695 ;;		___ftdiv
   696 ;;		___fttol
   697 ;;		___lwtoft
   698 ;; This function is called by:
   699 ;;		_setup
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _setPosicaoAtual
   705  0320                     _setPosicaoAtual:	
   706                           
   707                           ;stepper.c: 20: position = posicao_atual/(5.625/32);
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _setPosicaoAtual: [wreg+status,2+status,0+pclath+cstack]
   711  0320  1283               	bcf	3,5	;RP0=0, select bank0
   712  0321  1303               	bcf	3,6	;RP1=0, select bank0
   713  0322  0855               	movf	setPosicaoAtual@posicao_atual+1,w
   714  0323  00B3               	movwf	___lwtoft@c+1
   715  0324  0854               	movf	setPosicaoAtual@posicao_atual,w
   716  0325  00B2               	movwf	___lwtoft@c
   717  0326  120A  118A  23AC  120A  118A  	fcall	___lwtoft
   718  032B  1283               	bcf	3,5	;RP0=0, select bank0
   719  032C  1303               	bcf	3,6	;RP1=0, select bank0
   720  032D  0832               	movf	?___lwtoft,w
   721  032E  00B9               	movwf	___ftdiv@f1
   722  032F  0833               	movf	?___lwtoft+1,w
   723  0330  00BA               	movwf	___ftdiv@f1+1
   724  0331  0834               	movf	?___lwtoft+2,w
   725  0332  00BB               	movwf	___ftdiv@f1+2
   726  0333  3000               	movlw	0
   727  0334  00B6               	movwf	___ftdiv@f2
   728  0335  3034               	movlw	52
   729  0336  00B7               	movwf	___ftdiv@f2+1
   730  0337  303E               	movlw	62
   731  0338  00B8               	movwf	___ftdiv@f2+2
   732  0339  120A  118A  2119  120A  118A  	fcall	___ftdiv
   733  033E  1283               	bcf	3,5	;RP0=0, select bank0
   734  033F  1303               	bcf	3,6	;RP1=0, select bank0
   735  0340  0836               	movf	?___ftdiv,w
   736  0341  00C6               	movwf	___fttol@f1
   737  0342  0837               	movf	?___ftdiv+1,w
   738  0343  00C7               	movwf	___fttol@f1+1
   739  0344  0838               	movf	?___ftdiv+2,w
   740  0345  00C8               	movwf	___fttol@f1+2
   741  0346  120A  118A  21D1   	fcall	___fttol
   742  0349  1283               	bcf	3,5	;RP0=0, select bank0
   743  034A  1303               	bcf	3,6	;RP1=0, select bank0
   744  034B  0847               	movf	?___fttol+1,w
   745  034C  00E0               	movwf	_position+1
   746  034D  0846               	movf	?___fttol,w
   747  034E  00DF               	movwf	_position
   748  034F  0008               	return
   749  0350                     __end_of_setPosicaoAtual:	
   750                           
   751                           	psect	text4
   752  0350                     __ptext4:	
   753 ;; *************** function _setPosicaoDesejada *****************
   754 ;; Defined at:
   755 ;;		line 27 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +stepper.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  posicao_dese    2   52[BANK0 ] unsigned int 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       2       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         0       2       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    5
   776 ;; This function calls:
   777 ;;		___ftdiv
   778 ;;		___fttol
   779 ;;		___lwtoft
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _setPosicaoDesejada
   787  0350                     _setPosicaoDesejada:	
   788                           
   789                           ;stepper.c: 28: setpoint = posicao_desejada/(5.625/32);
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in _setPosicaoDesejada: [wreg+status,2+status,0+pclath+cstack]
   793  0350  1283               	bcf	3,5	;RP0=0, select bank0
   794  0351  1303               	bcf	3,6	;RP1=0, select bank0
   795  0352  0855               	movf	setPosicaoDesejada@posicao_desejada+1,w
   796  0353  00B3               	movwf	___lwtoft@c+1
   797  0354  0854               	movf	setPosicaoDesejada@posicao_desejada,w
   798  0355  00B2               	movwf	___lwtoft@c
   799  0356  120A  118A  23AC  120A  118A  	fcall	___lwtoft
   800  035B  1283               	bcf	3,5	;RP0=0, select bank0
   801  035C  1303               	bcf	3,6	;RP1=0, select bank0
   802  035D  0832               	movf	?___lwtoft,w
   803  035E  00B9               	movwf	___ftdiv@f1
   804  035F  0833               	movf	?___lwtoft+1,w
   805  0360  00BA               	movwf	___ftdiv@f1+1
   806  0361  0834               	movf	?___lwtoft+2,w
   807  0362  00BB               	movwf	___ftdiv@f1+2
   808  0363  3000               	movlw	0
   809  0364  00B6               	movwf	___ftdiv@f2
   810  0365  3034               	movlw	52
   811  0366  00B7               	movwf	___ftdiv@f2+1
   812  0367  303E               	movlw	62
   813  0368  00B8               	movwf	___ftdiv@f2+2
   814  0369  120A  118A  2119  120A  118A  	fcall	___ftdiv
   815  036E  1283               	bcf	3,5	;RP0=0, select bank0
   816  036F  1303               	bcf	3,6	;RP1=0, select bank0
   817  0370  0836               	movf	?___ftdiv,w
   818  0371  00C6               	movwf	___fttol@f1
   819  0372  0837               	movf	?___ftdiv+1,w
   820  0373  00C7               	movwf	___fttol@f1+1
   821  0374  0838               	movf	?___ftdiv+2,w
   822  0375  00C8               	movwf	___fttol@f1+2
   823  0376  120A  118A  21D1   	fcall	___fttol
   824  0379  1283               	bcf	3,5	;RP0=0, select bank0
   825  037A  1303               	bcf	3,6	;RP1=0, select bank0
   826  037B  0847               	movf	?___fttol+1,w
   827  037C  00DB               	movwf	_setpoint+1
   828  037D  0846               	movf	?___fttol,w
   829  037E  00DA               	movwf	_setpoint
   830  037F  0008               	return
   831  0380                     __end_of_setPosicaoDesejada:	
   832                           
   833                           	psect	text5
   834  03AC                     __ptext5:	
   835 ;; *************** function ___lwtoft *****************
   836 ;; Defined at:
   837 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  c               2   18[BANK0 ] unsigned int 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  3   18[BANK0 ] float 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       3       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          0       1       0       0       0
   854 ;;      Totals:         0       4       0       0       0
   855 ;;Total ram usage:        4 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    4
   858 ;; This function calls:
   859 ;;		___ftpack
   860 ;; This function is called by:
   861 ;;		_setPosicaoAtual
   862 ;;		_setPosicaoDesejada
   863 ;;		_getPosicaoAtual
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function ___lwtoft
   869  03AC                     ___lwtoft:	
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   873  03AC  1283               	bcf	3,5	;RP0=0, select bank0
   874  03AD  1303               	bcf	3,6	;RP1=0, select bank0
   875  03AE  0832               	movf	___lwtoft@c,w
   876  03AF  00AA               	movwf	___ftpack@arg
   877  03B0  0833               	movf	___lwtoft@c+1,w
   878  03B1  00AB               	movwf	___ftpack@arg+1
   879  03B2  01AC               	clrf	___ftpack@arg+2
   880  03B3  308E               	movlw	142
   881  03B4  00B5               	movwf	??___lwtoft
   882  03B5  0835               	movf	??___lwtoft,w
   883  03B6  00AD               	movwf	___ftpack@exp
   884  03B7  01AE               	clrf	___ftpack@sign
   885  03B8  120A  118A  225F   	fcall	___ftpack
   886  03BB  1283               	bcf	3,5	;RP0=0, select bank0
   887  03BC  1303               	bcf	3,6	;RP1=0, select bank0
   888  03BD  082A               	movf	?___ftpack,w
   889  03BE  00B2               	movwf	?___lwtoft
   890  03BF  082B               	movf	?___ftpack+1,w
   891  03C0  00B3               	movwf	?___lwtoft+1
   892  03C1  082C               	movf	?___ftpack+2,w
   893  03C2  00B4               	movwf	?___lwtoft+2
   894  03C3  0008               	return
   895  03C4                     __end_of___lwtoft:	
   896                           
   897                           	psect	text6
   898  01D1                     __ptext6:	
   899 ;; *************** function ___fttol *****************
   900 ;; Defined at:
   901 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  f1              3   38[BANK0 ] float 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  lval            4   47[BANK0 ] unsigned long 
   906 ;;  exp1            1   51[BANK0 ] unsigned char 
   907 ;;  sign1           1   46[BANK0 ] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  4   38[BANK0 ] long 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       4       0       0       0
   918 ;;      Locals:         0       6       0       0       0
   919 ;;      Temps:          0       4       0       0       0
   920 ;;      Totals:         0      14       0       0       0
   921 ;;Total ram usage:       14 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    3
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_setPosicaoAtual
   928 ;;		_setPosicaoDesejada
   929 ;;		_getPosicaoAtual
   930 ;;		_calculaVelocidade
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function ___fttol
   936  01D1                     ___fttol:	
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   940  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   941  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   942  01D3  0846               	movf	___fttol@f1,w
   943  01D4  00CA               	movwf	??___fttol
   944  01D5  0847               	movf	___fttol@f1+1,w
   945  01D6  00CB               	movwf	??___fttol+1
   946  01D7  0848               	movf	___fttol@f1+2,w
   947  01D8  00CC               	movwf	??___fttol+2
   948  01D9  1003               	clrc
   949  01DA  0D4B               	rlf	??___fttol+1,w
   950  01DB  0D4C               	rlf	??___fttol+2,w
   951  01DC  00CD               	movwf	??___fttol+3
   952  01DD  084D               	movf	??___fttol+3,w
   953  01DE  00D3               	movwf	___fttol@exp1
   954  01DF  0853               	movf	___fttol@exp1,w
   955  01E0  1D03               	btfss	3,2
   956  01E1  29EB               	goto	l931
   957  01E2  3000               	movlw	0
   958  01E3  00C9               	movwf	?___fttol+3
   959  01E4  3000               	movlw	0
   960  01E5  00C8               	movwf	?___fttol+2
   961  01E6  3000               	movlw	0
   962  01E7  00C7               	movwf	?___fttol+1
   963  01E8  3000               	movlw	0
   964  01E9  00C6               	movwf	?___fttol
   965  01EA  0008               	return
   966  01EB                     l931:	
   967  01EB  0846               	movf	___fttol@f1,w
   968  01EC  00CA               	movwf	??___fttol
   969  01ED  0847               	movf	___fttol@f1+1,w
   970  01EE  00CB               	movwf	??___fttol+1
   971  01EF  0848               	movf	___fttol@f1+2,w
   972  01F0  00CC               	movwf	??___fttol+2
   973  01F1  3017               	movlw	23
   974  01F2                     u745:	
   975  01F2  1003               	clrc
   976  01F3  0CCC               	rrf	??___fttol+2,f
   977  01F4  0CCB               	rrf	??___fttol+1,f
   978  01F5  0CCA               	rrf	??___fttol,f
   979  01F6  3EFF               	addlw	-1
   980  01F7  1D03               	skipz
   981  01F8  29F2               	goto	u745
   982  01F9  084A               	movf	??___fttol,w
   983  01FA  00CD               	movwf	??___fttol+3
   984  01FB  084D               	movf	??___fttol+3,w
   985  01FC  00CE               	movwf	___fttol@sign1
   986  01FD  17C7               	bsf	___fttol@f1+1,7
   987  01FE  30FF               	movlw	255
   988  01FF  05C6               	andwf	___fttol@f1,f
   989  0200  30FF               	movlw	255
   990  0201  05C7               	andwf	___fttol@f1+1,f
   991  0202  3000               	movlw	0
   992  0203  05C8               	andwf	___fttol@f1+2,f
   993  0204  0846               	movf	___fttol@f1,w
   994  0205  00CF               	movwf	___fttol@lval
   995  0206  0847               	movf	___fttol@f1+1,w
   996  0207  00D0               	movwf	___fttol@lval+1
   997  0208  0848               	movf	___fttol@f1+2,w
   998  0209  00D1               	movwf	___fttol@lval+2
   999  020A  01D2               	clrf	___fttol@lval+3
  1000  020B  308E               	movlw	142
  1001  020C  02D3               	subwf	___fttol@exp1,f
  1002  020D  1FD3               	btfss	___fttol@exp1,7
  1003  020E  2A2D               	goto	l951
  1004  020F  0853               	movf	___fttol@exp1,w
  1005  0210  3A80               	xorlw	128
  1006  0211  3E8F               	addlw	143
  1007  0212  1803               	skipnc
  1008  0213  2A1D               	goto	l949
  1009  0214  3000               	movlw	0
  1010  0215  00C9               	movwf	?___fttol+3
  1011  0216  3000               	movlw	0
  1012  0217  00C8               	movwf	?___fttol+2
  1013  0218  3000               	movlw	0
  1014  0219  00C7               	movwf	?___fttol+1
  1015  021A  3000               	movlw	0
  1016  021B  00C6               	movwf	?___fttol
  1017  021C  0008               	return
  1018  021D                     l949:	
  1019  021D  3001               	movlw	1
  1020  021E                     u775:	
  1021  021E  1003               	clrc
  1022  021F  0CD2               	rrf	___fttol@lval+3,f
  1023  0220  0CD1               	rrf	___fttol@lval+2,f
  1024  0221  0CD0               	rrf	___fttol@lval+1,f
  1025  0222  0CCF               	rrf	___fttol@lval,f
  1026  0223  3EFF               	addlw	-1
  1027  0224  1D03               	skipz
  1028  0225  2A1E               	goto	u775
  1029  0226  3001               	movlw	1
  1030  0227  00CA               	movwf	??___fttol
  1031  0228  084A               	movf	??___fttol,w
  1032  0229  07D3               	addwf	___fttol@exp1,f
  1033  022A  1903               	btfsc	3,2
  1034  022B  2A48               	goto	l959
  1035  022C  2A1D               	goto	l949
  1036  022D                     l951:	
  1037  022D  3018               	movlw	24
  1038  022E  0253               	subwf	___fttol@exp1,w
  1039  022F  1C03               	skipc
  1040  0230  2A45               	goto	l473
  1041  0231  3000               	movlw	0
  1042  0232  00C9               	movwf	?___fttol+3
  1043  0233  3000               	movlw	0
  1044  0234  00C8               	movwf	?___fttol+2
  1045  0235  3000               	movlw	0
  1046  0236  00C7               	movwf	?___fttol+1
  1047  0237  3000               	movlw	0
  1048  0238  00C6               	movwf	?___fttol
  1049  0239  0008               	return
  1050  023A                     l957:	
  1051  023A  3001               	movlw	1
  1052  023B  00CA               	movwf	??___fttol
  1053  023C                     u805:	
  1054  023C  1003               	clrc
  1055  023D  0DCF               	rlf	___fttol@lval,f
  1056  023E  0DD0               	rlf	___fttol@lval+1,f
  1057  023F  0DD1               	rlf	___fttol@lval+2,f
  1058  0240  0DD2               	rlf	___fttol@lval+3,f
  1059  0241  0BCA               	decfsz	??___fttol,f
  1060  0242  2A3C               	goto	u805
  1061  0243  3001               	movlw	1
  1062  0244  02D3               	subwf	___fttol@exp1,f
  1063  0245                     l473:	
  1064  0245  0853               	movf	___fttol@exp1,w
  1065  0246  1D03               	btfss	3,2
  1066  0247  2A3A               	goto	l957
  1067  0248                     l959:	
  1068  0248  084E               	movf	___fttol@sign1,w
  1069  0249  1903               	btfsc	3,2
  1070  024A  2A56               	goto	l963
  1071  024B  09CF               	comf	___fttol@lval,f
  1072  024C  09D0               	comf	___fttol@lval+1,f
  1073  024D  09D1               	comf	___fttol@lval+2,f
  1074  024E  09D2               	comf	___fttol@lval+3,f
  1075  024F  0ACF               	incf	___fttol@lval,f
  1076  0250  1903               	skipnz
  1077  0251  0AD0               	incf	___fttol@lval+1,f
  1078  0252  1903               	skipnz
  1079  0253  0AD1               	incf	___fttol@lval+2,f
  1080  0254  1903               	skipnz
  1081  0255  0AD2               	incf	___fttol@lval+3,f
  1082  0256                     l963:	
  1083  0256  0852               	movf	___fttol@lval+3,w
  1084  0257  00C9               	movwf	?___fttol+3
  1085  0258  0851               	movf	___fttol@lval+2,w
  1086  0259  00C8               	movwf	?___fttol+2
  1087  025A  0850               	movf	___fttol@lval+1,w
  1088  025B  00C7               	movwf	?___fttol+1
  1089  025C  084F               	movf	___fttol@lval,w
  1090  025D  00C6               	movwf	?___fttol
  1091  025E  0008               	return
  1092  025F                     __end_of___fttol:	
  1093                           
  1094                           	psect	text7
  1095  0119                     __ptext7:	
  1096 ;; *************** function ___ftdiv *****************
  1097 ;; Defined at:
  1098 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  f2              3   22[BANK0 ] float 
  1101 ;;  f1              3   25[BANK0 ] float 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  f3              3   33[BANK0 ] float 
  1104 ;;  sign            1   37[BANK0 ] unsigned char 
  1105 ;;  exp             1   36[BANK0 ] unsigned char 
  1106 ;;  cntr            1   32[BANK0 ] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  3   22[BANK0 ] float 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       6       0       0       0
  1117 ;;      Locals:         0       6       0       0       0
  1118 ;;      Temps:          0       4       0       0       0
  1119 ;;      Totals:         0      16       0       0       0
  1120 ;;Total ram usage:       16 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    4
  1123 ;; This function calls:
  1124 ;;		___ftpack
  1125 ;; This function is called by:
  1126 ;;		_setPosicaoAtual
  1127 ;;		_setPosicaoDesejada
  1128 ;;		_calculaVelocidade
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function ___ftdiv
  1134  0119                     ___ftdiv:	
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1138  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1139  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  011B  0839               	movf	___ftdiv@f1,w
  1141  011C  00BC               	movwf	??___ftdiv
  1142  011D  083A               	movf	___ftdiv@f1+1,w
  1143  011E  00BD               	movwf	??___ftdiv+1
  1144  011F  083B               	movf	___ftdiv@f1+2,w
  1145  0120  00BE               	movwf	??___ftdiv+2
  1146  0121  1003               	clrc
  1147  0122  0D3D               	rlf	??___ftdiv+1,w
  1148  0123  0D3E               	rlf	??___ftdiv+2,w
  1149  0124  00BF               	movwf	??___ftdiv+3
  1150  0125  083F               	movf	??___ftdiv+3,w
  1151  0126  00C4               	movwf	___ftdiv@exp
  1152  0127  0844               	movf	___ftdiv@exp,w
  1153  0128  1D03               	btfss	3,2
  1154  0129  2931               	goto	l889
  1155  012A  3000               	movlw	0
  1156  012B  00B6               	movwf	?___ftdiv
  1157  012C  3000               	movlw	0
  1158  012D  00B7               	movwf	?___ftdiv+1
  1159  012E  3000               	movlw	0
  1160  012F  00B8               	movwf	?___ftdiv+2
  1161  0130  0008               	return
  1162  0131                     l889:	
  1163  0131  0836               	movf	___ftdiv@f2,w
  1164  0132  00BC               	movwf	??___ftdiv
  1165  0133  0837               	movf	___ftdiv@f2+1,w
  1166  0134  00BD               	movwf	??___ftdiv+1
  1167  0135  0838               	movf	___ftdiv@f2+2,w
  1168  0136  00BE               	movwf	??___ftdiv+2
  1169  0137  1003               	clrc
  1170  0138  0D3D               	rlf	??___ftdiv+1,w
  1171  0139  0D3E               	rlf	??___ftdiv+2,w
  1172  013A  00BF               	movwf	??___ftdiv+3
  1173  013B  083F               	movf	??___ftdiv+3,w
  1174  013C  00C5               	movwf	___ftdiv@sign
  1175  013D  0845               	movf	___ftdiv@sign,w
  1176  013E  1D03               	btfss	3,2
  1177  013F  2947               	goto	l895
  1178  0140  3000               	movlw	0
  1179  0141  00B6               	movwf	?___ftdiv
  1180  0142  3000               	movlw	0
  1181  0143  00B7               	movwf	?___ftdiv+1
  1182  0144  3000               	movlw	0
  1183  0145  00B8               	movwf	?___ftdiv+2
  1184  0146  0008               	return
  1185  0147                     l895:	
  1186  0147  3000               	movlw	0
  1187  0148  00C1               	movwf	___ftdiv@f3
  1188  0149  3000               	movlw	0
  1189  014A  00C2               	movwf	___ftdiv@f3+1
  1190  014B  3000               	movlw	0
  1191  014C  00C3               	movwf	___ftdiv@f3+2
  1192  014D  3089               	movlw	137
  1193  014E  0745               	addwf	___ftdiv@sign,w
  1194  014F  00BC               	movwf	??___ftdiv
  1195  0150  083C               	movf	??___ftdiv,w
  1196  0151  02C4               	subwf	___ftdiv@exp,f
  1197  0152  0839               	movf	___ftdiv@f1,w
  1198  0153  00BC               	movwf	??___ftdiv
  1199  0154  083A               	movf	___ftdiv@f1+1,w
  1200  0155  00BD               	movwf	??___ftdiv+1
  1201  0156  083B               	movf	___ftdiv@f1+2,w
  1202  0157  00BE               	movwf	??___ftdiv+2
  1203  0158  3010               	movlw	16
  1204  0159                     u675:	
  1205  0159  1003               	clrc
  1206  015A  0CBE               	rrf	??___ftdiv+2,f
  1207  015B  0CBD               	rrf	??___ftdiv+1,f
  1208  015C  0CBC               	rrf	??___ftdiv,f
  1209  015D  3EFF               	addlw	-1
  1210  015E  1D03               	skipz
  1211  015F  2959               	goto	u675
  1212  0160  083C               	movf	??___ftdiv,w
  1213  0161  00BF               	movwf	??___ftdiv+3
  1214  0162  083F               	movf	??___ftdiv+3,w
  1215  0163  00C5               	movwf	___ftdiv@sign
  1216  0164  0836               	movf	___ftdiv@f2,w
  1217  0165  00BC               	movwf	??___ftdiv
  1218  0166  0837               	movf	___ftdiv@f2+1,w
  1219  0167  00BD               	movwf	??___ftdiv+1
  1220  0168  0838               	movf	___ftdiv@f2+2,w
  1221  0169  00BE               	movwf	??___ftdiv+2
  1222  016A  3010               	movlw	16
  1223  016B                     u685:	
  1224  016B  1003               	clrc
  1225  016C  0CBE               	rrf	??___ftdiv+2,f
  1226  016D  0CBD               	rrf	??___ftdiv+1,f
  1227  016E  0CBC               	rrf	??___ftdiv,f
  1228  016F  3EFF               	addlw	-1
  1229  0170  1D03               	skipz
  1230  0171  296B               	goto	u685
  1231  0172  083C               	movf	??___ftdiv,w
  1232  0173  00BF               	movwf	??___ftdiv+3
  1233  0174  083F               	movf	??___ftdiv+3,w
  1234  0175  06C5               	xorwf	___ftdiv@sign,f
  1235  0176  3080               	movlw	128
  1236  0177  00BC               	movwf	??___ftdiv
  1237  0178  083C               	movf	??___ftdiv,w
  1238  0179  05C5               	andwf	___ftdiv@sign,f
  1239  017A  17BA               	bsf	___ftdiv@f1+1,7
  1240  017B  30FF               	movlw	255
  1241  017C  05B9               	andwf	___ftdiv@f1,f
  1242  017D  30FF               	movlw	255
  1243  017E  05BA               	andwf	___ftdiv@f1+1,f
  1244  017F  3000               	movlw	0
  1245  0180  05BB               	andwf	___ftdiv@f1+2,f
  1246  0181  17B7               	bsf	___ftdiv@f2+1,7
  1247  0182  30FF               	movlw	255
  1248  0183  05B6               	andwf	___ftdiv@f2,f
  1249  0184  30FF               	movlw	255
  1250  0185  05B7               	andwf	___ftdiv@f2+1,f
  1251  0186  3000               	movlw	0
  1252  0187  05B8               	andwf	___ftdiv@f2+2,f
  1253  0188  3018               	movlw	24
  1254  0189  00BC               	movwf	??___ftdiv
  1255  018A  083C               	movf	??___ftdiv,w
  1256  018B  00C0               	movwf	___ftdiv@cntr
  1257  018C                     l909:	
  1258  018C  3001               	movlw	1
  1259  018D                     u695:	
  1260  018D  1003               	clrc
  1261  018E  0DC1               	rlf	___ftdiv@f3,f
  1262  018F  0DC2               	rlf	___ftdiv@f3+1,f
  1263  0190  0DC3               	rlf	___ftdiv@f3+2,f
  1264  0191  3EFF               	addlw	-1
  1265  0192  1D03               	skipz
  1266  0193  298D               	goto	u695
  1267  0194  0838               	movf	___ftdiv@f2+2,w
  1268  0195  023B               	subwf	___ftdiv@f1+2,w
  1269  0196  1D03               	skipz
  1270  0197  299E               	goto	u705
  1271  0198  0837               	movf	___ftdiv@f2+1,w
  1272  0199  023A               	subwf	___ftdiv@f1+1,w
  1273  019A  1D03               	skipz
  1274  019B  299E               	goto	u705
  1275  019C  0836               	movf	___ftdiv@f2,w
  1276  019D  0239               	subwf	___ftdiv@f1,w
  1277  019E                     u705:	
  1278  019E  1C03               	skipc
  1279  019F  29AB               	goto	l917
  1280  01A0  0836               	movf	___ftdiv@f2,w
  1281  01A1  02B9               	subwf	___ftdiv@f1,f
  1282  01A2  0837               	movf	___ftdiv@f2+1,w
  1283  01A3  1C03               	skipc
  1284  01A4  0F37               	incfsz	___ftdiv@f2+1,w
  1285  01A5  02BA               	subwf	___ftdiv@f1+1,f
  1286  01A6  0838               	movf	___ftdiv@f2+2,w
  1287  01A7  1C03               	skipc
  1288  01A8  0A38               	incf	___ftdiv@f2+2,w
  1289  01A9  02BB               	subwf	___ftdiv@f1+2,f
  1290  01AA  1441               	bsf	___ftdiv@f3,0
  1291  01AB                     l917:	
  1292  01AB  3001               	movlw	1
  1293  01AC                     u715:	
  1294  01AC  1003               	clrc
  1295  01AD  0DB9               	rlf	___ftdiv@f1,f
  1296  01AE  0DBA               	rlf	___ftdiv@f1+1,f
  1297  01AF  0DBB               	rlf	___ftdiv@f1+2,f
  1298  01B0  3EFF               	addlw	-1
  1299  01B1  1D03               	skipz
  1300  01B2  29AC               	goto	u715
  1301  01B3  3001               	movlw	1
  1302  01B4  02C0               	subwf	___ftdiv@cntr,f
  1303  01B5  1D03               	btfss	3,2
  1304  01B6  298C               	goto	l909
  1305  01B7  0841               	movf	___ftdiv@f3,w
  1306  01B8  00AA               	movwf	___ftpack@arg
  1307  01B9  0842               	movf	___ftdiv@f3+1,w
  1308  01BA  00AB               	movwf	___ftpack@arg+1
  1309  01BB  0843               	movf	___ftdiv@f3+2,w
  1310  01BC  00AC               	movwf	___ftpack@arg+2
  1311  01BD  0844               	movf	___ftdiv@exp,w
  1312  01BE  00BC               	movwf	??___ftdiv
  1313  01BF  083C               	movf	??___ftdiv,w
  1314  01C0  00AD               	movwf	___ftpack@exp
  1315  01C1  0845               	movf	___ftdiv@sign,w
  1316  01C2  00BD               	movwf	??___ftdiv+1
  1317  01C3  083D               	movf	??___ftdiv+1,w
  1318  01C4  00AE               	movwf	___ftpack@sign
  1319  01C5  120A  118A  225F   	fcall	___ftpack
  1320  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1321  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1322  01CA  082A               	movf	?___ftpack,w
  1323  01CB  00B6               	movwf	?___ftdiv
  1324  01CC  082B               	movf	?___ftpack+1,w
  1325  01CD  00B7               	movwf	?___ftdiv+1
  1326  01CE  082C               	movf	?___ftpack+2,w
  1327  01CF  00B8               	movwf	?___ftdiv+2
  1328  01D0  0008               	return
  1329  01D1                     __end_of___ftdiv:	
  1330                           
  1331                           	psect	text8
  1332  025F                     __ptext8:	
  1333 ;; *************** function ___ftpack *****************
  1334 ;; Defined at:
  1335 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  arg             3   10[BANK0 ] unsigned um
  1338 ;;  exp             1   13[BANK0 ] unsigned char 
  1339 ;;  sign            1   14[BANK0 ] unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  3   10[BANK0 ] float 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       5       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0       3       0       0       0
  1354 ;;      Totals:         0       8       0       0       0
  1355 ;;Total ram usage:        8 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    3
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		___ftdiv
  1362 ;;		___lwtoft
  1363 ;;		___ftmul
  1364 ;;		___awtoft
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function ___ftpack
  1370  025F                     ___ftpack:	
  1371                           
  1372                           ;incstack = 0
  1373                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1374  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0261  082D               	movf	___ftpack@exp,w
  1377  0262  1903               	btfsc	3,2
  1378  0263  2A69               	goto	l855
  1379  0264  082C               	movf	___ftpack@arg+2,w
  1380  0265  042B               	iorwf	___ftpack@arg+1,w
  1381  0266  042A               	iorwf	___ftpack@arg,w
  1382  0267  1D03               	skipz
  1383  0268  2A7C               	goto	l861
  1384  0269                     l855:	
  1385  0269  3000               	movlw	0
  1386  026A  00AA               	movwf	?___ftpack
  1387  026B  3000               	movlw	0
  1388  026C  00AB               	movwf	?___ftpack+1
  1389  026D  3000               	movlw	0
  1390  026E  00AC               	movwf	?___ftpack+2
  1391  026F  0008               	return
  1392  0270                     l859:	
  1393  0270  3001               	movlw	1
  1394  0271  00AF               	movwf	??___ftpack
  1395  0272  082F               	movf	??___ftpack,w
  1396  0273  07AD               	addwf	___ftpack@exp,f
  1397  0274  3001               	movlw	1
  1398  0275                     u555:	
  1399  0275  1003               	clrc
  1400  0276  0CAC               	rrf	___ftpack@arg+2,f
  1401  0277  0CAB               	rrf	___ftpack@arg+1,f
  1402  0278  0CAA               	rrf	___ftpack@arg,f
  1403  0279  3EFF               	addlw	-1
  1404  027A  1D03               	skipz
  1405  027B  2A75               	goto	u555
  1406  027C                     l861:	
  1407  027C  30FE               	movlw	254
  1408  027D  052C               	andwf	___ftpack@arg+2,w
  1409  027E  1903               	btfsc	3,2
  1410  027F  2A97               	goto	l382
  1411  0280  2A70               	goto	l859
  1412  0281                     l863:	
  1413  0281  3001               	movlw	1
  1414  0282  00AF               	movwf	??___ftpack
  1415  0283  082F               	movf	??___ftpack,w
  1416  0284  07AD               	addwf	___ftpack@exp,f
  1417  0285  3001               	movlw	1
  1418  0286  07AA               	addwf	___ftpack@arg,f
  1419  0287  3000               	movlw	0
  1420  0288  1803               	skipnc
  1421  0289  3001               	movlw	1
  1422  028A  07AB               	addwf	___ftpack@arg+1,f
  1423  028B  3000               	movlw	0
  1424  028C  1803               	skipnc
  1425  028D  3001               	movlw	1
  1426  028E  07AC               	addwf	___ftpack@arg+2,f
  1427  028F  3001               	movlw	1
  1428  0290                     u575:	
  1429  0290  1003               	clrc
  1430  0291  0CAC               	rrf	___ftpack@arg+2,f
  1431  0292  0CAB               	rrf	___ftpack@arg+1,f
  1432  0293  0CAA               	rrf	___ftpack@arg,f
  1433  0294  3EFF               	addlw	-1
  1434  0295  1D03               	skipz
  1435  0296  2A90               	goto	u575
  1436  0297                     l382:	
  1437  0297  30FF               	movlw	255
  1438  0298  052C               	andwf	___ftpack@arg+2,w
  1439  0299  1903               	btfsc	3,2
  1440  029A  2AA6               	goto	l871
  1441  029B  2A81               	goto	l863
  1442  029C                     l869:	
  1443  029C  3001               	movlw	1
  1444  029D  02AD               	subwf	___ftpack@exp,f
  1445  029E  3001               	movlw	1
  1446  029F                     u595:	
  1447  029F  1003               	clrc
  1448  02A0  0DAA               	rlf	___ftpack@arg,f
  1449  02A1  0DAB               	rlf	___ftpack@arg+1,f
  1450  02A2  0DAC               	rlf	___ftpack@arg+2,f
  1451  02A3  3EFF               	addlw	-1
  1452  02A4  1D03               	skipz
  1453  02A5  2A9F               	goto	u595
  1454  02A6                     l871:	
  1455  02A6  1BAB               	btfsc	___ftpack@arg+1,7
  1456  02A7  2AAC               	goto	l389
  1457  02A8  3002               	movlw	2
  1458  02A9  022D               	subwf	___ftpack@exp,w
  1459  02AA  1803               	skipnc
  1460  02AB  2A9C               	goto	l869
  1461  02AC                     l389:	
  1462  02AC  182D               	btfsc	___ftpack@exp,0
  1463  02AD  2AB4               	goto	l390
  1464  02AE  30FF               	movlw	255
  1465  02AF  05AA               	andwf	___ftpack@arg,f
  1466  02B0  307F               	movlw	127
  1467  02B1  05AB               	andwf	___ftpack@arg+1,f
  1468  02B2  30FF               	movlw	255
  1469  02B3  05AC               	andwf	___ftpack@arg+2,f
  1470  02B4                     l390:	
  1471  02B4  1003               	clrc
  1472  02B5  0CAD               	rrf	___ftpack@exp,f
  1473  02B6  082D               	movf	___ftpack@exp,w
  1474  02B7  00AF               	movwf	??___ftpack
  1475  02B8  01B0               	clrf	??___ftpack+1
  1476  02B9  01B1               	clrf	??___ftpack+2
  1477  02BA  3010               	movlw	16
  1478  02BB                     u635:	
  1479  02BB  1003               	clrc
  1480  02BC  0DAF               	rlf	??___ftpack,f
  1481  02BD  0DB0               	rlf	??___ftpack+1,f
  1482  02BE  0DB1               	rlf	??___ftpack+2,f
  1483  02BF  3EFF               	addlw	-1
  1484  02C0  1D03               	skipz
  1485  02C1  2ABB               	goto	u635
  1486  02C2  082F               	movf	??___ftpack,w
  1487  02C3  04AA               	iorwf	___ftpack@arg,f
  1488  02C4  0830               	movf	??___ftpack+1,w
  1489  02C5  04AB               	iorwf	___ftpack@arg+1,f
  1490  02C6  0831               	movf	??___ftpack+2,w
  1491  02C7  04AC               	iorwf	___ftpack@arg+2,f
  1492  02C8  082E               	movf	___ftpack@sign,w
  1493  02C9  1903               	btfsc	3,2
  1494  02CA  0008               	return
  1495  02CB  17AC               	bsf	___ftpack@arg+2,7
  1496  02CC  0008               	return
  1497  02CD                     __end_of___ftpack:	
  1498                           
  1499                           	psect	text9
  1500  0026                     __ptext9:	
  1501 ;; *************** function _ISR *****************
  1502 ;; Defined at:
  1503 ;;		line 18 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +main.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       0       0       0       0
  1518 ;;      Locals:         0      10       0       0       0
  1519 ;;      Temps:          7       0       0       0       0
  1520 ;;      Totals:         7      10       0       0       0
  1521 ;;Total ram usage:       17 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    2
  1524 ;; This function calls:
  1525 ;;		_calculaErro
  1526 ;; This function is called by:
  1527 ;;		Interrupt level 1
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _ISR
  1533  0026                     _ISR:	
  1534                           
  1535                           ;main.c: 20: calculaErro();
  1536  0026  120A  118A  22CD  120A  118A  	fcall	_calculaErro
  1537                           
  1538                           ;main.c: 22: if(speed_ramp > 10){
  1539  002B  300B               	movlw	11
  1540  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1541  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1542  002E  025D               	subwf	_speed_ramp,w
  1543  002F  1C03               	skipc
  1544  0030  2850               	goto	i1l1029
  1545                           
  1546                           ;main.c: 23: poscaler_virtual_pv = (poscaler_virtual_pv == 1) ? 1 : poscaler_virtual_pv-
      +                          1;
  1547  0031  0361               	decf	_poscaler_virtual_pv,w
  1548  0032  1903               	btfsc	3,2
  1549  0033  283C               	goto	i1l1023
  1550  0034  0861               	movf	_poscaler_virtual_pv,w
  1551  0035  3EFF               	addlw	255
  1552  0036  00A0               	movwf	_ISR$223
  1553  0037  30FF               	movlw	255
  1554  0038  1803               	skipnc
  1555  0039  3000               	movlw	0
  1556  003A  00A1               	movwf	_ISR$223+1
  1557  003B  2840               	goto	i1l88
  1558  003C                     i1l1023:	
  1559  003C  3001               	movlw	1
  1560  003D  00A0               	movwf	_ISR$223
  1561  003E  3000               	movlw	0
  1562  003F  00A1               	movwf	_ISR$223+1
  1563  0040                     i1l88:	
  1564  0040  0820               	movf	_ISR$223,w
  1565  0041  00F6               	movwf	??_ISR
  1566  0042  0876               	movf	??_ISR,w
  1567  0043  00E1               	movwf	_poscaler_virtual_pv
  1568                           
  1569                           ;main.c: 24: if(!poscaler_virtual_pv ){
  1570  0044  0861               	movf	_poscaler_virtual_pv,w
  1571  0045  1D03               	btfss	3,2
  1572  0046  284B               	goto	i1l89
  1573                           
  1574                           ;main.c: 25: PR2-= 50;
  1575  0047  3032               	movlw	50
  1576  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1578  004A  0292               	subwf	18,f	;volatile
  1579  004B                     i1l89:	
  1580                           
  1581                           ;main.c: 26: }
  1582                           ;main.c: 27: speed_ramp++;
  1583  004B  3001               	movlw	1
  1584  004C  00F6               	movwf	??_ISR
  1585  004D  0876               	movf	??_ISR,w
  1586  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1587  004F  07DD               	addwf	_speed_ramp,f
  1588  0050                     i1l1029:	
  1589                           
  1590                           ;main.c: 28: }
  1591                           ;main.c: 30: if(poscaler_virtual == poscaler_virtual_pv-1 || poscaler_virtual_pv == 1){
  1592  0050  0861               	movf	_poscaler_virtual_pv,w
  1593  0051  3EFF               	addlw	255
  1594  0052  00F6               	movwf	??_ISR
  1595  0053  30FF               	movlw	255
  1596  0054  1803               	skipnc
  1597  0055  3000               	movlw	0
  1598  0056  00F7               	movwf	??_ISR+1
  1599  0057  085C               	movf	_poscaler_virtual,w
  1600  0058  0676               	xorwf	??_ISR,w
  1601  0059  0477               	iorwf	??_ISR+1,w
  1602  005A  1D03               	btfss	3,2
  1603  005B  0361               	decf	_poscaler_virtual_pv,w
  1604  005C  1D03               	btfss	3,2
  1605  005D  2909               	goto	i1l1085
  1606                           
  1607                           ;main.c: 31: if(error > 0){
  1608  005E  0859               	movf	_error+1,w
  1609  005F  3A80               	xorlw	128
  1610  0060  00FF               	movwf	127
  1611  0061  3080               	movlw	128
  1612  0062  027F               	subwf	127,w
  1613  0063  1D03               	skipz
  1614  0064  2867               	goto	u93_25
  1615  0065  3001               	movlw	1
  1616  0066  0258               	subwf	_error,w
  1617  0067                     u93_25:	
  1618  0067  1C03               	skipc
  1619  0068  28B5               	goto	i1l1057
  1620                           
  1621                           ;main.c: 32: STATUSbits.C = 0;
  1622  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1623  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1624  006B  1003               	bcf	3,0	;volatile
  1625                           
  1626                           ;main.c: 33: phase = (phase == 0) ? 1 : phase;
  1627  006C  085E               	movf	_phase,w
  1628  006D  1903               	btfsc	3,2
  1629  006E  2876               	goto	i1l1041
  1630  006F  085E               	movf	_phase,w
  1631  0070  00F6               	movwf	??_ISR
  1632  0071  01F7               	clrf	??_ISR+1
  1633  0072  0876               	movf	??_ISR,w
  1634  0073  00A2               	movwf	_ISR$231
  1635  0074  0877               	movf	??_ISR+1,w
  1636  0075  2879               	goto	L1
  1637  0076                     i1l1041:	
  1638  0076  3001               	movlw	1
  1639  0077  00A2               	movwf	_ISR$231
  1640  0078  3000               	movlw	0
  1641  0079                     L1:	
  1642  0079  00A3               	movwf	_ISR$231+1
  1643  007A  0822               	movf	_ISR$231,w
  1644  007B  00F6               	movwf	??_ISR
  1645  007C  0876               	movf	??_ISR,w
  1646  007D  00DE               	movwf	_phase
  1647                           
  1648                           ;main.c: 34: phase = (phase == 8) ? phase >> 3 : phase << 1;
  1649  007E  3008               	movlw	8
  1650  007F  065E               	xorwf	_phase,w
  1651  0080  1903               	btfsc	3,2
  1652  0081  288A               	goto	i1l1047
  1653  0082  085E               	movf	_phase,w
  1654  0083  00F6               	movwf	??_ISR
  1655  0084  01F7               	clrf	??_ISR+1
  1656  0085  1003               	clrc
  1657  0086  0D76               	rlf	??_ISR,w
  1658  0087  00A4               	movwf	_ISR$232
  1659  0088  0D77               	rlf	??_ISR+1,w
  1660  0089  2898               	goto	L2
  1661  008A                     i1l1047:	
  1662  008A  085E               	movf	_phase,w
  1663  008B  00F6               	movwf	??_ISR
  1664  008C  3003               	movlw	3
  1665  008D                     u96_25:	
  1666  008D  1003               	clrc
  1667  008E  0CF6               	rrf	??_ISR,f
  1668  008F  3EFF               	addlw	-1
  1669  0090  1D03               	skipz
  1670  0091  288D               	goto	u96_25
  1671  0092  0876               	movf	??_ISR,w
  1672  0093  00F7               	movwf	??_ISR+1
  1673  0094  01F8               	clrf	??_ISR+2
  1674  0095  0877               	movf	??_ISR+1,w
  1675  0096  00A4               	movwf	_ISR$232
  1676  0097  0878               	movf	??_ISR+2,w
  1677  0098                     L2:	
  1678  0098  00A5               	movwf	_ISR$232+1
  1679  0099  0824               	movf	_ISR$232,w
  1680  009A  00F6               	movwf	??_ISR
  1681  009B  0876               	movf	??_ISR,w
  1682  009C  00DE               	movwf	_phase
  1683                           
  1684                           ;main.c: 35: position = ((position + 1)== 2048) ? 0 : (position + 1);
  1685  009D  085F               	movf	_position,w
  1686  009E  3E01               	addlw	1
  1687  009F  00F6               	movwf	??_ISR
  1688  00A0  0860               	movf	_position+1,w
  1689  00A1  1803               	skipnc
  1690  00A2  3E01               	addlw	1
  1691  00A3  3E00               	addlw	0
  1692  00A4  00F7               	movwf	??_ISR+1
  1693  00A5  3008               	movlw	8
  1694  00A6  0677               	xorwf	??_ISR+1,w
  1695  00A7  0476               	iorwf	??_ISR,w
  1696  00A8  1903               	btfsc	3,2
  1697  00A9  28B3               	goto	i1l1055
  1698  00AA  085F               	movf	_position,w
  1699  00AB  3E01               	addlw	1
  1700  00AC  00DF               	movwf	_position
  1701  00AD  0860               	movf	_position+1,w
  1702  00AE  1803               	skipnc
  1703  00AF  3E01               	addlw	1
  1704  00B0  3E00               	addlw	0
  1705  00B1  00E0               	movwf	_position+1
  1706  00B2  28B5               	goto	i1l1057
  1707  00B3                     i1l1055:	
  1708  00B3  01DF               	clrf	_position
  1709  00B4  01E0               	clrf	_position+1
  1710  00B5                     i1l1057:	
  1711                           
  1712                           ;main.c: 36: }
  1713                           ;main.c: 38: if(error < 0){
  1714  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1715  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1716  00B7  1FD9               	btfss	_error+1,7
  1717  00B8  2906               	goto	i1l1081
  1718                           
  1719                           ;main.c: 39: STATUSbits.C = 0;
  1720  00B9  1003               	bcf	3,0	;volatile
  1721                           
  1722                           ;main.c: 40: phase = (phase == 0) ? 8 : phase;
  1723  00BA  085E               	movf	_phase,w
  1724  00BB  1903               	btfsc	3,2
  1725  00BC  28C4               	goto	i1l1065
  1726  00BD  085E               	movf	_phase,w
  1727  00BE  00F6               	movwf	??_ISR
  1728  00BF  01F7               	clrf	??_ISR+1
  1729  00C0  0876               	movf	??_ISR,w
  1730  00C1  00A6               	movwf	_ISR$233
  1731  00C2  0877               	movf	??_ISR+1,w
  1732  00C3  28C7               	goto	L3
  1733  00C4                     i1l1065:	
  1734  00C4  3008               	movlw	8
  1735  00C5  00A6               	movwf	_ISR$233
  1736  00C6  3000               	movlw	0
  1737  00C7                     L3:	
  1738  00C7  00A7               	movwf	_ISR$233+1
  1739  00C8  0826               	movf	_ISR$233,w
  1740  00C9  00F6               	movwf	??_ISR
  1741  00CA  0876               	movf	??_ISR,w
  1742  00CB  00DE               	movwf	_phase
  1743                           
  1744                           ;main.c: 41: phase = (phase == 1) ? phase << 3 : phase >> 1;
  1745  00CC  035E               	decf	_phase,w
  1746  00CD  1903               	btfsc	3,2
  1747  00CE  28D9               	goto	i1l1071
  1748  00CF  085E               	movf	_phase,w
  1749  00D0  00F6               	movwf	??_ISR
  1750  00D1  1003               	clrc
  1751  00D2  0C76               	rrf	??_ISR,w
  1752  00D3  00F7               	movwf	??_ISR+1
  1753  00D4  01F8               	clrf	??_ISR+2
  1754  00D5  0877               	movf	??_ISR+1,w
  1755  00D6  00A8               	movwf	_ISR$234
  1756  00D7  0878               	movf	??_ISR+2,w
  1757  00D8  28E8               	goto	L4
  1758  00D9                     i1l1071:	
  1759  00D9  085E               	movf	_phase,w
  1760  00DA  00F6               	movwf	??_ISR
  1761  00DB  01F7               	clrf	??_ISR+1
  1762  00DC  1003               	clrc
  1763  00DD  0DF6               	rlf	??_ISR,f
  1764  00DE  0DF7               	rlf	??_ISR+1,f
  1765  00DF  1003               	clrc
  1766  00E0  0DF6               	rlf	??_ISR,f
  1767  00E1  0DF7               	rlf	??_ISR+1,f
  1768  00E2  1003               	clrc
  1769  00E3  0DF6               	rlf	??_ISR,f
  1770  00E4  0DF7               	rlf	??_ISR+1,f
  1771  00E5  0876               	movf	??_ISR,w
  1772  00E6  00A8               	movwf	_ISR$234
  1773  00E7  0877               	movf	??_ISR+1,w
  1774  00E8                     L4:	
  1775  00E8  00A9               	movwf	_ISR$234+1
  1776  00E9  0828               	movf	_ISR$234,w
  1777  00EA  00F6               	movwf	??_ISR
  1778  00EB  0876               	movf	??_ISR,w
  1779  00EC  00DE               	movwf	_phase
  1780                           
  1781                           ;main.c: 42: position = ((position - 1)== -1) ? 2047 : (position - 1);
  1782  00ED  085F               	movf	_position,w
  1783  00EE  3EFF               	addlw	255
  1784  00EF  00F6               	movwf	??_ISR
  1785  00F0  0860               	movf	_position+1,w
  1786  00F1  1803               	skipnc
  1787  00F2  3E01               	addlw	1
  1788  00F3  3EFF               	addlw	255
  1789  00F4  00F7               	movwf	??_ISR+1
  1790  00F5  0A76               	incf	??_ISR,w
  1791  00F6  1903               	btfsc	3,2
  1792  00F7  0A77               	incf	??_ISR+1,w
  1793  00F8  1903               	btfsc	3,2
  1794  00F9  2902               	goto	i1l1079
  1795  00FA  085F               	movf	_position,w
  1796  00FB  3EFF               	addlw	255
  1797  00FC  00DF               	movwf	_position
  1798  00FD  0860               	movf	_position+1,w
  1799  00FE  1803               	skipnc
  1800  00FF  3E01               	addlw	1
  1801  0100  3EFF               	addlw	255
  1802  0101  2905               	goto	L5
  1803  0102                     i1l1079:	
  1804  0102  30FF               	movlw	255
  1805  0103  00DF               	movwf	_position
  1806  0104  3007               	movlw	7
  1807  0105                     L5:	
  1808  0105  00E0               	movwf	_position+1
  1809  0106                     i1l1081:	
  1810                           
  1811                           ;main.c: 43: }
  1812                           ;main.c: 45: poscaler_virtual = 0;
  1813  0106  01DC               	clrf	_poscaler_virtual
  1814                           
  1815                           ;main.c: 47: PORTD = phase;
  1816  0107  085E               	movf	_phase,w
  1817  0108  0088               	movwf	8	;volatile
  1818  0109                     i1l1085:	
  1819                           
  1820                           ;main.c: 48: }
  1821                           ;main.c: 50: poscaler_virtual++;
  1822  0109  3001               	movlw	1
  1823  010A  00F6               	movwf	??_ISR
  1824  010B  0876               	movf	??_ISR,w
  1825  010C  07DC               	addwf	_poscaler_virtual,f
  1826                           
  1827                           ;main.c: 52: PIR1bits.TMR2IF = 0;
  1828  010D  108C               	bcf	12,1	;volatile
  1829  010E  087C               	movf	??_ISR+6,w
  1830  010F  00FF               	movwf	127
  1831  0110  087B               	movf	??_ISR+5,w
  1832  0111  008A               	movwf	10
  1833  0112  087A               	movf	??_ISR+4,w
  1834  0113  0084               	movwf	4
  1835  0114  0E79               	swapf	(??_ISR+3)^(0+-128),w
  1836  0115  0083               	movwf	3
  1837  0116  0EFE               	swapf	126,f
  1838  0117  0E7E               	swapf	126,w
  1839  0118  0009               	retfie
  1840  0119                     __end_of_ISR:	
  1841                           
  1842                           	psect	intentry
  1843  0004                     __pintentry:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1846                           
  1847  0004                     interrupt_function:	
  1848  007E                     saved_w	set	btemp
  1849  0004  00FE               	movwf	btemp
  1850  0005  0E03               	swapf	3,w
  1851  0006  00F9               	movwf	??_ISR+3
  1852  0007  0804               	movf	4,w
  1853  0008  00FA               	movwf	??_ISR+4
  1854  0009  080A               	movf	10,w
  1855  000A  00FB               	movwf	??_ISR+5
  1856  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1857  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1858  000D  087F               	movf	btemp+1,w
  1859  000E  00FC               	movwf	??_ISR+6
  1860  000F  120A  118A  2826   	ljmp	_ISR
  1861                           
  1862                           	psect	text10
  1863  02CD                     __ptext10:	
  1864 ;; *************** function _calculaErro *****************
  1865 ;; Defined at:
  1866 ;;		line 31 in file "D:\Drive\00_UNIFEI\2022.1\Lab. de Microcontroladores\Projeto\stepper_motor-pic16f887\stepper_motor\
      +stepper.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0
  1882 ;;      Temps:          2       0       0       0       0
  1883 ;;      Totals:         2       0       0       0       0
  1884 ;;Total ram usage:        2 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    1
  1887 ;; This function calls:
  1888 ;;		_abs
  1889 ;; This function is called by:
  1890 ;;		_ISR
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _calculaErro
  1896  02CD                     _calculaErro:	
  1897                           
  1898                           ;stepper.c: 32: error = abs(position - setpoint);
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _calculaErro: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1902  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1903  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1904  02CF  095A               	comf	_setpoint,w
  1905  02D0  00F4               	movwf	??_calculaErro
  1906  02D1  095B               	comf	_setpoint+1,w
  1907  02D2  00F5               	movwf	??_calculaErro+1
  1908  02D3  0AF4               	incf	??_calculaErro,f
  1909  02D4  1903               	skipnz
  1910  02D5  0AF5               	incf	??_calculaErro+1,f
  1911  02D6  085F               	movf	_position,w
  1912  02D7  0774               	addwf	??_calculaErro,w
  1913  02D8  00F0               	movwf	abs@a
  1914  02D9  0860               	movf	_position+1,w
  1915  02DA  1803               	skipnc
  1916  02DB  0A60               	incf	_position+1,w
  1917  02DC  0775               	addwf	??_calculaErro+1,w
  1918  02DD  00F1               	movwf	abs@a+1
  1919  02DE  120A  118A  23E3  120A  118A  	fcall	_abs
  1920  02E3  0871               	movf	?_abs+1,w
  1921  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1922  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1923  02E6  00D9               	movwf	_error+1
  1924  02E7  0870               	movf	?_abs,w
  1925  02E8  00D8               	movwf	_error
  1926                           
  1927                           ;stepper.c: 34: if(setpoint > position && error > 2048)
  1928  02E9  085B               	movf	_setpoint+1,w
  1929  02EA  0260               	subwf	_position+1,w
  1930  02EB  1D03               	skipz
  1931  02EC  2AEF               	goto	u84_25
  1932  02ED  085A               	movf	_setpoint,w
  1933  02EE  025F               	subwf	_position,w
  1934  02EF                     u84_25:	
  1935  02EF  1803               	skipnc
  1936  02F0  2B03               	goto	i1l999
  1937  02F1  0859               	movf	_error+1,w
  1938  02F2  3A80               	xorlw	128
  1939  02F3  00FF               	movwf	127
  1940  02F4  3088               	movlw	136
  1941  02F5  027F               	subwf	127,w
  1942  02F6  1D03               	skipz
  1943  02F7  2AFA               	goto	u85_25
  1944  02F8  3001               	movlw	1
  1945  02F9  0258               	subwf	_error,w
  1946  02FA                     u85_25:	
  1947  02FA  1C03               	skipc
  1948  02FB  2B03               	goto	i1l999
  1949                           
  1950                           ;stepper.c: 35: error = -error;
  1951  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1952  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1953  02FE  09D8               	comf	_error,f
  1954  02FF  09D9               	comf	_error+1,f
  1955  0300  0AD8               	incf	_error,f
  1956  0301  1903               	skipnz
  1957  0302  0AD9               	incf	_error+1,f
  1958  0303                     i1l999:	
  1959                           
  1960                           ;stepper.c: 37: if(setpoint < position && error < 2048)
  1961  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0305  0860               	movf	_position+1,w
  1964  0306  025B               	subwf	_setpoint+1,w
  1965  0307  1D03               	skipz
  1966  0308  2B0B               	goto	u86_25
  1967  0309  085F               	movf	_position,w
  1968  030A  025A               	subwf	_setpoint,w
  1969  030B                     u86_25:	
  1970  030B  1803               	skipnc
  1971  030C  0008               	return
  1972  030D  0859               	movf	_error+1,w
  1973  030E  3A80               	xorlw	128
  1974  030F  00FF               	movwf	127
  1975  0310  3088               	movlw	136
  1976  0311  027F               	subwf	127,w
  1977  0312  1D03               	skipz
  1978  0313  2B16               	goto	u87_25
  1979  0314  3000               	movlw	0
  1980  0315  0258               	subwf	_error,w
  1981  0316                     u87_25:	
  1982  0316  1803               	skipnc
  1983  0317  0008               	return
  1984                           
  1985                           ;stepper.c: 38: error = -error;
  1986  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1988  031A  09D8               	comf	_error,f
  1989  031B  09D9               	comf	_error+1,f
  1990  031C  0AD8               	incf	_error,f
  1991  031D  1903               	skipnz
  1992  031E  0AD9               	incf	_error+1,f
  1993  031F  0008               	return
  1994  0320                     __end_of_calculaErro:	
  1995                           
  1996                           	psect	text11
  1997  03E3                     __ptext11:	
  1998 ;; *************** function _abs *****************
  1999 ;; Defined at:
  2000 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  a               2    0[COMMON] int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2    0[COMMON] int 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         2       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          2       0       0       0       0
  2017 ;;      Totals:         4       0       0       0       0
  2018 ;;Total ram usage:        4 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_calculaErro
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _abs
  2029  03E3                     _abs:	
  2030                           
  2031                           ;incstack = 0
  2032                           ; Regs used in _abs: [wreg+status,2+status,0]
  2033  03E3  1FF1               	btfss	abs@a+1,7
  2034  03E4  0008               	return
  2035  03E5  0970               	comf	abs@a,w
  2036  03E6  00F2               	movwf	??_abs
  2037  03E7  0971               	comf	abs@a+1,w
  2038  03E8  00F3               	movwf	??_abs+1
  2039  03E9  0AF2               	incf	??_abs,f
  2040  03EA  1903               	skipnz
  2041  03EB  0AF3               	incf	??_abs+1,f
  2042  03EC  0872               	movf	??_abs,w
  2043  03ED  00F0               	movwf	?_abs
  2044  03EE  0873               	movf	??_abs+1,w
  2045  03EF  00F1               	movwf	?_abs+1
  2046  03F0  0008               	return
  2047  03F1                     __end_of_abs:	
  2048  007E                     btemp	set	126	;btemp
  2049  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         9
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     54      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_calculaErro
    _calculaErro->_abs

Critical Paths under _main in BANK0

    _main->_setPosicaoDesejada
    _setup->_setPosicaoAtual
    _setPosicaoAtual->___fttol
    _setPosicaoDesejada->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9494
                 _setPosicaoDesejada
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4694
                    _setPosicaoAtual
                       _setupStepper
 ---------------------------------------------------------------------------------
 (2) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPosicaoAtual                                      2     0      2    4694
                                             52 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _setPosicaoDesejada                                   2     0      2    4800
                                             52 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1816
                                             18 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     464
                                             38 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2339
                                             22 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1635
                                             10 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 17    17      0     239
                                              6 COMMON     7     7      0
                                              0 BANK0     10    10      0
                        _calculaErro
 ---------------------------------------------------------------------------------
 (6) _calculaErro                                          2     2      0     119
                                              4 COMMON     2     2      0
                                _abs
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     119
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setPosicaoDesejada
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _setup
     _setPosicaoAtual
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _setupStepper

 _ISR (ROOT)
   _calculaErro
     _abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4F      12        0.0%
ABS                  0      0      4F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 12 08:47:26 2022

                       __CFG_CP$OFF 0000                                 l390 02B4  
                               l382 0297                                 l473 0245  
                               l389 02AC                                 l931 01EB  
                               l861 027C                                 l917 01AB  
                               l909 018C                                 l871 02A6  
                               l863 0281                                 l855 0269  
                               l951 022D                                 l859 0270  
                               l963 0256                                 l869 029C  
                               l957 023A                                 l949 021D  
                               l895 0147                                 l959 0248  
                               l889 0131                                 _PR2 0092  
                      __CFG_CPD$OFF 0000                                 _ISR 0026  
                               u705 019E                                 u635 02BB  
                               u555 0275                                 u715 01AC  
                               u805 023C                                 u575 0290  
                               u745 01F2                                 u595 029F  
                               u675 0159                                 u685 016B  
                               u695 018D                                 u775 021E  
                               _abs 03E3                                 fsr0 0004  
                      __CFG_IESO$ON 0000                        __CFG_LVP$OFF 0000  
                              ?_ISR 0070                        ___ftdiv@cntr 0040  
                      ___ftdiv@sign 0045                                ?_abs 0070  
                              l1091 0385                                l1095 0391  
                              l1099 039E                                i1l88 0040  
                              i1l89 004B                        __CFG_WRT$OFF 0000  
                     __CFG_FCMEN$ON 0000                                abs@a 0070  
                              _main 0380                        ___ftpack@arg 002A  
                      ___ftpack@exp 002D                                btemp 007E  
                     __CFG_BOREN$ON 0000                                start 0012  
                     __CFG_MCLRE$ON 0000                               ??_ISR 0076  
                      ___fttol@exp1 0053                               ??_abs 0072  
                      ___fttol@lval 004F                __size_of_calculaErro 0053  
                             ?_main 0070                       __CFG_WDTE$OFF 0000  
                   __end_of___ftdiv 01D1                     __end_of___fttol 025F  
                             _T2CON 0012                      __CFG_DEBUG$OFF 0000  
                             i1l999 0303                               _PORTD 0008  
                             _TRISD 0088                               u84_25 02EF  
                             u85_25 02FA                               u93_25 0067  
                             u86_25 030B                               u87_25 0316  
                             u96_25 008D                               _error 0058  
                             _phase 005E                       ___ftpack@sign 002E  
                             _speed 0056                               _setup 03D5  
                             pclath 000A                               status 0003  
                             wtemp0 007E                     __initialization 0015  
                      __end_of_main 03AC                              ??_main 0056  
                     ___fttol@sign1 004E            __size_of_setPosicaoAtual 0030  
                            ?_setup 0070                    __end_of___ftpack 02CD  
                            i1l1023 003C                              i1l1041 0076  
                            i1l1029 0050                              i1l1071 00D9  
                            i1l1055 00B3                              i1l1047 008A  
                            i1l1065 00C4                              i1l1081 0106  
                            i1l1057 00B5                              i1l1085 0109  
                            i1l1079 0102                    __end_of___lwtoft 03C4  
        __end_of_setPosicaoDesejada 0380                      __CFG_PWRTE$OFF 0000  
                         ??___ftdiv 003C                           ??___fttol 004A  
                            saved_w 007E             __end_of__initialization 0022  
                        ___ftdiv@f1 0039                          ___ftdiv@f2 0036  
                        ___ftdiv@f3 0041                          ___fttol@f1 0046  
                    __pcstackCOMMON 0070                        __pidataBANK0 03F1  
                     __end_of_setup 03E3                          ___lwtoft@c 0032  
                           ??_setup 0056                          __pbssBANK0 0056  
                 ??_setPosicaoAtual 0056                          __pmaintext 0380  
                        __pintentry 0004                           ?___ftpack 002A  
                         ?___lwtoft 0032                             _ISR$231 0022  
                           _ISR$223 0020                             _ISR$232 0024  
                           _ISR$233 0026                             _ISR$234 0028  
                     ??_calculaErro 0074                             ___ftdiv 0119  
                           ___fttol 01D1                          ??___ftpack 002F  
                           __ptext1 03D5                             __ptext2 03C4  
                           __ptext3 0320                             __ptext4 0350  
                           __ptext5 03AC                             __ptext6 01D1  
                           __ptext7 0119                             __ptext8 025F  
                           __ptext9 0026  setPosicaoDesejada@posicao_desejada 0054  
                        ??___lwtoft 0035                        __size_of_ISR 00F3  
                      __size_of_abs 000E                end_of_initialization 0022  
                _setPosicaoDesejada 0350                          _speed_ramp 005D  
                     ?_setupStepper 0070                           _PORTDbits 0008  
               __end_of_calculaErro 0320                 ?_setPosicaoDesejada 0054  
                       ___ftdiv@exp 0044                ??_setPosicaoDesejada 0056  
                    ??_setupStepper 002A                 _poscaler_virtual_pv 0061  
                   _setPosicaoAtual 0320                 start_initialization 0015  
                       __end_of_ISR 0119                         __end_of_abs 03F1  
          __CFG_FOSC$INTRC_NOCLKOUT 0000                         _calculaErro 02CD  
                       __pdataBANK0 0061                   __size_of___ftpack 006E  
                         ___latbits 0002                   __size_of___lwtoft 0018  
                     __pcstackBANK0 0020                           __pnvBANK0 005F  
                          ?___ftdiv 0036                            ?___fttol 0046  
           __end_of_setPosicaoAtual 0350                      __size_of_setup 000E  
                 interrupt_function 0004                __end_of_setupStepper 03D5  
                          _PIE1bits 008C                            _PIR1bits 000C  
                  __size_of___ftdiv 00B8                    ?_setPosicaoAtual 0054  
                  __size_of___fttol 008E                            ___ftpack 025F  
                  _poscaler_virtual 005C                            ___lwtoft 03AC  
                          __ptext10 02CD                            __ptext11 03E3  
                 __CFG_BOR4V$BOR40V 0000                       __size_of_main 002C  
       __size_of_setPosicaoDesejada 0030                            _setpoint 005A  
                          _position 005F                        ?_calculaErro 0070  
      setPosicaoAtual@posicao_atual 0054                          _INTCONbits 000B  
             __size_of_setupStepper 0011                            intlevel1 0000  
                      _setupStepper 03C4                          _STATUSbits 0003  



Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 12 15:15:22 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217                           
   218                           	psect	nvBANK0
   219  005C                     __pnvBANK0:	
   220  005C                     _position:	
   221  005C                     	ds	2
   222  0008                     _PORTDbits	set	8
   223  0003                     _STATUSbits	set	3
   224  0012                     _T2CON	set	18
   225  000C                     _PIR1bits	set	12
   226  000B                     _INTCONbits	set	11
   227  0008                     _PORTD	set	8
   228  008C                     _PIE1bits	set	140
   229  0088                     _TRISD	set	136
   230  0092                     _PR2	set	146
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  07F2                     start_initialization:	
   236  07F2                     __initialization:	
   237                           
   238                           ; Clear objects allocated to BANK0
   239  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   240  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   241  07F4  01D4               	clrf	__pbssBANK0& (0+127)
   242  07F5  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   243  07F6  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   244  07F7  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   245  07F8  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   246  07F9  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   247  07FA  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   248  07FB  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   249  07FC                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  07FC                     __end_of__initialization:	
   253  07FC  0183               	clrf	3
   254  07FD  120A  118A  2C42   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssBANK0
   257  0054                     __pbssBANK0:	
   258  0054                     _speed:	
   259  0054                     	ds	2
   260  0056                     _error:	
   261  0056                     	ds	2
   262  0058                     _setpoint:	
   263  0058                     	ds	2
   264  005A                     _speed_ramp:	
   265  005A                     	ds	1
   266  005B                     _phase:	
   267  005B                     	ds	1
   268                           
   269                           	psect	cstackCOMMON
   270  0071                     __pcstackCOMMON:	
   271  0071                     ?_setupStepper:	
   272  0071                     ?_calculaErro:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0071                     ?_calculaVelocidade:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0071                     ?_ISR:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0071                     ?_setup:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0071                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0071                     ?_abs:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0071                     abs@a:	
   291                           ; 2 bytes @ 0x0
   292                           
   293                           
   294                           ; 2 bytes @ 0x0
   295  0071                     	ds	2
   296  0073                     ??_abs:	
   297                           
   298                           ; 1 bytes @ 0x2
   299  0073                     	ds	2
   300  0075                     ??_calculaErro:	
   301                           
   302                           ; 1 bytes @ 0x4
   303  0075                     	ds	2
   304  0077                     ??_ISR:	
   305                           
   306                           ; 1 bytes @ 0x6
   307  0077                     	ds	7
   308                           
   309                           	psect	cstackBANK0
   310  0020                     __pcstackBANK0:	
   311  0020                     _ISR$229:	
   312                           
   313                           ; 2 bytes @ 0x0
   314  0020                     	ds	2
   315  0022                     _ISR$230:	
   316                           
   317                           ; 2 bytes @ 0x2
   318  0022                     	ds	2
   319  0024                     _ISR$231:	
   320                           
   321                           ; 2 bytes @ 0x4
   322  0024                     	ds	2
   323  0026                     _ISR$232:	
   324                           
   325                           ; 2 bytes @ 0x6
   326  0026                     	ds	2
   327  0028                     ??_setupStepper:	
   328  0028                     ?___awdiv:	
   329                           ; 1 bytes @ 0x8
   330                           
   331  0028                     ?___ftpack:	
   332                           ; 2 bytes @ 0x8
   333                           
   334  0028                     ___awdiv@divisor:	
   335                           ; 3 bytes @ 0x8
   336                           
   337  0028                     ___ftpack@arg:	
   338                           ; 2 bytes @ 0x8
   339                           
   340                           
   341                           ; 3 bytes @ 0x8
   342  0028                     	ds	2
   343  002A                     ___awdiv@dividend:	
   344                           
   345                           ; 2 bytes @ 0xA
   346  002A                     	ds	1
   347  002B                     ___ftpack@exp:	
   348                           
   349                           ; 1 bytes @ 0xB
   350  002B                     	ds	1
   351  002C                     ??___awdiv:	
   352  002C                     ___ftpack@sign:	
   353                           ; 1 bytes @ 0xC
   354                           
   355                           
   356                           ; 1 bytes @ 0xC
   357  002C                     	ds	1
   358  002D                     ??___ftpack:	
   359  002D                     ___awdiv@counter:	
   360                           ; 1 bytes @ 0xD
   361                           
   362                           
   363                           ; 1 bytes @ 0xD
   364  002D                     	ds	1
   365  002E                     ___awdiv@sign:	
   366                           
   367                           ; 1 bytes @ 0xE
   368  002E                     	ds	1
   369  002F                     ___awdiv@quotient:	
   370                           
   371                           ; 2 bytes @ 0xF
   372  002F                     	ds	1
   373  0030                     ?___lwtoft:	
   374  0030                     ___lwtoft@c:	
   375                           ; 3 bytes @ 0x10
   376                           
   377                           
   378                           ; 2 bytes @ 0x10
   379  0030                     	ds	1
   380  0031                     ?___wmul:	
   381  0031                     ___wmul@multiplier:	
   382                           ; 2 bytes @ 0x11
   383                           
   384                           
   385                           ; 2 bytes @ 0x11
   386  0031                     	ds	2
   387  0033                     ??___lwtoft:	
   388  0033                     ___wmul@multiplicand:	
   389                           ; 1 bytes @ 0x13
   390                           
   391                           
   392                           ; 2 bytes @ 0x13
   393  0033                     	ds	1
   394  0034                     ?___ftdiv:	
   395  0034                     ___ftdiv@f2:	
   396                           ; 3 bytes @ 0x14
   397                           
   398                           
   399                           ; 3 bytes @ 0x14
   400  0034                     	ds	1
   401  0035                     ??___wmul:	
   402  0035                     ___wmul@product:	
   403                           ; 1 bytes @ 0x15
   404                           
   405                           
   406                           ; 2 bytes @ 0x15
   407  0035                     	ds	2
   408  0037                     ??_calculaVelocidade:	
   409  0037                     ___ftdiv@f1:	
   410                           ; 1 bytes @ 0x17
   411                           
   412                           
   413                           ; 3 bytes @ 0x17
   414  0037                     	ds	2
   415  0039                     _calculaVelocidade$655:	
   416                           
   417                           ; 2 bytes @ 0x19
   418  0039                     	ds	1
   419  003A                     ??___ftdiv:	
   420                           
   421                           ; 1 bytes @ 0x1A
   422  003A                     	ds	4
   423  003E                     ___ftdiv@cntr:	
   424                           
   425                           ; 1 bytes @ 0x1E
   426  003E                     	ds	1
   427  003F                     ___ftdiv@f3:	
   428                           
   429                           ; 3 bytes @ 0x1F
   430  003F                     	ds	3
   431  0042                     ___ftdiv@exp:	
   432                           
   433                           ; 1 bytes @ 0x22
   434  0042                     	ds	1
   435  0043                     ___ftdiv@sign:	
   436                           
   437                           ; 1 bytes @ 0x23
   438  0043                     	ds	1
   439  0044                     ?___fttol:	
   440  0044                     ___fttol@f1:	
   441                           ; 4 bytes @ 0x24
   442                           
   443                           
   444                           ; 3 bytes @ 0x24
   445  0044                     	ds	4
   446  0048                     ??___fttol:	
   447                           
   448                           ; 1 bytes @ 0x28
   449  0048                     	ds	4
   450  004C                     ___fttol@sign1:	
   451                           
   452                           ; 1 bytes @ 0x2C
   453  004C                     	ds	1
   454  004D                     ___fttol@lval:	
   455                           
   456                           ; 4 bytes @ 0x2D
   457  004D                     	ds	4
   458  0051                     ___fttol@exp1:	
   459                           
   460                           ; 1 bytes @ 0x31
   461  0051                     	ds	1
   462  0052                     ?_setPosicaoAtual:	
   463  0052                     ?_setPosicaoDesejada:	
   464                           ; 1 bytes @ 0x32
   465                           
   466  0052                     setPosicaoAtual@posicao_atual:	
   467                           ; 1 bytes @ 0x32
   468                           
   469  0052                     setPosicaoDesejada@posicao_desejada:	
   470                           ; 2 bytes @ 0x32
   471                           
   472                           
   473                           ; 2 bytes @ 0x32
   474  0052                     	ds	2
   475  0054                     ??_setPosicaoAtual:	
   476  0054                     ??_setPosicaoDesejada:	
   477                           ; 1 bytes @ 0x34
   478                           
   479  0054                     ??_setup:	
   480                           ; 1 bytes @ 0x34
   481                           
   482  0054                     ??_main:	
   483                           ; 1 bytes @ 0x34
   484                           
   485                           
   486                           	psect	maintext
   487  0442                     __pmaintext:	
   488                           ; 1 bytes @ 0x34
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 56 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : B00/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels required when called:    7
   514 ;; This function calls:
   515 ;;		_calculaVelocidade
   516 ;;		_setPosicaoDesejada
   517 ;;		_setup
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _main
   525  0442                     _main:	
   526                           
   527                           ;main.c: 58: setup();
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   531  0442  120A  118A  2383  120A  118A  	fcall	_setup
   532  0447                     l1196:	
   533                           ;main.c: 60: while(1){
   534                           
   535                           
   536                           ;main.c: 62: if(PORTDbits.RD4==1)
   537  0447  1283               	bcf	3,5	;RP0=0, select bank0
   538  0448  1303               	bcf	3,6	;RP1=0, select bank0
   539  0449  1E08               	btfss	8,4	;volatile
   540  044A  2C53               	goto	l1200
   541                           
   542                           ;main.c: 63: setPosicaoDesejada(0);
   543  044B  3000               	movlw	0
   544  044C  00D2               	movwf	setPosicaoDesejada@posicao_desejada
   545  044D  00D3               	movwf	setPosicaoDesejada@posicao_desejada+1
   546  044E  120A  118A  23E2  120A  118A  	fcall	_setPosicaoDesejada
   547  0453                     l1200:	
   548                           
   549                           ;main.c: 64: if(PORTDbits.RD5==1)
   550  0453  1283               	bcf	3,5	;RP0=0, select bank0
   551  0454  1303               	bcf	3,6	;RP1=0, select bank0
   552  0455  1E88               	btfss	8,5	;volatile
   553  0456  2C60               	goto	l1204
   554                           
   555                           ;main.c: 65: setPosicaoDesejada(90);
   556  0457  305A               	movlw	90
   557  0458  00D2               	movwf	setPosicaoDesejada@posicao_desejada
   558  0459  3000               	movlw	0
   559  045A  00D3               	movwf	setPosicaoDesejada@posicao_desejada+1
   560  045B  120A  118A  23E2  120A  118A  	fcall	_setPosicaoDesejada
   561  0460                     l1204:	
   562                           
   563                           ;main.c: 66: if(PORTDbits.RD6==1)
   564  0460  1283               	bcf	3,5	;RP0=0, select bank0
   565  0461  1303               	bcf	3,6	;RP1=0, select bank0
   566  0462  1F08               	btfss	8,6	;volatile
   567  0463  2C6D               	goto	l127
   568                           
   569                           ;main.c: 67: setPosicaoDesejada(180);
   570  0464  30B4               	movlw	180
   571  0465  00D2               	movwf	setPosicaoDesejada@posicao_desejada
   572  0466  3000               	movlw	0
   573  0467  00D3               	movwf	setPosicaoDesejada@posicao_desejada+1
   574  0468  120A  118A  23E2  120A  118A  	fcall	_setPosicaoDesejada
   575  046D                     l127:	
   576                           
   577                           ;main.c: 69: calculaVelocidade();
   578  046D  120A  118A  2473  120A  118A  	fcall	_calculaVelocidade
   579  0472  2C47               	goto	l1196
   580  0473                     __end_of_main:	
   581                           
   582                           	psect	text1
   583  0383                     __ptext1:	
   584 ;; *************** function _setup *****************
   585 ;; Defined at:
   586 ;;		line 49 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    6
   607 ;; This function calls:
   608 ;;		_setPosicaoAtual
   609 ;;		_setupStepper
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _setup
   617  0383                     _setup:	
   618                           
   619                           ;main.c: 51: setupStepper();
   620                           
   621                           ;incstack = 0
   622                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   623  0383  120A  118A  2391  120A  118A  	fcall	_setupStepper
   624                           
   625                           ;main.c: 52: setPosicaoAtual(0);
   626  0388  3000               	movlw	0
   627  0389  1283               	bcf	3,5	;RP0=0, select bank0
   628  038A  1303               	bcf	3,6	;RP1=0, select bank0
   629  038B  00D2               	movwf	setPosicaoAtual@posicao_atual
   630  038C  00D3               	movwf	setPosicaoAtual@posicao_atual+1
   631  038D  120A  118A  2412   	fcall	_setPosicaoAtual
   632  0390  0008               	return
   633  0391                     __end_of_setup:	
   634                           
   635                           	psect	text2
   636  0391                     __ptext2:	
   637 ;; *************** function _setupStepper *****************
   638 ;; Defined at:
   639 ;;		line 6 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    3
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_setup
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _setupStepper
   669  0391                     _setupStepper:	
   670                           
   671                           ;stepper.c: 8: TRISD = 0b11110000;
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _setupStepper: [wreg+status,2]
   675  0391  30F0               	movlw	240
   676  0392  1683               	bsf	3,5	;RP0=1, select bank1
   677  0393  1303               	bcf	3,6	;RP1=0, select bank1
   678  0394  0088               	movwf	8	;volatile
   679                           
   680                           ;stepper.c: 9: PORTD = 0;
   681  0395  1283               	bcf	3,5	;RP0=0, select bank0
   682  0396  1303               	bcf	3,6	;RP1=0, select bank0
   683  0397  0188               	clrf	8	;volatile
   684                           
   685                           ;stepper.c: 11: INTCONbits.GIE = 1;
   686  0398  178B               	bsf	11,7	;volatile
   687                           
   688                           ;stepper.c: 12: INTCONbits.PEIE = 1;
   689  0399  170B               	bsf	11,6	;volatile
   690                           
   691                           ;stepper.c: 14: PIE1bits.TMR2IE = 1;
   692  039A  1683               	bsf	3,5	;RP0=1, select bank1
   693  039B  1303               	bcf	3,6	;RP1=0, select bank1
   694  039C  148C               	bsf	12,1	;volatile
   695                           
   696                           ;stepper.c: 15: PIR1bits.TMR2IF = 0;
   697  039D  1283               	bcf	3,5	;RP0=0, select bank0
   698  039E  1303               	bcf	3,6	;RP1=0, select bank0
   699  039F  108C               	bcf	12,1	;volatile
   700                           
   701                           ;stepper.c: 16: T2CON = 0b01111110;
   702  03A0  307E               	movlw	126
   703  03A1  0092               	movwf	18	;volatile
   704                           
   705                           ;stepper.c: 17: PR2=255;
   706  03A2  30FF               	movlw	255
   707  03A3  1683               	bsf	3,5	;RP0=1, select bank1
   708  03A4  1303               	bcf	3,6	;RP1=0, select bank1
   709  03A5  0092               	movwf	18	;volatile
   710  03A6  0008               	return
   711  03A7                     __end_of_setupStepper:	
   712                           
   713                           	psect	text3
   714  0412                     __ptext3:	
   715 ;; *************** function _setPosicaoAtual *****************
   716 ;; Defined at:
   717 ;;		line 20 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  posicao_atua    2   50[BANK0 ] unsigned int 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       2       0       0       0
   732 ;;      Locals:         0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         0       2       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    5
   738 ;; This function calls:
   739 ;;		___ftdiv
   740 ;;		___fttol
   741 ;;		___lwtoft
   742 ;; This function is called by:
   743 ;;		_setup
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _setPosicaoAtual
   749  0412                     _setPosicaoAtual:	
   750                           
   751                           ;stepper.c: 21: position = posicao_atual/(5.625/32);
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _setPosicaoAtual: [wreg+status,2+status,0+pclath+cstack]
   755  0412  1283               	bcf	3,5	;RP0=0, select bank0
   756  0413  1303               	bcf	3,6	;RP1=0, select bank0
   757  0414  0853               	movf	setPosicaoAtual@posicao_atual+1,w
   758  0415  00B1               	movwf	___lwtoft@c+1
   759  0416  0852               	movf	setPosicaoAtual@posicao_atual,w
   760  0417  00B0               	movwf	___lwtoft@c
   761  0418  120A  118A  23A7  120A  118A  	fcall	___lwtoft
   762  041D  1283               	bcf	3,5	;RP0=0, select bank0
   763  041E  1303               	bcf	3,6	;RP1=0, select bank0
   764  041F  0830               	movf	?___lwtoft,w
   765  0420  00B7               	movwf	___ftdiv@f1
   766  0421  0831               	movf	?___lwtoft+1,w
   767  0422  00B8               	movwf	___ftdiv@f1+1
   768  0423  0832               	movf	?___lwtoft+2,w
   769  0424  00B9               	movwf	___ftdiv@f1+2
   770  0425  3000               	movlw	0
   771  0426  00B4               	movwf	___ftdiv@f2
   772  0427  3034               	movlw	52
   773  0428  00B5               	movwf	___ftdiv@f2+1
   774  0429  303E               	movlw	62
   775  042A  00B6               	movwf	___ftdiv@f2+2
   776  042B  120A  118A  2661  120A  118A  	fcall	___ftdiv
   777  0430  1283               	bcf	3,5	;RP0=0, select bank0
   778  0431  1303               	bcf	3,6	;RP1=0, select bank0
   779  0432  0834               	movf	?___ftdiv,w
   780  0433  00C4               	movwf	___fttol@f1
   781  0434  0835               	movf	?___ftdiv+1,w
   782  0435  00C5               	movwf	___fttol@f1+1
   783  0436  0836               	movf	?___ftdiv+2,w
   784  0437  00C6               	movwf	___fttol@f1+2
   785  0438  120A  118A  25D3   	fcall	___fttol
   786  043B  1283               	bcf	3,5	;RP0=0, select bank0
   787  043C  1303               	bcf	3,6	;RP1=0, select bank0
   788  043D  0845               	movf	?___fttol+1,w
   789  043E  00DD               	movwf	_position+1
   790  043F  0844               	movf	?___fttol,w
   791  0440  00DC               	movwf	_position
   792  0441  0008               	return
   793  0442                     __end_of_setPosicaoAtual:	
   794                           
   795                           	psect	text4
   796  03E2                     __ptext4:	
   797 ;; *************** function _setPosicaoDesejada *****************
   798 ;; Defined at:
   799 ;;		line 28 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  posicao_dese    2   50[BANK0 ] unsigned int 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       2       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       2       0       0       0
   817 ;;Total ram usage:        2 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    5
   820 ;; This function calls:
   821 ;;		___ftdiv
   822 ;;		___fttol
   823 ;;		___lwtoft
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _setPosicaoDesejada
   831  03E2                     _setPosicaoDesejada:	
   832                           
   833                           ;stepper.c: 29: setpoint = posicao_desejada/(5.625/32);
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _setPosicaoDesejada: [wreg+status,2+status,0+pclath+cstack]
   837  03E2  1283               	bcf	3,5	;RP0=0, select bank0
   838  03E3  1303               	bcf	3,6	;RP1=0, select bank0
   839  03E4  0853               	movf	setPosicaoDesejada@posicao_desejada+1,w
   840  03E5  00B1               	movwf	___lwtoft@c+1
   841  03E6  0852               	movf	setPosicaoDesejada@posicao_desejada,w
   842  03E7  00B0               	movwf	___lwtoft@c
   843  03E8  120A  118A  23A7  120A  118A  	fcall	___lwtoft
   844  03ED  1283               	bcf	3,5	;RP0=0, select bank0
   845  03EE  1303               	bcf	3,6	;RP1=0, select bank0
   846  03EF  0830               	movf	?___lwtoft,w
   847  03F0  00B7               	movwf	___ftdiv@f1
   848  03F1  0831               	movf	?___lwtoft+1,w
   849  03F2  00B8               	movwf	___ftdiv@f1+1
   850  03F3  0832               	movf	?___lwtoft+2,w
   851  03F4  00B9               	movwf	___ftdiv@f1+2
   852  03F5  3000               	movlw	0
   853  03F6  00B4               	movwf	___ftdiv@f2
   854  03F7  3034               	movlw	52
   855  03F8  00B5               	movwf	___ftdiv@f2+1
   856  03F9  303E               	movlw	62
   857  03FA  00B6               	movwf	___ftdiv@f2+2
   858  03FB  120A  118A  2661  120A  118A  	fcall	___ftdiv
   859  0400  1283               	bcf	3,5	;RP0=0, select bank0
   860  0401  1303               	bcf	3,6	;RP1=0, select bank0
   861  0402  0834               	movf	?___ftdiv,w
   862  0403  00C4               	movwf	___fttol@f1
   863  0404  0835               	movf	?___ftdiv+1,w
   864  0405  00C5               	movwf	___fttol@f1+1
   865  0406  0836               	movf	?___ftdiv+2,w
   866  0407  00C6               	movwf	___fttol@f1+2
   867  0408  120A  118A  25D3   	fcall	___fttol
   868  040B  1283               	bcf	3,5	;RP0=0, select bank0
   869  040C  1303               	bcf	3,6	;RP1=0, select bank0
   870  040D  0845               	movf	?___fttol+1,w
   871  040E  00D9               	movwf	_setpoint+1
   872  040F  0844               	movf	?___fttol,w
   873  0410  00D8               	movwf	_setpoint
   874  0411  0008               	return
   875  0412                     __end_of_setPosicaoDesejada:	
   876                           
   877                           	psect	text5
   878  03A7                     __ptext5:	
   879 ;; *************** function ___lwtoft *****************
   880 ;; Defined at:
   881 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  c               2   16[BANK0 ] unsigned int 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  3   16[BANK0 ] float 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       3       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          0       1       0       0       0
   898 ;;      Totals:         0       4       0       0       0
   899 ;;Total ram usage:        4 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    4
   902 ;; This function calls:
   903 ;;		___ftpack
   904 ;; This function is called by:
   905 ;;		_setPosicaoAtual
   906 ;;		_setPosicaoDesejada
   907 ;;		_getPosicaoAtual
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function ___lwtoft
   913  03A7                     ___lwtoft:	
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   917  03A7  1283               	bcf	3,5	;RP0=0, select bank0
   918  03A8  1303               	bcf	3,6	;RP1=0, select bank0
   919  03A9  0830               	movf	___lwtoft@c,w
   920  03AA  00A8               	movwf	___ftpack@arg
   921  03AB  0831               	movf	___lwtoft@c+1,w
   922  03AC  00A9               	movwf	___ftpack@arg+1
   923  03AD  01AA               	clrf	___ftpack@arg+2
   924  03AE  308E               	movlw	142
   925  03AF  00B3               	movwf	??___lwtoft
   926  03B0  0833               	movf	??___lwtoft,w
   927  03B1  00AB               	movwf	___ftpack@exp
   928  03B2  01AC               	clrf	___ftpack@sign
   929  03B3  120A  118A  2565   	fcall	___ftpack
   930  03B6  1283               	bcf	3,5	;RP0=0, select bank0
   931  03B7  1303               	bcf	3,6	;RP1=0, select bank0
   932  03B8  0828               	movf	?___ftpack,w
   933  03B9  00B0               	movwf	?___lwtoft
   934  03BA  0829               	movf	?___ftpack+1,w
   935  03BB  00B1               	movwf	?___lwtoft+1
   936  03BC  082A               	movf	?___ftpack+2,w
   937  03BD  00B2               	movwf	?___lwtoft+2
   938  03BE  0008               	return
   939  03BF                     __end_of___lwtoft:	
   940                           
   941                           	psect	text6
   942  05D3                     __ptext6:	
   943 ;; *************** function ___fttol *****************
   944 ;; Defined at:
   945 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  f1              3   36[BANK0 ] float 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  lval            4   45[BANK0 ] unsigned long 
   950 ;;  exp1            1   49[BANK0 ] unsigned char 
   951 ;;  sign1           1   44[BANK0 ] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  4   36[BANK0 ] long 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       4       0       0       0
   962 ;;      Locals:         0       6       0       0       0
   963 ;;      Temps:          0       4       0       0       0
   964 ;;      Totals:         0      14       0       0       0
   965 ;;Total ram usage:       14 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    3
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_setPosicaoAtual
   972 ;;		_setPosicaoDesejada
   973 ;;		_getPosicaoAtual
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function ___fttol
   979  05D3                     ___fttol:	
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   983  05D3  1283               	bcf	3,5	;RP0=0, select bank0
   984  05D4  1303               	bcf	3,6	;RP1=0, select bank0
   985  05D5  0844               	movf	___fttol@f1,w
   986  05D6  00C8               	movwf	??___fttol
   987  05D7  0845               	movf	___fttol@f1+1,w
   988  05D8  00C9               	movwf	??___fttol+1
   989  05D9  0846               	movf	___fttol@f1+2,w
   990  05DA  00CA               	movwf	??___fttol+2
   991  05DB  1003               	clrc
   992  05DC  0D49               	rlf	??___fttol+1,w
   993  05DD  0D4A               	rlf	??___fttol+2,w
   994  05DE  00CB               	movwf	??___fttol+3
   995  05DF  084B               	movf	??___fttol+3,w
   996  05E0  00D1               	movwf	___fttol@exp1
   997  05E1  0851               	movf	___fttol@exp1,w
   998  05E2  1D03               	btfss	3,2
   999  05E3  2DED               	goto	l982
  1000  05E4  3000               	movlw	0
  1001  05E5  00C7               	movwf	?___fttol+3
  1002  05E6  3000               	movlw	0
  1003  05E7  00C6               	movwf	?___fttol+2
  1004  05E8  3000               	movlw	0
  1005  05E9  00C5               	movwf	?___fttol+1
  1006  05EA  3000               	movlw	0
  1007  05EB  00C4               	movwf	?___fttol
  1008  05EC  0008               	return
  1009  05ED                     l982:	
  1010  05ED  0844               	movf	___fttol@f1,w
  1011  05EE  00C8               	movwf	??___fttol
  1012  05EF  0845               	movf	___fttol@f1+1,w
  1013  05F0  00C9               	movwf	??___fttol+1
  1014  05F1  0846               	movf	___fttol@f1+2,w
  1015  05F2  00CA               	movwf	??___fttol+2
  1016  05F3  3017               	movlw	23
  1017  05F4                     u875:	
  1018  05F4  1003               	clrc
  1019  05F5  0CCA               	rrf	??___fttol+2,f
  1020  05F6  0CC9               	rrf	??___fttol+1,f
  1021  05F7  0CC8               	rrf	??___fttol,f
  1022  05F8  3EFF               	addlw	-1
  1023  05F9  1D03               	skipz
  1024  05FA  2DF4               	goto	u875
  1025  05FB  0848               	movf	??___fttol,w
  1026  05FC  00CB               	movwf	??___fttol+3
  1027  05FD  084B               	movf	??___fttol+3,w
  1028  05FE  00CC               	movwf	___fttol@sign1
  1029  05FF  17C5               	bsf	___fttol@f1+1,7
  1030  0600  30FF               	movlw	255
  1031  0601  05C4               	andwf	___fttol@f1,f
  1032  0602  30FF               	movlw	255
  1033  0603  05C5               	andwf	___fttol@f1+1,f
  1034  0604  3000               	movlw	0
  1035  0605  05C6               	andwf	___fttol@f1+2,f
  1036  0606  0844               	movf	___fttol@f1,w
  1037  0607  00CD               	movwf	___fttol@lval
  1038  0608  0845               	movf	___fttol@f1+1,w
  1039  0609  00CE               	movwf	___fttol@lval+1
  1040  060A  0846               	movf	___fttol@f1+2,w
  1041  060B  00CF               	movwf	___fttol@lval+2
  1042  060C  01D0               	clrf	___fttol@lval+3
  1043  060D  308E               	movlw	142
  1044  060E  02D1               	subwf	___fttol@exp1,f
  1045  060F  1FD1               	btfss	___fttol@exp1,7
  1046  0610  2E2F               	goto	l1002
  1047  0611  0851               	movf	___fttol@exp1,w
  1048  0612  3A80               	xorlw	128
  1049  0613  3E8F               	addlw	143
  1050  0614  1803               	skipnc
  1051  0615  2E1F               	goto	l1000
  1052  0616  3000               	movlw	0
  1053  0617  00C7               	movwf	?___fttol+3
  1054  0618  3000               	movlw	0
  1055  0619  00C6               	movwf	?___fttol+2
  1056  061A  3000               	movlw	0
  1057  061B  00C5               	movwf	?___fttol+1
  1058  061C  3000               	movlw	0
  1059  061D  00C4               	movwf	?___fttol
  1060  061E  0008               	return
  1061  061F                     l1000:	
  1062  061F  3001               	movlw	1
  1063  0620                     u905:	
  1064  0620  1003               	clrc
  1065  0621  0CD0               	rrf	___fttol@lval+3,f
  1066  0622  0CCF               	rrf	___fttol@lval+2,f
  1067  0623  0CCE               	rrf	___fttol@lval+1,f
  1068  0624  0CCD               	rrf	___fttol@lval,f
  1069  0625  3EFF               	addlw	-1
  1070  0626  1D03               	skipz
  1071  0627  2E20               	goto	u905
  1072  0628  3001               	movlw	1
  1073  0629  00C8               	movwf	??___fttol
  1074  062A  0848               	movf	??___fttol,w
  1075  062B  07D1               	addwf	___fttol@exp1,f
  1076  062C  1903               	btfsc	3,2
  1077  062D  2E4A               	goto	l1010
  1078  062E  2E1F               	goto	l1000
  1079  062F                     l1002:	
  1080  062F  3018               	movlw	24
  1081  0630  0251               	subwf	___fttol@exp1,w
  1082  0631  1C03               	skipc
  1083  0632  2E47               	goto	l470
  1084  0633  3000               	movlw	0
  1085  0634  00C7               	movwf	?___fttol+3
  1086  0635  3000               	movlw	0
  1087  0636  00C6               	movwf	?___fttol+2
  1088  0637  3000               	movlw	0
  1089  0638  00C5               	movwf	?___fttol+1
  1090  0639  3000               	movlw	0
  1091  063A  00C4               	movwf	?___fttol
  1092  063B  0008               	return
  1093  063C                     l1008:	
  1094  063C  3001               	movlw	1
  1095  063D  00C8               	movwf	??___fttol
  1096  063E                     u935:	
  1097  063E  1003               	clrc
  1098  063F  0DCD               	rlf	___fttol@lval,f
  1099  0640  0DCE               	rlf	___fttol@lval+1,f
  1100  0641  0DCF               	rlf	___fttol@lval+2,f
  1101  0642  0DD0               	rlf	___fttol@lval+3,f
  1102  0643  0BC8               	decfsz	??___fttol,f
  1103  0644  2E3E               	goto	u935
  1104  0645  3001               	movlw	1
  1105  0646  02D1               	subwf	___fttol@exp1,f
  1106  0647                     l470:	
  1107  0647  0851               	movf	___fttol@exp1,w
  1108  0648  1D03               	btfss	3,2
  1109  0649  2E3C               	goto	l1008
  1110  064A                     l1010:	
  1111  064A  084C               	movf	___fttol@sign1,w
  1112  064B  1903               	btfsc	3,2
  1113  064C  2E58               	goto	l1014
  1114  064D  09CD               	comf	___fttol@lval,f
  1115  064E  09CE               	comf	___fttol@lval+1,f
  1116  064F  09CF               	comf	___fttol@lval+2,f
  1117  0650  09D0               	comf	___fttol@lval+3,f
  1118  0651  0ACD               	incf	___fttol@lval,f
  1119  0652  1903               	skipnz
  1120  0653  0ACE               	incf	___fttol@lval+1,f
  1121  0654  1903               	skipnz
  1122  0655  0ACF               	incf	___fttol@lval+2,f
  1123  0656  1903               	skipnz
  1124  0657  0AD0               	incf	___fttol@lval+3,f
  1125  0658                     l1014:	
  1126  0658  0850               	movf	___fttol@lval+3,w
  1127  0659  00C7               	movwf	?___fttol+3
  1128  065A  084F               	movf	___fttol@lval+2,w
  1129  065B  00C6               	movwf	?___fttol+2
  1130  065C  084E               	movf	___fttol@lval+1,w
  1131  065D  00C5               	movwf	?___fttol+1
  1132  065E  084D               	movf	___fttol@lval,w
  1133  065F  00C4               	movwf	?___fttol
  1134  0660  0008               	return
  1135  0661                     __end_of___fttol:	
  1136                           
  1137                           	psect	text7
  1138  0661                     __ptext7:	
  1139 ;; *************** function ___ftdiv *****************
  1140 ;; Defined at:
  1141 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  f2              3   20[BANK0 ] float 
  1144 ;;  f1              3   23[BANK0 ] float 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  f3              3   31[BANK0 ] float 
  1147 ;;  sign            1   35[BANK0 ] unsigned char 
  1148 ;;  exp             1   34[BANK0 ] unsigned char 
  1149 ;;  cntr            1   30[BANK0 ] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  3   20[BANK0 ] float 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0, pclath, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       6       0       0       0
  1160 ;;      Locals:         0       6       0       0       0
  1161 ;;      Temps:          0       4       0       0       0
  1162 ;;      Totals:         0      16       0       0       0
  1163 ;;Total ram usage:       16 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    4
  1166 ;; This function calls:
  1167 ;;		___ftpack
  1168 ;; This function is called by:
  1169 ;;		_setPosicaoAtual
  1170 ;;		_setPosicaoDesejada
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function ___ftdiv
  1176  0661                     ___ftdiv:	
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1180  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0663  0837               	movf	___ftdiv@f1,w
  1183  0664  00BA               	movwf	??___ftdiv
  1184  0665  0838               	movf	___ftdiv@f1+1,w
  1185  0666  00BB               	movwf	??___ftdiv+1
  1186  0667  0839               	movf	___ftdiv@f1+2,w
  1187  0668  00BC               	movwf	??___ftdiv+2
  1188  0669  1003               	clrc
  1189  066A  0D3B               	rlf	??___ftdiv+1,w
  1190  066B  0D3C               	rlf	??___ftdiv+2,w
  1191  066C  00BD               	movwf	??___ftdiv+3
  1192  066D  083D               	movf	??___ftdiv+3,w
  1193  066E  00C2               	movwf	___ftdiv@exp
  1194  066F  0842               	movf	___ftdiv@exp,w
  1195  0670  1D03               	btfss	3,2
  1196  0671  2E79               	goto	l940
  1197  0672  3000               	movlw	0
  1198  0673  00B4               	movwf	?___ftdiv
  1199  0674  3000               	movlw	0
  1200  0675  00B5               	movwf	?___ftdiv+1
  1201  0676  3000               	movlw	0
  1202  0677  00B6               	movwf	?___ftdiv+2
  1203  0678  0008               	return
  1204  0679                     l940:	
  1205  0679  0834               	movf	___ftdiv@f2,w
  1206  067A  00BA               	movwf	??___ftdiv
  1207  067B  0835               	movf	___ftdiv@f2+1,w
  1208  067C  00BB               	movwf	??___ftdiv+1
  1209  067D  0836               	movf	___ftdiv@f2+2,w
  1210  067E  00BC               	movwf	??___ftdiv+2
  1211  067F  1003               	clrc
  1212  0680  0D3B               	rlf	??___ftdiv+1,w
  1213  0681  0D3C               	rlf	??___ftdiv+2,w
  1214  0682  00BD               	movwf	??___ftdiv+3
  1215  0683  083D               	movf	??___ftdiv+3,w
  1216  0684  00C3               	movwf	___ftdiv@sign
  1217  0685  0843               	movf	___ftdiv@sign,w
  1218  0686  1D03               	btfss	3,2
  1219  0687  2E8F               	goto	l946
  1220  0688  3000               	movlw	0
  1221  0689  00B4               	movwf	?___ftdiv
  1222  068A  3000               	movlw	0
  1223  068B  00B5               	movwf	?___ftdiv+1
  1224  068C  3000               	movlw	0
  1225  068D  00B6               	movwf	?___ftdiv+2
  1226  068E  0008               	return
  1227  068F                     l946:	
  1228  068F  3000               	movlw	0
  1229  0690  00BF               	movwf	___ftdiv@f3
  1230  0691  3000               	movlw	0
  1231  0692  00C0               	movwf	___ftdiv@f3+1
  1232  0693  3000               	movlw	0
  1233  0694  00C1               	movwf	___ftdiv@f3+2
  1234  0695  3089               	movlw	137
  1235  0696  0743               	addwf	___ftdiv@sign,w
  1236  0697  00BA               	movwf	??___ftdiv
  1237  0698  083A               	movf	??___ftdiv,w
  1238  0699  02C2               	subwf	___ftdiv@exp,f
  1239  069A  0837               	movf	___ftdiv@f1,w
  1240  069B  00BA               	movwf	??___ftdiv
  1241  069C  0838               	movf	___ftdiv@f1+1,w
  1242  069D  00BB               	movwf	??___ftdiv+1
  1243  069E  0839               	movf	___ftdiv@f1+2,w
  1244  069F  00BC               	movwf	??___ftdiv+2
  1245  06A0  3010               	movlw	16
  1246  06A1                     u805:	
  1247  06A1  1003               	clrc
  1248  06A2  0CBC               	rrf	??___ftdiv+2,f
  1249  06A3  0CBB               	rrf	??___ftdiv+1,f
  1250  06A4  0CBA               	rrf	??___ftdiv,f
  1251  06A5  3EFF               	addlw	-1
  1252  06A6  1D03               	skipz
  1253  06A7  2EA1               	goto	u805
  1254  06A8  083A               	movf	??___ftdiv,w
  1255  06A9  00BD               	movwf	??___ftdiv+3
  1256  06AA  083D               	movf	??___ftdiv+3,w
  1257  06AB  00C3               	movwf	___ftdiv@sign
  1258  06AC  0834               	movf	___ftdiv@f2,w
  1259  06AD  00BA               	movwf	??___ftdiv
  1260  06AE  0835               	movf	___ftdiv@f2+1,w
  1261  06AF  00BB               	movwf	??___ftdiv+1
  1262  06B0  0836               	movf	___ftdiv@f2+2,w
  1263  06B1  00BC               	movwf	??___ftdiv+2
  1264  06B2  3010               	movlw	16
  1265  06B3                     u815:	
  1266  06B3  1003               	clrc
  1267  06B4  0CBC               	rrf	??___ftdiv+2,f
  1268  06B5  0CBB               	rrf	??___ftdiv+1,f
  1269  06B6  0CBA               	rrf	??___ftdiv,f
  1270  06B7  3EFF               	addlw	-1
  1271  06B8  1D03               	skipz
  1272  06B9  2EB3               	goto	u815
  1273  06BA  083A               	movf	??___ftdiv,w
  1274  06BB  00BD               	movwf	??___ftdiv+3
  1275  06BC  083D               	movf	??___ftdiv+3,w
  1276  06BD  06C3               	xorwf	___ftdiv@sign,f
  1277  06BE  3080               	movlw	128
  1278  06BF  00BA               	movwf	??___ftdiv
  1279  06C0  083A               	movf	??___ftdiv,w
  1280  06C1  05C3               	andwf	___ftdiv@sign,f
  1281  06C2  17B8               	bsf	___ftdiv@f1+1,7
  1282  06C3  30FF               	movlw	255
  1283  06C4  05B7               	andwf	___ftdiv@f1,f
  1284  06C5  30FF               	movlw	255
  1285  06C6  05B8               	andwf	___ftdiv@f1+1,f
  1286  06C7  3000               	movlw	0
  1287  06C8  05B9               	andwf	___ftdiv@f1+2,f
  1288  06C9  17B5               	bsf	___ftdiv@f2+1,7
  1289  06CA  30FF               	movlw	255
  1290  06CB  05B4               	andwf	___ftdiv@f2,f
  1291  06CC  30FF               	movlw	255
  1292  06CD  05B5               	andwf	___ftdiv@f2+1,f
  1293  06CE  3000               	movlw	0
  1294  06CF  05B6               	andwf	___ftdiv@f2+2,f
  1295  06D0  3018               	movlw	24
  1296  06D1  00BA               	movwf	??___ftdiv
  1297  06D2  083A               	movf	??___ftdiv,w
  1298  06D3  00BE               	movwf	___ftdiv@cntr
  1299  06D4                     l960:	
  1300  06D4  3001               	movlw	1
  1301  06D5                     u825:	
  1302  06D5  1003               	clrc
  1303  06D6  0DBF               	rlf	___ftdiv@f3,f
  1304  06D7  0DC0               	rlf	___ftdiv@f3+1,f
  1305  06D8  0DC1               	rlf	___ftdiv@f3+2,f
  1306  06D9  3EFF               	addlw	-1
  1307  06DA  1D03               	skipz
  1308  06DB  2ED5               	goto	u825
  1309  06DC  0836               	movf	___ftdiv@f2+2,w
  1310  06DD  0239               	subwf	___ftdiv@f1+2,w
  1311  06DE  1D03               	skipz
  1312  06DF  2EE6               	goto	u835
  1313  06E0  0835               	movf	___ftdiv@f2+1,w
  1314  06E1  0238               	subwf	___ftdiv@f1+1,w
  1315  06E2  1D03               	skipz
  1316  06E3  2EE6               	goto	u835
  1317  06E4  0834               	movf	___ftdiv@f2,w
  1318  06E5  0237               	subwf	___ftdiv@f1,w
  1319  06E6                     u835:	
  1320  06E6  1C03               	skipc
  1321  06E7  2EF3               	goto	l968
  1322  06E8  0834               	movf	___ftdiv@f2,w
  1323  06E9  02B7               	subwf	___ftdiv@f1,f
  1324  06EA  0835               	movf	___ftdiv@f2+1,w
  1325  06EB  1C03               	skipc
  1326  06EC  0F35               	incfsz	___ftdiv@f2+1,w
  1327  06ED  02B8               	subwf	___ftdiv@f1+1,f
  1328  06EE  0836               	movf	___ftdiv@f2+2,w
  1329  06EF  1C03               	skipc
  1330  06F0  0A36               	incf	___ftdiv@f2+2,w
  1331  06F1  02B9               	subwf	___ftdiv@f1+2,f
  1332  06F2  143F               	bsf	___ftdiv@f3,0
  1333  06F3                     l968:	
  1334  06F3  3001               	movlw	1
  1335  06F4                     u845:	
  1336  06F4  1003               	clrc
  1337  06F5  0DB7               	rlf	___ftdiv@f1,f
  1338  06F6  0DB8               	rlf	___ftdiv@f1+1,f
  1339  06F7  0DB9               	rlf	___ftdiv@f1+2,f
  1340  06F8  3EFF               	addlw	-1
  1341  06F9  1D03               	skipz
  1342  06FA  2EF4               	goto	u845
  1343  06FB  3001               	movlw	1
  1344  06FC  02BE               	subwf	___ftdiv@cntr,f
  1345  06FD  1D03               	btfss	3,2
  1346  06FE  2ED4               	goto	l960
  1347  06FF  083F               	movf	___ftdiv@f3,w
  1348  0700  00A8               	movwf	___ftpack@arg
  1349  0701  0840               	movf	___ftdiv@f3+1,w
  1350  0702  00A9               	movwf	___ftpack@arg+1
  1351  0703  0841               	movf	___ftdiv@f3+2,w
  1352  0704  00AA               	movwf	___ftpack@arg+2
  1353  0705  0842               	movf	___ftdiv@exp,w
  1354  0706  00BA               	movwf	??___ftdiv
  1355  0707  083A               	movf	??___ftdiv,w
  1356  0708  00AB               	movwf	___ftpack@exp
  1357  0709  0843               	movf	___ftdiv@sign,w
  1358  070A  00BB               	movwf	??___ftdiv+1
  1359  070B  083B               	movf	??___ftdiv+1,w
  1360  070C  00AC               	movwf	___ftpack@sign
  1361  070D  120A  118A  2565   	fcall	___ftpack
  1362  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0712  0828               	movf	?___ftpack,w
  1365  0713  00B4               	movwf	?___ftdiv
  1366  0714  0829               	movf	?___ftpack+1,w
  1367  0715  00B5               	movwf	?___ftdiv+1
  1368  0716  082A               	movf	?___ftpack+2,w
  1369  0717  00B6               	movwf	?___ftdiv+2
  1370  0718  0008               	return
  1371  0719                     __end_of___ftdiv:	
  1372                           
  1373                           	psect	text8
  1374  0565                     __ptext8:	
  1375 ;; *************** function ___ftpack *****************
  1376 ;; Defined at:
  1377 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  arg             3    8[BANK0 ] unsigned um
  1380 ;;  exp             1   11[BANK0 ] unsigned char 
  1381 ;;  sign            1   12[BANK0 ] unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  3    8[BANK0 ] float 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       5       0       0       0
  1394 ;;      Locals:         0       0       0       0       0
  1395 ;;      Temps:          0       3       0       0       0
  1396 ;;      Totals:         0       8       0       0       0
  1397 ;;Total ram usage:        8 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		___ftdiv
  1404 ;;		___lwtoft
  1405 ;;		___ftmul
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function ___ftpack
  1411  0565                     ___ftpack:	
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1415  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0567  082B               	movf	___ftpack@exp,w
  1418  0568  1903               	btfsc	3,2
  1419  0569  2D6F               	goto	l906
  1420  056A  082A               	movf	___ftpack@arg+2,w
  1421  056B  0429               	iorwf	___ftpack@arg+1,w
  1422  056C  0428               	iorwf	___ftpack@arg,w
  1423  056D  1D03               	skipz
  1424  056E  2D82               	goto	l912
  1425  056F                     l906:	
  1426  056F  3000               	movlw	0
  1427  0570  00A8               	movwf	?___ftpack
  1428  0571  3000               	movlw	0
  1429  0572  00A9               	movwf	?___ftpack+1
  1430  0573  3000               	movlw	0
  1431  0574  00AA               	movwf	?___ftpack+2
  1432  0575  0008               	return
  1433  0576                     l910:	
  1434  0576  3001               	movlw	1
  1435  0577  00AD               	movwf	??___ftpack
  1436  0578  082D               	movf	??___ftpack,w
  1437  0579  07AB               	addwf	___ftpack@exp,f
  1438  057A  3001               	movlw	1
  1439  057B                     u685:	
  1440  057B  1003               	clrc
  1441  057C  0CAA               	rrf	___ftpack@arg+2,f
  1442  057D  0CA9               	rrf	___ftpack@arg+1,f
  1443  057E  0CA8               	rrf	___ftpack@arg,f
  1444  057F  3EFF               	addlw	-1
  1445  0580  1D03               	skipz
  1446  0581  2D7B               	goto	u685
  1447  0582                     l912:	
  1448  0582  30FE               	movlw	254
  1449  0583  052A               	andwf	___ftpack@arg+2,w
  1450  0584  1903               	btfsc	3,2
  1451  0585  2D9D               	goto	l379
  1452  0586  2D76               	goto	l910
  1453  0587                     l914:	
  1454  0587  3001               	movlw	1
  1455  0588  00AD               	movwf	??___ftpack
  1456  0589  082D               	movf	??___ftpack,w
  1457  058A  07AB               	addwf	___ftpack@exp,f
  1458  058B  3001               	movlw	1
  1459  058C  07A8               	addwf	___ftpack@arg,f
  1460  058D  3000               	movlw	0
  1461  058E  1803               	skipnc
  1462  058F  3001               	movlw	1
  1463  0590  07A9               	addwf	___ftpack@arg+1,f
  1464  0591  3000               	movlw	0
  1465  0592  1803               	skipnc
  1466  0593  3001               	movlw	1
  1467  0594  07AA               	addwf	___ftpack@arg+2,f
  1468  0595  3001               	movlw	1
  1469  0596                     u705:	
  1470  0596  1003               	clrc
  1471  0597  0CAA               	rrf	___ftpack@arg+2,f
  1472  0598  0CA9               	rrf	___ftpack@arg+1,f
  1473  0599  0CA8               	rrf	___ftpack@arg,f
  1474  059A  3EFF               	addlw	-1
  1475  059B  1D03               	skipz
  1476  059C  2D96               	goto	u705
  1477  059D                     l379:	
  1478  059D  30FF               	movlw	255
  1479  059E  052A               	andwf	___ftpack@arg+2,w
  1480  059F  1903               	btfsc	3,2
  1481  05A0  2DAC               	goto	l922
  1482  05A1  2D87               	goto	l914
  1483  05A2                     l920:	
  1484  05A2  3001               	movlw	1
  1485  05A3  02AB               	subwf	___ftpack@exp,f
  1486  05A4  3001               	movlw	1
  1487  05A5                     u725:	
  1488  05A5  1003               	clrc
  1489  05A6  0DA8               	rlf	___ftpack@arg,f
  1490  05A7  0DA9               	rlf	___ftpack@arg+1,f
  1491  05A8  0DAA               	rlf	___ftpack@arg+2,f
  1492  05A9  3EFF               	addlw	-1
  1493  05AA  1D03               	skipz
  1494  05AB  2DA5               	goto	u725
  1495  05AC                     l922:	
  1496  05AC  1BA9               	btfsc	___ftpack@arg+1,7
  1497  05AD  2DB2               	goto	l386
  1498  05AE  3002               	movlw	2
  1499  05AF  022B               	subwf	___ftpack@exp,w
  1500  05B0  1803               	skipnc
  1501  05B1  2DA2               	goto	l920
  1502  05B2                     l386:	
  1503  05B2  182B               	btfsc	___ftpack@exp,0
  1504  05B3  2DBA               	goto	l387
  1505  05B4  30FF               	movlw	255
  1506  05B5  05A8               	andwf	___ftpack@arg,f
  1507  05B6  307F               	movlw	127
  1508  05B7  05A9               	andwf	___ftpack@arg+1,f
  1509  05B8  30FF               	movlw	255
  1510  05B9  05AA               	andwf	___ftpack@arg+2,f
  1511  05BA                     l387:	
  1512  05BA  1003               	clrc
  1513  05BB  0CAB               	rrf	___ftpack@exp,f
  1514  05BC  082B               	movf	___ftpack@exp,w
  1515  05BD  00AD               	movwf	??___ftpack
  1516  05BE  01AE               	clrf	??___ftpack+1
  1517  05BF  01AF               	clrf	??___ftpack+2
  1518  05C0  3010               	movlw	16
  1519  05C1                     u765:	
  1520  05C1  1003               	clrc
  1521  05C2  0DAD               	rlf	??___ftpack,f
  1522  05C3  0DAE               	rlf	??___ftpack+1,f
  1523  05C4  0DAF               	rlf	??___ftpack+2,f
  1524  05C5  3EFF               	addlw	-1
  1525  05C6  1D03               	skipz
  1526  05C7  2DC1               	goto	u765
  1527  05C8  082D               	movf	??___ftpack,w
  1528  05C9  04A8               	iorwf	___ftpack@arg,f
  1529  05CA  082E               	movf	??___ftpack+1,w
  1530  05CB  04A9               	iorwf	___ftpack@arg+1,f
  1531  05CC  082F               	movf	??___ftpack+2,w
  1532  05CD  04AA               	iorwf	___ftpack@arg+2,f
  1533  05CE  082C               	movf	___ftpack@sign,w
  1534  05CF  1903               	btfsc	3,2
  1535  05D0  0008               	return
  1536  05D1  17AA               	bsf	___ftpack@arg+2,7
  1537  05D2  0008               	return
  1538  05D3                     __end_of___ftpack:	
  1539                           
  1540                           	psect	text9
  1541  0473                     __ptext9:	
  1542 ;; *************** function _calculaVelocidade *****************
  1543 ;; Defined at:
  1544 ;;		line 46 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         0       2       0       0       0
  1560 ;;      Temps:          0       2       0       0       0
  1561 ;;      Totals:         0       4       0       0       0
  1562 ;;Total ram usage:        4 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    4
  1565 ;; This function calls:
  1566 ;;		___awdiv
  1567 ;;		___wmul
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _calculaVelocidade
  1575  0473                     _calculaVelocidade:	
  1576                           
  1577                           ;stepper.c: 47: speed = (error == 0) ? 0 : (4314/PR2)*100/81;
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _calculaVelocidade: [wreg+status,2+status,0+pclath+cstack]
  1581  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0475  0856               	movf	_error,w
  1584  0476  0457               	iorwf	_error+1,w
  1585  0477  1903               	btfsc	3,2
  1586  0478  2CB4               	goto	l1124
  1587  0479  1683               	bsf	3,5	;RP0=1, select bank1
  1588  047A  1303               	bcf	3,6	;RP1=0, select bank1
  1589  047B  0812               	movf	18,w	;volatile
  1590  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1591  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1592  047E  00B7               	movwf	??_calculaVelocidade
  1593  047F  01B8               	clrf	??_calculaVelocidade+1
  1594  0480  0837               	movf	??_calculaVelocidade,w
  1595  0481  00A8               	movwf	___awdiv@divisor
  1596  0482  0838               	movf	??_calculaVelocidade+1,w
  1597  0483  00A9               	movwf	___awdiv@divisor+1
  1598  0484  30DA               	movlw	218
  1599  0485  00AA               	movwf	___awdiv@dividend
  1600  0486  3010               	movlw	16
  1601  0487  00AB               	movwf	___awdiv@dividend+1
  1602  0488  120A  118A  250A  120A  118A  	fcall	___awdiv
  1603  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1604  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1605  048F  0829               	movf	?___awdiv+1,w
  1606  0490  00B2               	movwf	___wmul@multiplier+1
  1607  0491  0828               	movf	?___awdiv,w
  1608  0492  00B1               	movwf	___wmul@multiplier
  1609  0493  3064               	movlw	100
  1610  0494  00B3               	movwf	___wmul@multiplicand
  1611  0495  3000               	movlw	0
  1612  0496  00B4               	movwf	___wmul@multiplicand+1
  1613  0497  120A  118A  23BF  120A  118A  	fcall	___wmul
  1614  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1615  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1616  049E  0832               	movf	?___wmul+1,w
  1617  049F  00BA               	movwf	_calculaVelocidade$655+1
  1618  04A0  0831               	movf	?___wmul,w
  1619  04A1  00B9               	movwf	_calculaVelocidade$655
  1620  04A2  3051               	movlw	81
  1621  04A3  00A8               	movwf	___awdiv@divisor
  1622  04A4  3000               	movlw	0
  1623  04A5  00A9               	movwf	___awdiv@divisor+1
  1624  04A6  083A               	movf	_calculaVelocidade$655+1,w
  1625  04A7  00AB               	movwf	___awdiv@dividend+1
  1626  04A8  0839               	movf	_calculaVelocidade$655,w
  1627  04A9  00AA               	movwf	___awdiv@dividend
  1628  04AA  120A  118A  250A   	fcall	___awdiv
  1629  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1630  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1631  04AF  0829               	movf	?___awdiv+1,w
  1632  04B0  00D5               	movwf	_speed+1
  1633  04B1  0828               	movf	?___awdiv,w
  1634  04B2  00D4               	movwf	_speed
  1635  04B3  0008               	return
  1636  04B4                     l1124:	
  1637  04B4  01D4               	clrf	_speed
  1638  04B5  01D5               	clrf	_speed+1
  1639  04B6  0008               	return
  1640  04B7                     __end_of_calculaVelocidade:	
  1641                           
  1642                           	psect	text10
  1643  03BF                     __ptext10:	
  1644 ;; *************** function ___wmul *****************
  1645 ;; Defined at:
  1646 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  multiplier      2   17[BANK0 ] unsigned int 
  1649 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  product         2   21[BANK0 ] unsigned int 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  2   17[BANK0 ] unsigned int 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       4       0       0       0
  1662 ;;      Locals:         0       2       0       0       0
  1663 ;;      Temps:          0       0       0       0       0
  1664 ;;      Totals:         0       6       0       0       0
  1665 ;;Total ram usage:        6 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_calculaVelocidade
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function ___wmul
  1677  03BF                     ___wmul:	
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1681  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1682  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1683  03C1  01B5               	clrf	___wmul@product
  1684  03C2  01B6               	clrf	___wmul@product+1
  1685  03C3                     l1048:	
  1686  03C3  1C31               	btfss	___wmul@multiplier,0
  1687  03C4  2BCB               	goto	l214
  1688  03C5  0833               	movf	___wmul@multiplicand,w
  1689  03C6  07B5               	addwf	___wmul@product,f
  1690  03C7  1803               	skipnc
  1691  03C8  0AB6               	incf	___wmul@product+1,f
  1692  03C9  0834               	movf	___wmul@multiplicand+1,w
  1693  03CA  07B6               	addwf	___wmul@product+1,f
  1694  03CB                     l214:	
  1695  03CB  3001               	movlw	1
  1696  03CC                     u985:	
  1697  03CC  1003               	clrc
  1698  03CD  0DB3               	rlf	___wmul@multiplicand,f
  1699  03CE  0DB4               	rlf	___wmul@multiplicand+1,f
  1700  03CF  3EFF               	addlw	-1
  1701  03D0  1D03               	skipz
  1702  03D1  2BCC               	goto	u985
  1703  03D2  3001               	movlw	1
  1704  03D3                     u995:	
  1705  03D3  1003               	clrc
  1706  03D4  0CB2               	rrf	___wmul@multiplier+1,f
  1707  03D5  0CB1               	rrf	___wmul@multiplier,f
  1708  03D6  3EFF               	addlw	-1
  1709  03D7  1D03               	skipz
  1710  03D8  2BD3               	goto	u995
  1711  03D9  0831               	movf	___wmul@multiplier,w
  1712  03DA  0432               	iorwf	___wmul@multiplier+1,w
  1713  03DB  1D03               	btfss	3,2
  1714  03DC  2BC3               	goto	l1048
  1715  03DD  0836               	movf	___wmul@product+1,w
  1716  03DE  00B2               	movwf	?___wmul+1
  1717  03DF  0835               	movf	___wmul@product,w
  1718  03E0  00B1               	movwf	?___wmul
  1719  03E1  0008               	return
  1720  03E2                     __end_of___wmul:	
  1721                           
  1722                           	psect	text11
  1723  050A                     __ptext11:	
  1724 ;; *************** function ___awdiv *****************
  1725 ;; Defined at:
  1726 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  divisor         2    8[BANK0 ] int 
  1729 ;;  dividend        2   10[BANK0 ] int 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  quotient        2   15[BANK0 ] int 
  1732 ;;  sign            1   14[BANK0 ] unsigned char 
  1733 ;;  counter         1   13[BANK0 ] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  2    8[BANK0 ] int 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       4       0       0       0
  1744 ;;      Locals:         0       4       0       0       0
  1745 ;;      Temps:          0       1       0       0       0
  1746 ;;      Totals:         0       9       0       0       0
  1747 ;;Total ram usage:        9 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_calculaVelocidade
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function ___awdiv
  1759  050A                     ___awdiv:	
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1763  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1764  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1765  050C  01AE               	clrf	___awdiv@sign
  1766  050D  1FA9               	btfss	___awdiv@divisor+1,7
  1767  050E  2D16               	goto	l1068
  1768  050F  09A8               	comf	___awdiv@divisor,f
  1769  0510  09A9               	comf	___awdiv@divisor+1,f
  1770  0511  0AA8               	incf	___awdiv@divisor,f
  1771  0512  1903               	skipnz
  1772  0513  0AA9               	incf	___awdiv@divisor+1,f
  1773  0514  01AE               	clrf	___awdiv@sign
  1774  0515  0AAE               	incf	___awdiv@sign,f
  1775  0516                     l1068:	
  1776  0516  1FAB               	btfss	___awdiv@dividend+1,7
  1777  0517  2D21               	goto	l1074
  1778  0518  09AA               	comf	___awdiv@dividend,f
  1779  0519  09AB               	comf	___awdiv@dividend+1,f
  1780  051A  0AAA               	incf	___awdiv@dividend,f
  1781  051B  1903               	skipnz
  1782  051C  0AAB               	incf	___awdiv@dividend+1,f
  1783  051D  3001               	movlw	1
  1784  051E  00AC               	movwf	??___awdiv
  1785  051F  082C               	movf	??___awdiv,w
  1786  0520  06AE               	xorwf	___awdiv@sign,f
  1787  0521                     l1074:	
  1788  0521  01AF               	clrf	___awdiv@quotient
  1789  0522  01B0               	clrf	___awdiv@quotient+1
  1790  0523  0828               	movf	___awdiv@divisor,w
  1791  0524  0429               	iorwf	___awdiv@divisor+1,w
  1792  0525  1903               	btfsc	3,2
  1793  0526  2D58               	goto	l1096
  1794  0527  01AD               	clrf	___awdiv@counter
  1795  0528  0AAD               	incf	___awdiv@counter,f
  1796  0529                     l1084:	
  1797  0529  1BA9               	btfsc	___awdiv@divisor+1,7
  1798  052A  2D37               	goto	l1086
  1799  052B  3001               	movlw	1
  1800  052C                     u1045:	
  1801  052C  1003               	clrc
  1802  052D  0DA8               	rlf	___awdiv@divisor,f
  1803  052E  0DA9               	rlf	___awdiv@divisor+1,f
  1804  052F  3EFF               	addlw	-1
  1805  0530  1D03               	skipz
  1806  0531  2D2C               	goto	u1045
  1807  0532  3001               	movlw	1
  1808  0533  00AC               	movwf	??___awdiv
  1809  0534  082C               	movf	??___awdiv,w
  1810  0535  07AD               	addwf	___awdiv@counter,f
  1811  0536  2D29               	goto	l1084
  1812  0537                     l1086:	
  1813  0537  3001               	movlw	1
  1814  0538                     u1065:	
  1815  0538  1003               	clrc
  1816  0539  0DAF               	rlf	___awdiv@quotient,f
  1817  053A  0DB0               	rlf	___awdiv@quotient+1,f
  1818  053B  3EFF               	addlw	-1
  1819  053C  1D03               	skipz
  1820  053D  2D38               	goto	u1065
  1821  053E  0829               	movf	___awdiv@divisor+1,w
  1822  053F  022B               	subwf	___awdiv@dividend+1,w
  1823  0540  1D03               	skipz
  1824  0541  2D44               	goto	u1075
  1825  0542  0828               	movf	___awdiv@divisor,w
  1826  0543  022A               	subwf	___awdiv@dividend,w
  1827  0544                     u1075:	
  1828  0544  1C03               	skipc
  1829  0545  2D4D               	goto	l1092
  1830  0546  0828               	movf	___awdiv@divisor,w
  1831  0547  02AA               	subwf	___awdiv@dividend,f
  1832  0548  0829               	movf	___awdiv@divisor+1,w
  1833  0549  1C03               	skipc
  1834  054A  03AB               	decf	___awdiv@dividend+1,f
  1835  054B  02AB               	subwf	___awdiv@dividend+1,f
  1836  054C  142F               	bsf	___awdiv@quotient,0
  1837  054D                     l1092:	
  1838  054D  3001               	movlw	1
  1839  054E                     u1085:	
  1840  054E  1003               	clrc
  1841  054F  0CA9               	rrf	___awdiv@divisor+1,f
  1842  0550  0CA8               	rrf	___awdiv@divisor,f
  1843  0551  3EFF               	addlw	-1
  1844  0552  1D03               	skipz
  1845  0553  2D4E               	goto	u1085
  1846  0554  3001               	movlw	1
  1847  0555  02AD               	subwf	___awdiv@counter,f
  1848  0556  1D03               	btfss	3,2
  1849  0557  2D37               	goto	l1086
  1850  0558                     l1096:	
  1851  0558  082E               	movf	___awdiv@sign,w
  1852  0559  1903               	btfsc	3,2
  1853  055A  2D60               	goto	l1100
  1854  055B  09AF               	comf	___awdiv@quotient,f
  1855  055C  09B0               	comf	___awdiv@quotient+1,f
  1856  055D  0AAF               	incf	___awdiv@quotient,f
  1857  055E  1903               	skipnz
  1858  055F  0AB0               	incf	___awdiv@quotient+1,f
  1859  0560                     l1100:	
  1860  0560  0830               	movf	___awdiv@quotient+1,w
  1861  0561  00A9               	movwf	?___awdiv+1
  1862  0562  082F               	movf	___awdiv@quotient,w
  1863  0563  00A8               	movwf	?___awdiv
  1864  0564  0008               	return
  1865  0565                     __end_of___awdiv:	
  1866                           
  1867                           	psect	text12
  1868  0719                     __ptext12:	
  1869 ;; *************** function _ISR *****************
  1870 ;; Defined at:
  1871 ;;		line 16 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       8       0       0       0
  1887 ;;      Temps:          7       0       0       0       0
  1888 ;;      Totals:         7       8       0       0       0
  1889 ;;Total ram usage:       15 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		_calculaErro
  1894 ;; This function is called by:
  1895 ;;		Interrupt level 1
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _ISR
  1901  0719                     _ISR:	
  1902                           
  1903                           ;main.c: 18: calculaErro();
  1904  0719  120A  118A  24B7  120A  118A  	fcall	_calculaErro
  1905                           
  1906                           ;main.c: 20: if(speed_ramp <= 100 && error !=0){
  1907  071E  3065               	movlw	101
  1908  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0721  025A               	subwf	_speed_ramp,w
  1911  0722  1803               	skipnc
  1912  0723  2F32               	goto	i1l88
  1913  0724  0856               	movf	_error,w
  1914  0725  0457               	iorwf	_error+1,w
  1915  0726  1903               	btfsc	3,2
  1916  0727  2F32               	goto	i1l88
  1917                           
  1918                           ;main.c: 21: PR2-= 2;
  1919  0728  3002               	movlw	2
  1920  0729  1683               	bsf	3,5	;RP0=1, select bank1
  1921  072A  1303               	bcf	3,6	;RP1=0, select bank1
  1922  072B  0292               	subwf	18,f	;volatile
  1923                           
  1924                           ;main.c: 22: speed_ramp++;
  1925  072C  3001               	movlw	1
  1926  072D  00F7               	movwf	??_ISR
  1927  072E  0877               	movf	??_ISR,w
  1928  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0731  07DA               	addwf	_speed_ramp,f
  1931  0732                     i1l88:	
  1932                           
  1933                           ;main.c: 23: }
  1934                           ;main.c: 25: if(error == 0){
  1935  0732  0856               	movf	_error,w
  1936  0733  0457               	iorwf	_error+1,w
  1937  0734  1D03               	btfss	3,2
  1938  0735  2F3B               	goto	i1l1144
  1939                           
  1940                           ;main.c: 26: speed_ramp=0;
  1941  0736  01DA               	clrf	_speed_ramp
  1942                           
  1943                           ;main.c: 27: PR2 = 255;
  1944  0737  30FF               	movlw	255
  1945  0738  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0739  1303               	bcf	3,6	;RP1=0, select bank1
  1947  073A  0092               	movwf	18	;volatile
  1948  073B                     i1l1144:	
  1949                           
  1950                           ;main.c: 28: }
  1951                           ;main.c: 30: if(error > 0){
  1952  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1953  073C  0857               	movf	_error+1,w
  1954  073D  3A80               	xorlw	128
  1955  073E  00FF               	movwf	127
  1956  073F  3080               	movlw	128
  1957  0740  027F               	subwf	127,w
  1958  0741  1D03               	skipz
  1959  0742  2F45               	goto	u119_25
  1960  0743  3001               	movlw	1
  1961  0744  0256               	subwf	_error,w
  1962  0745                     u119_25:	
  1963  0745  1C03               	skipc
  1964  0746  2F93               	goto	i1l1168
  1965                           
  1966                           ;main.c: 31: STATUSbits.C = 0;
  1967  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0749  1003               	bcf	3,0	;volatile
  1970                           
  1971                           ;main.c: 32: phase = (phase == 0) ? 1 : phase;
  1972  074A  085B               	movf	_phase,w
  1973  074B  1903               	btfsc	3,2
  1974  074C  2F54               	goto	i1l1152
  1975  074D  085B               	movf	_phase,w
  1976  074E  00F7               	movwf	??_ISR
  1977  074F  01F8               	clrf	??_ISR+1
  1978  0750  0877               	movf	??_ISR,w
  1979  0751  00A0               	movwf	_ISR$229
  1980  0752  0878               	movf	??_ISR+1,w
  1981  0753  2F57               	goto	L1
  1982  0754                     i1l1152:	
  1983  0754  3001               	movlw	1
  1984  0755  00A0               	movwf	_ISR$229
  1985  0756  3000               	movlw	0
  1986  0757                     L1:	
  1987  0757  00A1               	movwf	_ISR$229+1
  1988  0758  0820               	movf	_ISR$229,w
  1989  0759  00F7               	movwf	??_ISR
  1990  075A  0877               	movf	??_ISR,w
  1991  075B  00DB               	movwf	_phase
  1992                           
  1993                           ;main.c: 33: phase = (phase == 8) ? phase >> 3 : phase << 1;
  1994  075C  3008               	movlw	8
  1995  075D  065B               	xorwf	_phase,w
  1996  075E  1903               	btfsc	3,2
  1997  075F  2F68               	goto	i1l1158
  1998  0760  085B               	movf	_phase,w
  1999  0761  00F7               	movwf	??_ISR
  2000  0762  01F8               	clrf	??_ISR+1
  2001  0763  1003               	clrc
  2002  0764  0D77               	rlf	??_ISR,w
  2003  0765  00A2               	movwf	_ISR$230
  2004  0766  0D78               	rlf	??_ISR+1,w
  2005  0767  2F76               	goto	L2
  2006  0768                     i1l1158:	
  2007  0768  085B               	movf	_phase,w
  2008  0769  00F7               	movwf	??_ISR
  2009  076A  3003               	movlw	3
  2010  076B                     u122_25:	
  2011  076B  1003               	clrc
  2012  076C  0CF7               	rrf	??_ISR,f
  2013  076D  3EFF               	addlw	-1
  2014  076E  1D03               	skipz
  2015  076F  2F6B               	goto	u122_25
  2016  0770  0877               	movf	??_ISR,w
  2017  0771  00F8               	movwf	??_ISR+1
  2018  0772  01F9               	clrf	??_ISR+2
  2019  0773  0878               	movf	??_ISR+1,w
  2020  0774  00A2               	movwf	_ISR$230
  2021  0775  0879               	movf	??_ISR+2,w
  2022  0776                     L2:	
  2023  0776  00A3               	movwf	_ISR$230+1
  2024  0777  0822               	movf	_ISR$230,w
  2025  0778  00F7               	movwf	??_ISR
  2026  0779  0877               	movf	??_ISR,w
  2027  077A  00DB               	movwf	_phase
  2028                           
  2029                           ;main.c: 34: position = ((position + 1)== 2048) ? 0 : (position + 1);
  2030  077B  085C               	movf	_position,w
  2031  077C  3E01               	addlw	1
  2032  077D  00F7               	movwf	??_ISR
  2033  077E  085D               	movf	_position+1,w
  2034  077F  1803               	skipnc
  2035  0780  3E01               	addlw	1
  2036  0781  3E00               	addlw	0
  2037  0782  00F8               	movwf	??_ISR+1
  2038  0783  3008               	movlw	8
  2039  0784  0678               	xorwf	??_ISR+1,w
  2040  0785  0477               	iorwf	??_ISR,w
  2041  0786  1903               	btfsc	3,2
  2042  0787  2F91               	goto	i1l1166
  2043  0788  085C               	movf	_position,w
  2044  0789  3E01               	addlw	1
  2045  078A  00DC               	movwf	_position
  2046  078B  085D               	movf	_position+1,w
  2047  078C  1803               	skipnc
  2048  078D  3E01               	addlw	1
  2049  078E  3E00               	addlw	0
  2050  078F  00DD               	movwf	_position+1
  2051  0790  2F93               	goto	i1l1168
  2052  0791                     i1l1166:	
  2053  0791  01DC               	clrf	_position
  2054  0792  01DD               	clrf	_position+1
  2055  0793                     i1l1168:	
  2056                           
  2057                           ;main.c: 35: }
  2058                           ;main.c: 37: if(error < 0){
  2059  0793  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0794  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0795  1FD7               	btfss	_error+1,7
  2062  0796  2FE4               	goto	i1l103
  2063                           
  2064                           ;main.c: 38: STATUSbits.C = 0;
  2065  0797  1003               	bcf	3,0	;volatile
  2066                           
  2067                           ;main.c: 39: phase = (phase == 0) ? 8 : phase;
  2068  0798  085B               	movf	_phase,w
  2069  0799  1903               	btfsc	3,2
  2070  079A  2FA2               	goto	i1l1176
  2071  079B  085B               	movf	_phase,w
  2072  079C  00F7               	movwf	??_ISR
  2073  079D  01F8               	clrf	??_ISR+1
  2074  079E  0877               	movf	??_ISR,w
  2075  079F  00A4               	movwf	_ISR$231
  2076  07A0  0878               	movf	??_ISR+1,w
  2077  07A1  2FA5               	goto	L3
  2078  07A2                     i1l1176:	
  2079  07A2  3008               	movlw	8
  2080  07A3  00A4               	movwf	_ISR$231
  2081  07A4  3000               	movlw	0
  2082  07A5                     L3:	
  2083  07A5  00A5               	movwf	_ISR$231+1
  2084  07A6  0824               	movf	_ISR$231,w
  2085  07A7  00F7               	movwf	??_ISR
  2086  07A8  0877               	movf	??_ISR,w
  2087  07A9  00DB               	movwf	_phase
  2088                           
  2089                           ;main.c: 40: phase = (phase == 1) ? phase << 3 : phase >> 1;
  2090  07AA  035B               	decf	_phase,w
  2091  07AB  1903               	btfsc	3,2
  2092  07AC  2FB7               	goto	i1l1182
  2093  07AD  085B               	movf	_phase,w
  2094  07AE  00F7               	movwf	??_ISR
  2095  07AF  1003               	clrc
  2096  07B0  0C77               	rrf	??_ISR,w
  2097  07B1  00F8               	movwf	??_ISR+1
  2098  07B2  01F9               	clrf	??_ISR+2
  2099  07B3  0878               	movf	??_ISR+1,w
  2100  07B4  00A6               	movwf	_ISR$232
  2101  07B5  0879               	movf	??_ISR+2,w
  2102  07B6  2FC6               	goto	L4
  2103  07B7                     i1l1182:	
  2104  07B7  085B               	movf	_phase,w
  2105  07B8  00F7               	movwf	??_ISR
  2106  07B9  01F8               	clrf	??_ISR+1
  2107  07BA  1003               	clrc
  2108  07BB  0DF7               	rlf	??_ISR,f
  2109  07BC  0DF8               	rlf	??_ISR+1,f
  2110  07BD  1003               	clrc
  2111  07BE  0DF7               	rlf	??_ISR,f
  2112  07BF  0DF8               	rlf	??_ISR+1,f
  2113  07C0  1003               	clrc
  2114  07C1  0DF7               	rlf	??_ISR,f
  2115  07C2  0DF8               	rlf	??_ISR+1,f
  2116  07C3  0877               	movf	??_ISR,w
  2117  07C4  00A6               	movwf	_ISR$232
  2118  07C5  0878               	movf	??_ISR+1,w
  2119  07C6                     L4:	
  2120  07C6  00A7               	movwf	_ISR$232+1
  2121  07C7  0826               	movf	_ISR$232,w
  2122  07C8  00F7               	movwf	??_ISR
  2123  07C9  0877               	movf	??_ISR,w
  2124  07CA  00DB               	movwf	_phase
  2125                           
  2126                           ;main.c: 41: position = ((position - 1)== -1) ? 2047 : (position - 1);
  2127  07CB  085C               	movf	_position,w
  2128  07CC  3EFF               	addlw	255
  2129  07CD  00F7               	movwf	??_ISR
  2130  07CE  085D               	movf	_position+1,w
  2131  07CF  1803               	skipnc
  2132  07D0  3E01               	addlw	1
  2133  07D1  3EFF               	addlw	255
  2134  07D2  00F8               	movwf	??_ISR+1
  2135  07D3  0A77               	incf	??_ISR,w
  2136  07D4  1903               	btfsc	3,2
  2137  07D5  0A78               	incf	??_ISR+1,w
  2138  07D6  1903               	btfsc	3,2
  2139  07D7  2FE0               	goto	i1l1190
  2140  07D8  085C               	movf	_position,w
  2141  07D9  3EFF               	addlw	255
  2142  07DA  00DC               	movwf	_position
  2143  07DB  085D               	movf	_position+1,w
  2144  07DC  1803               	skipnc
  2145  07DD  3E01               	addlw	1
  2146  07DE  3EFF               	addlw	255
  2147  07DF  2FE3               	goto	L5
  2148  07E0                     i1l1190:	
  2149  07E0  30FF               	movlw	255
  2150  07E1  00DC               	movwf	_position
  2151  07E2  3007               	movlw	7
  2152  07E3                     L5:	
  2153  07E3  00DD               	movwf	_position+1
  2154  07E4                     i1l103:	
  2155                           
  2156                           ;main.c: 42: }
  2157                           ;main.c: 44: PORTD = phase;
  2158  07E4  085B               	movf	_phase,w
  2159  07E5  0088               	movwf	8	;volatile
  2160                           
  2161                           ;main.c: 46: PIR1bits.TMR2IF = 0;
  2162  07E6  108C               	bcf	12,1	;volatile
  2163  07E7  087D               	movf	??_ISR+6,w
  2164  07E8  00FF               	movwf	127
  2165  07E9  087C               	movf	??_ISR+5,w
  2166  07EA  008A               	movwf	10
  2167  07EB  087B               	movf	??_ISR+4,w
  2168  07EC  0084               	movwf	4
  2169  07ED  0E7A               	swapf	(??_ISR+3)^(0+-128),w
  2170  07EE  0083               	movwf	3
  2171  07EF  0EFE               	swapf	126,f
  2172  07F0  0E7E               	swapf	126,w
  2173  07F1  0009               	retfie
  2174  07F2                     __end_of_ISR:	
  2175                           
  2176                           	psect	intentry
  2177  0004                     __pintentry:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2180                           
  2181  0004                     interrupt_function:	
  2182  007E                     saved_w	set	btemp
  2183  0004  00FE               	movwf	btemp
  2184  0005  0E03               	swapf	3,w
  2185  0006  00FA               	movwf	??_ISR+3
  2186  0007  0804               	movf	4,w
  2187  0008  00FB               	movwf	??_ISR+4
  2188  0009  080A               	movf	10,w
  2189  000A  00FC               	movwf	??_ISR+5
  2190  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2191  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2192  000D  087F               	movf	btemp+1,w
  2193  000E  00FD               	movwf	??_ISR+6
  2194  000F  120A  118A  2F19   	ljmp	_ISR
  2195                           
  2196                           	psect	text13
  2197  04B7                     __ptext13:	
  2198 ;; *************** function _calculaErro *****************
  2199 ;; Defined at:
  2200 ;;		line 32 in file "C:\Users\Aluno\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0
  2216 ;;      Temps:          2       0       0       0       0
  2217 ;;      Totals:         2       0       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		_abs
  2223 ;; This function is called by:
  2224 ;;		_ISR
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _calculaErro
  2230  04B7                     _calculaErro:	
  2231                           
  2232                           ;stepper.c: 33: error = abs(position - setpoint);
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _calculaErro: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2236  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2237  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2238  04B9  0958               	comf	_setpoint,w
  2239  04BA  00F5               	movwf	??_calculaErro
  2240  04BB  0959               	comf	_setpoint+1,w
  2241  04BC  00F6               	movwf	??_calculaErro+1
  2242  04BD  0AF5               	incf	??_calculaErro,f
  2243  04BE  1903               	skipnz
  2244  04BF  0AF6               	incf	??_calculaErro+1,f
  2245  04C0  085C               	movf	_position,w
  2246  04C1  0775               	addwf	??_calculaErro,w
  2247  04C2  00F1               	movwf	abs@a
  2248  04C3  085D               	movf	_position+1,w
  2249  04C4  1803               	skipnc
  2250  04C5  0A5D               	incf	_position+1,w
  2251  04C6  0776               	addwf	??_calculaErro+1,w
  2252  04C7  00F2               	movwf	abs@a+1
  2253  04C8  120A  118A  2375  120A  118A  	fcall	_abs
  2254  04CD  0872               	movf	?_abs+1,w
  2255  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2256  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2257  04D0  00D7               	movwf	_error+1
  2258  04D1  0871               	movf	?_abs,w
  2259  04D2  00D6               	movwf	_error
  2260                           
  2261                           ;stepper.c: 35: if(setpoint > position && error > 2048)
  2262  04D3  0859               	movf	_setpoint+1,w
  2263  04D4  025D               	subwf	_position+1,w
  2264  04D5  1D03               	skipz
  2265  04D6  2CD9               	goto	u111_25
  2266  04D7  0858               	movf	_setpoint,w
  2267  04D8  025C               	subwf	_position,w
  2268  04D9                     u111_25:	
  2269  04D9  1803               	skipnc
  2270  04DA  2CED               	goto	i1l1114
  2271  04DB  0857               	movf	_error+1,w
  2272  04DC  3A80               	xorlw	128
  2273  04DD  00FF               	movwf	127
  2274  04DE  3088               	movlw	136
  2275  04DF  027F               	subwf	127,w
  2276  04E0  1D03               	skipz
  2277  04E1  2CE4               	goto	u112_25
  2278  04E2  3001               	movlw	1
  2279  04E3  0256               	subwf	_error,w
  2280  04E4                     u112_25:	
  2281  04E4  1C03               	skipc
  2282  04E5  2CED               	goto	i1l1114
  2283                           
  2284                           ;stepper.c: 36: error = -error;
  2285  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2286  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2287  04E8  09D6               	comf	_error,f
  2288  04E9  09D7               	comf	_error+1,f
  2289  04EA  0AD6               	incf	_error,f
  2290  04EB  1903               	skipnz
  2291  04EC  0AD7               	incf	_error+1,f
  2292  04ED                     i1l1114:	
  2293                           
  2294                           ;stepper.c: 38: if(setpoint < position && error < 2048)
  2295  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2296  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2297  04EF  085D               	movf	_position+1,w
  2298  04F0  0259               	subwf	_setpoint+1,w
  2299  04F1  1D03               	skipz
  2300  04F2  2CF5               	goto	u113_25
  2301  04F3  085C               	movf	_position,w
  2302  04F4  0258               	subwf	_setpoint,w
  2303  04F5                     u113_25:	
  2304  04F5  1803               	skipnc
  2305  04F6  0008               	return
  2306  04F7  0857               	movf	_error+1,w
  2307  04F8  3A80               	xorlw	128
  2308  04F9  00FF               	movwf	127
  2309  04FA  3088               	movlw	136
  2310  04FB  027F               	subwf	127,w
  2311  04FC  1D03               	skipz
  2312  04FD  2D00               	goto	u114_25
  2313  04FE  3000               	movlw	0
  2314  04FF  0256               	subwf	_error,w
  2315  0500                     u114_25:	
  2316  0500  1803               	skipnc
  2317  0501  0008               	return
  2318                           
  2319                           ;stepper.c: 39: error = -error;
  2320  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0504  09D6               	comf	_error,f
  2323  0505  09D7               	comf	_error+1,f
  2324  0506  0AD6               	incf	_error,f
  2325  0507  1903               	skipnz
  2326  0508  0AD7               	incf	_error+1,f
  2327  0509  0008               	return
  2328  050A                     __end_of_calculaErro:	
  2329                           
  2330                           	psect	text14
  2331  0375                     __ptext14:	
  2332 ;; *************** function _abs *****************
  2333 ;; Defined at:
  2334 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  a               2    0[COMMON] int 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  2    0[COMMON] int 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         2       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0
  2350 ;;      Temps:          2       0       0       0       0
  2351 ;;      Totals:         4       0       0       0       0
  2352 ;;Total ram usage:        4 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_calculaErro
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _abs
  2363  0375                     _abs:	
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _abs: [wreg+status,2+status,0]
  2367  0375  1FF2               	btfss	abs@a+1,7
  2368  0376  0008               	return
  2369  0377  0971               	comf	abs@a,w
  2370  0378  00F3               	movwf	??_abs
  2371  0379  0972               	comf	abs@a+1,w
  2372  037A  00F4               	movwf	??_abs+1
  2373  037B  0AF3               	incf	??_abs,f
  2374  037C  1903               	skipnz
  2375  037D  0AF4               	incf	??_abs+1,f
  2376  037E  0873               	movf	??_abs,w
  2377  037F  00F1               	movwf	?_abs
  2378  0380  0874               	movf	??_abs+1,w
  2379  0381  00F2               	movwf	?_abs+1
  2380  0382  0008               	return
  2381  0383                     __end_of_abs:	
  2382  007E                     btemp	set	126	;btemp
  2383  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     52      62
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_calculaErro
    _calculaErro->_abs

Critical Paths under _main in BANK0

    _main->_setPosicaoDesejada
    _setup->_setPosicaoAtual
    _setPosicaoAtual->___fttol
    _setPosicaoDesejada->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft
    _calculaVelocidade->___wmul
    ___wmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9685
                  _calculaVelocidade
                 _setPosicaoDesejada
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4423
                    _setPosicaoAtual
                       _setupStepper
 ---------------------------------------------------------------------------------
 (2) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPosicaoAtual                                      2     0      2    4423
                                             50 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _setPosicaoDesejada                                   2     0      2    4529
                                             50 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1813
                                             16 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     411
                                             36 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2124
                                             20 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1632
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _calculaVelocidade                                    4     4      0     733
                                             23 BANK0      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                             17 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 15    15      0     215
                                              6 COMMON     7     7      0
                                              0 BANK0      8     8      0
                        _calculaErro
 ---------------------------------------------------------------------------------
 (6) _calculaErro                                          2     2      0     119
                                              4 COMMON     2     2      0
                                _abs
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     119
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculaVelocidade
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _setPosicaoDesejada
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _setup
     _setPosicaoAtual
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _setupStepper

 _ISR (ROOT)
   _calculaErro
     _abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 12 15:15:22 2022

                       __CFG_CP$OFF 0000                        ___awdiv@sign 002E  
               ___wmul@multiplicand 0033                                 l214 03CB  
                               l127 046D                                 l470 0647  
                               l386 05B2                                 l387 05BA  
                               l379 059D                                 l910 0576  
                               l920 05A2                                 l912 0582  
                               l922 05AC                                 l914 0587  
                               l906 056F                                 l940 0679  
                               l960 06D4                                 l946 068F  
                               l982 05ED                                 l968 06F3  
                               _PR2 0092                        __CFG_CPD$OFF 0000  
                               _ISR 0719                                 u705 0596  
                               u725 05A5                                 u805 06A1  
                               u815 06B3                                 u825 06D5  
                               u905 0620                                 u835 06E6  
                               u765 05C1                                 u685 057B  
                               u845 06F4                                 u935 063E  
                               u875 05F4                                 u985 03CC  
                               u995 03D3                                 _abs 0375  
                               fsr0 0004                        __CFG_IESO$ON 0000  
                      __CFG_LVP$OFF 0000                                ?_ISR 0071  
                      ___ftdiv@cntr 003E                        ___ftdiv@sign 0043  
                              l1000 061F                                l1010 064A  
                              l1002 062F                                l1100 0560  
                              l1014 0658                                l1008 063C  
                              l1200 0453                                ?_abs 0071  
                              l1124 04B4                                l1204 0460  
                              l1048 03C3                                l1074 0521  
                              l1092 054D                                l1084 0529  
                              l1068 0516                                l1086 0537  
                              l1096 0558                                l1196 0447  
                              u1045 052C                                u1065 0538  
                              u1075 0544                                u1085 054E  
                              i1l88 0732                        __CFG_WRT$OFF 0000  
                     __CFG_FCMEN$ON 0000                                abs@a 0071  
                              _main 0442                        ___ftpack@arg 0028  
                      ___ftpack@exp 002B                                btemp 007E  
                     __CFG_BOREN$ON 0000                                start 0012  
                     __CFG_MCLRE$ON 0000                               ??_ISR 0077  
                      ___fttol@exp1 0051                               ??_abs 0073  
                      ___fttol@lval 004D                __size_of_calculaErro 0053  
                             ?_main 0071                     __end_of___awdiv 0565  
                     __CFG_WDTE$OFF 0000                     __end_of___ftdiv 0719  
                   ___awdiv@divisor 0028                     __end_of___fttol 0661  
                             _T2CON 0012                      __CFG_DEBUG$OFF 0000  
                             i1l103 07E4                     ___awdiv@counter 002D  
                             _PORTD 0008                               _TRISD 0088  
                             _error 0056                               _phase 005B  
                     ___ftpack@sign 002C                               _speed 0054  
                             _setup 0383                               pclath 000A  
                             status 0003                               wtemp0 007E  
                 _calculaVelocidade 0473                  ?_calculaVelocidade 0071  
                   __initialization 07F2                        __end_of_main 0473  
               ??_calculaVelocidade 0037                              ??_main 0054  
                     ___fttol@sign1 004C            __size_of_setPosicaoAtual 0030  
                  ___awdiv@dividend 002A                              ?_setup 0071  
                  __end_of___ftpack 05D3                              i1l1114 04ED  
                            i1l1152 0754                              i1l1144 073B  
                            u111_25 04D9                              i1l1190 07E0  
                            i1l1182 07B7                              i1l1166 0791  
                            i1l1158 0768                              i1l1176 07A2  
                            i1l1168 0793                              u112_25 04E4  
         __end_of_calculaVelocidade 04B7                              u113_25 04F5  
                            u114_25 0500                              u122_25 076B  
                            u119_25 0745                    __end_of___lwtoft 03BF  
        __end_of_setPosicaoDesejada 0412                      __CFG_PWRTE$OFF 0000  
                            ___wmul 03BF                           ??___awdiv 002C  
                         ??___ftdiv 003A                           ??___fttol 0048  
                  ___awdiv@quotient 002F                              saved_w 007E  
           __end_of__initialization 07FC                          ___ftdiv@f1 0037  
                        ___ftdiv@f2 0034                          ___ftdiv@f3 003F  
                        ___fttol@f1 0044                      __pcstackCOMMON 0071  
                     __end_of_setup 0391                          ___lwtoft@c 0030  
                           ??_setup 0054                          __pbssBANK0 0054  
        __size_of_calculaVelocidade 0044                   ??_setPosicaoAtual 0054  
                        __pmaintext 0442                             ?___wmul 0031  
                        __pintentry 0004                           ?___ftpack 0028  
                         ?___lwtoft 0030                             _ISR$230 0022  
                           _ISR$231 0024                             _ISR$232 0026  
                           _ISR$229 0020                             ___awdiv 050A  
                     ??_calculaErro 0075                             ___ftdiv 0661  
                   __size_of___wmul 0023                             ___fttol 05D3  
                        ??___ftpack 002D                             __ptext1 0383  
                           __ptext2 0391                             __ptext3 0412  
                           __ptext4 03E2                             __ptext5 03A7  
                           __ptext6 05D3                             __ptext7 0661  
                           __ptext8 0565                             __ptext9 0473  
setPosicaoDesejada@posicao_desejada 0052                          ??___lwtoft 0033  
                      __size_of_ISR 00D9                        __size_of_abs 000E  
              end_of_initialization 07FC                  _setPosicaoDesejada 03E2  
                        _speed_ramp 005A                       ?_setupStepper 0071  
                         _PORTDbits 0008                 __end_of_calculaErro 050A  
               ?_setPosicaoDesejada 0052                         ___ftdiv@exp 0042  
              ??_setPosicaoDesejada 0054                      __end_of___wmul 03E2  
                    ??_setupStepper 0028                     _setPosicaoAtual 0412  
               start_initialization 07F2                         __end_of_ISR 07F2  
                       __end_of_abs 0383            __CFG_FOSC$INTRC_NOCLKOUT 0000  
                          ??___wmul 0035                         _calculaErro 04B7  
                 __size_of___ftpack 006E                           ___latbits 0002  
                 __size_of___lwtoft 0018                       __pcstackBANK0 0020  
                         __pnvBANK0 005C                            ?___awdiv 0028  
                          ?___ftdiv 0034                            ?___fttol 0044  
           __end_of_setPosicaoAtual 0442                      __size_of_setup 000E  
                 interrupt_function 0004                __end_of_setupStepper 03A7  
                    ___wmul@product 0035                            _PIE1bits 008C  
                          _PIR1bits 000C                   ___wmul@multiplier 0031  
                  __size_of___awdiv 005B                    __size_of___ftdiv 00B8  
                  ?_setPosicaoAtual 0052                    __size_of___fttol 008E  
                          ___ftpack 0565                            ___lwtoft 03A7  
                          __ptext10 03BF                            __ptext11 050A  
                          __ptext12 0719                            __ptext13 04B7  
                          __ptext14 0375                   __CFG_BOR4V$BOR40V 0000  
                     __size_of_main 0031         __size_of_setPosicaoDesejada 0030  
                          _setpoint 0058                            _position 005C  
                      ?_calculaErro 0071        setPosicaoAtual@posicao_atual 0052  
                        _INTCONbits 000B               __size_of_setupStepper 0016  
                          intlevel1 0000               _calculaVelocidade$655 0039  
                      _setupStepper 0391                          _STATUSbits 0003  



Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 08 16:35:21 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	nvBANK0
   216  0059                     __pnvBANK0:	
   217  0059                     _position:	
   218  0059                     	ds	2
   219  0008                     _PORTDbits	set	8
   220  0008                     _PORTD	set	8
   221  0003                     _STATUSbits	set	3
   222  0012                     _T2CON	set	18
   223  000C                     _PIR1bits	set	12
   224  000B                     _INTCONbits	set	11
   225  0092                     _PR2	set	146
   226  008C                     _PIE1bits	set	140
   227  0088                     _TRISD	set	136
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  07F5                     start_initialization:	
   233  07F5                     __initialization:	
   234                           
   235                           ; Clear objects allocated to BANK0
   236  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   237  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   238  07F7  01D4               	clrf	__pbssBANK0& (0+127)
   239  07F8  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   240  07F9  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   241  07FA  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   242  07FB  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   243  07FC                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  07FC                     __end_of__initialization:	
   247  07FC  0183               	clrf	3
   248  07FD  120A  118A  2CA5   	ljmp	_main	;jump to C main() function
   249                           
   250                           	psect	bssBANK0
   251  0054                     __pbssBANK0:	
   252  0054                     _error:	
   253  0054                     	ds	2
   254  0056                     _setpoint:	
   255  0056                     	ds	2
   256  0058                     _phase:	
   257  0058                     	ds	1
   258                           
   259                           	psect	cstackCOMMON
   260  0071                     __pcstackCOMMON:	
   261  0071                     ?_setupStepper:	
   262  0071                     ?_calculaErro:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0071                     ?_ISR:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0071                     ?_setup:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0071                     ?_main:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0071                     ?_abs:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0071                     abs@a:	
   278                           ; 2 bytes @ 0x0
   279                           
   280                           
   281                           ; 2 bytes @ 0x0
   282  0071                     	ds	2
   283  0073                     ??_abs:	
   284                           
   285                           ; 1 bytes @ 0x2
   286  0073                     	ds	2
   287  0075                     ??_calculaErro:	
   288                           
   289                           ; 1 bytes @ 0x4
   290  0075                     	ds	2
   291  0077                     ??_ISR:	
   292                           
   293                           ; 1 bytes @ 0x6
   294  0077                     	ds	7
   295                           
   296                           	psect	cstackBANK0
   297  0020                     __pcstackBANK0:	
   298  0020                     _ISR$221:	
   299                           
   300                           ; 2 bytes @ 0x0
   301  0020                     	ds	2
   302  0022                     _ISR$222:	
   303                           
   304                           ; 2 bytes @ 0x2
   305  0022                     	ds	2
   306  0024                     _ISR$223:	
   307                           
   308                           ; 2 bytes @ 0x4
   309  0024                     	ds	2
   310  0026                     _ISR$224:	
   311                           
   312                           ; 2 bytes @ 0x6
   313  0026                     	ds	2
   314  0028                     ??_setupStepper:	
   315  0028                     ?___ftpack:	
   316                           ; 1 bytes @ 0x8
   317                           
   318  0028                     ___ftpack@arg:	
   319                           ; 3 bytes @ 0x8
   320                           
   321                           
   322                           ; 3 bytes @ 0x8
   323  0028                     	ds	3
   324  002B                     ___ftpack@exp:	
   325                           
   326                           ; 1 bytes @ 0xB
   327  002B                     	ds	1
   328  002C                     ___ftpack@sign:	
   329                           
   330                           ; 1 bytes @ 0xC
   331  002C                     	ds	1
   332  002D                     ??___ftpack:	
   333                           
   334                           ; 1 bytes @ 0xD
   335  002D                     	ds	3
   336  0030                     ?___lwtoft:	
   337  0030                     ___lwtoft@c:	
   338                           ; 3 bytes @ 0x10
   339                           
   340                           
   341                           ; 2 bytes @ 0x10
   342  0030                     	ds	3
   343  0033                     ??___lwtoft:	
   344                           
   345                           ; 1 bytes @ 0x13
   346  0033                     	ds	1
   347  0034                     ?___ftdiv:	
   348  0034                     ___ftdiv@f2:	
   349                           ; 3 bytes @ 0x14
   350                           
   351                           
   352                           ; 3 bytes @ 0x14
   353  0034                     	ds	3
   354  0037                     ___ftdiv@f1:	
   355                           
   356                           ; 3 bytes @ 0x17
   357  0037                     	ds	3
   358  003A                     ??___ftdiv:	
   359                           
   360                           ; 1 bytes @ 0x1A
   361  003A                     	ds	4
   362  003E                     ___ftdiv@cntr:	
   363                           
   364                           ; 1 bytes @ 0x1E
   365  003E                     	ds	1
   366  003F                     ___ftdiv@f3:	
   367                           
   368                           ; 3 bytes @ 0x1F
   369  003F                     	ds	3
   370  0042                     ___ftdiv@exp:	
   371                           
   372                           ; 1 bytes @ 0x22
   373  0042                     	ds	1
   374  0043                     ___ftdiv@sign:	
   375                           
   376                           ; 1 bytes @ 0x23
   377  0043                     	ds	1
   378  0044                     ?___fttol:	
   379  0044                     ___fttol@f1:	
   380                           ; 4 bytes @ 0x24
   381                           
   382                           
   383                           ; 3 bytes @ 0x24
   384  0044                     	ds	4
   385  0048                     ??___fttol:	
   386                           
   387                           ; 1 bytes @ 0x28
   388  0048                     	ds	4
   389  004C                     ___fttol@sign1:	
   390                           
   391                           ; 1 bytes @ 0x2C
   392  004C                     	ds	1
   393  004D                     ___fttol@lval:	
   394                           
   395                           ; 4 bytes @ 0x2D
   396  004D                     	ds	4
   397  0051                     ___fttol@exp1:	
   398                           
   399                           ; 1 bytes @ 0x31
   400  0051                     	ds	1
   401  0052                     ?_setPosicaoAtual:	
   402  0052                     ?_setPosicaoDesejada:	
   403                           ; 1 bytes @ 0x32
   404                           
   405  0052                     setPosicaoAtual@posicao_atual:	
   406                           ; 1 bytes @ 0x32
   407                           
   408  0052                     setPosicaoDesejada@posicao_desejada:	
   409                           ; 2 bytes @ 0x32
   410                           
   411                           
   412                           ; 2 bytes @ 0x32
   413  0052                     	ds	2
   414  0054                     ??_setPosicaoAtual:	
   415  0054                     ??_setPosicaoDesejada:	
   416                           ; 1 bytes @ 0x34
   417                           
   418  0054                     ??_setup:	
   419                           ; 1 bytes @ 0x34
   420                           
   421  0054                     ??_main:	
   422                           ; 1 bytes @ 0x34
   423                           
   424                           
   425                           	psect	maintext
   426  04A5                     __pmaintext:	
   427                           ; 1 bytes @ 0x34
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 45 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels required when called:    7
   453 ;; This function calls:
   454 ;;		_setPosicaoDesejada
   455 ;;		_setup
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  04A5                     _main:	
   464                           
   465                           ;main.c: 47: setup();
   466                           
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   469  04A5  120A  118A  246E  120A  118A  	fcall	_setup
   470  04AA                     l1010:	
   471                           ;main.c: 49: while(1){
   472                           
   473                           
   474                           ;main.c: 51: if(PORTDbits.RD4==1)
   475  04AA  1283               	bcf	3,5	;RP0=0, select bank0
   476  04AB  1303               	bcf	3,6	;RP1=0, select bank0
   477  04AC  1E08               	btfss	8,4	;volatile
   478  04AD  2CB6               	goto	l1014
   479                           
   480                           ;main.c: 52: setPosicaoDesejada(0);
   481  04AE  3000               	movlw	0
   482  04AF  00D2               	movwf	setPosicaoDesejada@posicao_desejada
   483  04B0  00D3               	movwf	setPosicaoDesejada@posicao_desejada+1
   484  04B1  120A  118A  24D1  120A  118A  	fcall	_setPosicaoDesejada
   485  04B6                     l1014:	
   486                           
   487                           ;main.c: 53: if(PORTDbits.RD5==1)
   488  04B6  1283               	bcf	3,5	;RP0=0, select bank0
   489  04B7  1303               	bcf	3,6	;RP1=0, select bank0
   490  04B8  1E88               	btfss	8,5	;volatile
   491  04B9  2CC3               	goto	l1018
   492                           
   493                           ;main.c: 54: setPosicaoDesejada(90);
   494  04BA  305A               	movlw	90
   495  04BB  00D2               	movwf	setPosicaoDesejada@posicao_desejada
   496  04BC  3000               	movlw	0
   497  04BD  00D3               	movwf	setPosicaoDesejada@posicao_desejada+1
   498  04BE  120A  118A  24D1  120A  118A  	fcall	_setPosicaoDesejada
   499  04C3                     l1018:	
   500                           
   501                           ;main.c: 55: if(PORTDbits.RD6==1)
   502  04C3  1283               	bcf	3,5	;RP0=0, select bank0
   503  04C4  1303               	bcf	3,6	;RP1=0, select bank0
   504  04C5  1F08               	btfss	8,6	;volatile
   505  04C6  2CAA               	goto	l1010
   506                           
   507                           ;main.c: 56: setPosicaoDesejada(180);
   508  04C7  30B4               	movlw	180
   509  04C8  00D2               	movwf	setPosicaoDesejada@posicao_desejada
   510  04C9  3000               	movlw	0
   511  04CA  00D3               	movwf	setPosicaoDesejada@posicao_desejada+1
   512  04CB  120A  118A  24D1  120A  118A  	fcall	_setPosicaoDesejada
   513  04D0  2CAA               	goto	l1010
   514  04D1                     __end_of_main:	
   515                           
   516                           	psect	text1
   517  046E                     __ptext1:	
   518 ;; *************** function _setup *****************
   519 ;; Defined at:
   520 ;;		line 38 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    6
   541 ;; This function calls:
   542 ;;		_setPosicaoAtual
   543 ;;		_setupStepper
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _setup
   551  046E                     _setup:	
   552                           
   553                           ;main.c: 40: setupStepper();
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   557  046E  120A  118A  247C  120A  118A  	fcall	_setupStepper
   558                           
   559                           ;main.c: 41: setPosicaoAtual(0);
   560  0473  3000               	movlw	0
   561  0474  1283               	bcf	3,5	;RP0=0, select bank0
   562  0475  1303               	bcf	3,6	;RP1=0, select bank0
   563  0476  00D2               	movwf	setPosicaoAtual@posicao_atual
   564  0477  00D3               	movwf	setPosicaoAtual@posicao_atual+1
   565  0478  120A  118A  2501   	fcall	_setPosicaoAtual
   566  047B  0008               	return
   567  047C                     __end_of_setup:	
   568                           
   569                           	psect	text2
   570  047C                     __ptext2:	
   571 ;; *************** function _setupStepper *****************
   572 ;; Defined at:
   573 ;;		line 6 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0
   590 ;;      Totals:         0       0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    3
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_setup
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _setupStepper
   603  047C                     _setupStepper:	
   604                           
   605                           ;stepper.c: 8: TRISD = 0b11110000;
   606                           
   607                           ;incstack = 0
   608                           ; Regs used in _setupStepper: [wreg]
   609  047C  30F0               	movlw	240
   610  047D  1683               	bsf	3,5	;RP0=1, select bank1
   611  047E  1303               	bcf	3,6	;RP1=0, select bank1
   612  047F  0088               	movwf	8	;volatile
   613                           
   614                           ;stepper.c: 10: INTCONbits.GIE = 1;
   615  0480  178B               	bsf	11,7	;volatile
   616                           
   617                           ;stepper.c: 11: INTCONbits.PEIE = 1;
   618  0481  170B               	bsf	11,6	;volatile
   619                           
   620                           ;stepper.c: 13: PIE1bits.TMR2IE = 1;
   621  0482  148C               	bsf	12,1	;volatile
   622                           
   623                           ;stepper.c: 14: PIR1bits.TMR2IF = 0;
   624  0483  1283               	bcf	3,5	;RP0=0, select bank0
   625  0484  1303               	bcf	3,6	;RP1=0, select bank0
   626  0485  108C               	bcf	12,1	;volatile
   627                           
   628                           ;stepper.c: 15: T2CON = 0b01111110;
   629  0486  307E               	movlw	126
   630  0487  0092               	movwf	18	;volatile
   631                           
   632                           ;stepper.c: 16: PR2=50;
   633  0488  3032               	movlw	50
   634  0489  1683               	bsf	3,5	;RP0=1, select bank1
   635  048A  1303               	bcf	3,6	;RP1=0, select bank1
   636  048B  0092               	movwf	18	;volatile
   637  048C  0008               	return
   638  048D                     __end_of_setupStepper:	
   639                           
   640                           	psect	text3
   641  0501                     __ptext3:	
   642 ;; *************** function _setPosicaoAtual *****************
   643 ;; Defined at:
   644 ;;		line 19 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  posicao_atua    2   50[BANK0 ] unsigned int 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       2       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0
   661 ;;      Totals:         0       2       0       0       0
   662 ;;Total ram usage:        2 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    5
   665 ;; This function calls:
   666 ;;		___ftdiv
   667 ;;		___fttol
   668 ;;		___lwtoft
   669 ;; This function is called by:
   670 ;;		_setup
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _setPosicaoAtual
   676  0501                     _setPosicaoAtual:	
   677                           
   678                           ;stepper.c: 20: position = posicao_atual/(5.625/32);
   679                           
   680                           ;incstack = 0
   681                           ; Regs used in _setPosicaoAtual: [wreg+status,2+status,0+pclath+cstack]
   682  0501  1283               	bcf	3,5	;RP0=0, select bank0
   683  0502  1303               	bcf	3,6	;RP1=0, select bank0
   684  0503  0853               	movf	setPosicaoAtual@posicao_atual+1,w
   685  0504  00B1               	movwf	___lwtoft@c+1
   686  0505  0852               	movf	setPosicaoAtual@posicao_atual,w
   687  0506  00B0               	movwf	___lwtoft@c
   688  0507  120A  118A  248D  120A  118A  	fcall	___lwtoft
   689  050C  1283               	bcf	3,5	;RP0=0, select bank0
   690  050D  1303               	bcf	3,6	;RP1=0, select bank0
   691  050E  0830               	movf	?___lwtoft,w
   692  050F  00B7               	movwf	___ftdiv@f1
   693  0510  0831               	movf	?___lwtoft+1,w
   694  0511  00B8               	movwf	___ftdiv@f1+1
   695  0512  0832               	movf	?___lwtoft+2,w
   696  0513  00B9               	movwf	___ftdiv@f1+2
   697  0514  3000               	movlw	0
   698  0515  00B4               	movwf	___ftdiv@f2
   699  0516  3034               	movlw	52
   700  0517  00B5               	movwf	___ftdiv@f2+1
   701  0518  303E               	movlw	62
   702  0519  00B6               	movwf	___ftdiv@f2+2
   703  051A  120A  118A  2680  120A  118A  	fcall	___ftdiv
   704  051F  1283               	bcf	3,5	;RP0=0, select bank0
   705  0520  1303               	bcf	3,6	;RP1=0, select bank0
   706  0521  0834               	movf	?___ftdiv,w
   707  0522  00C4               	movwf	___fttol@f1
   708  0523  0835               	movf	?___ftdiv+1,w
   709  0524  00C5               	movwf	___fttol@f1+1
   710  0525  0836               	movf	?___ftdiv+2,w
   711  0526  00C6               	movwf	___fttol@f1+2
   712  0527  120A  118A  25F2   	fcall	___fttol
   713  052A  1283               	bcf	3,5	;RP0=0, select bank0
   714  052B  1303               	bcf	3,6	;RP1=0, select bank0
   715  052C  0845               	movf	?___fttol+1,w
   716  052D  00DA               	movwf	_position+1
   717  052E  0844               	movf	?___fttol,w
   718  052F  00D9               	movwf	_position
   719  0530  0008               	return
   720  0531                     __end_of_setPosicaoAtual:	
   721                           
   722                           	psect	text4
   723  04D1                     __ptext4:	
   724 ;; *************** function _setPosicaoDesejada *****************
   725 ;; Defined at:
   726 ;;		line 27 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  posicao_dese    2   50[BANK0 ] unsigned int 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       2       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       2       0       0       0
   744 ;;Total ram usage:        2 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    5
   747 ;; This function calls:
   748 ;;		___ftdiv
   749 ;;		___fttol
   750 ;;		___lwtoft
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _setPosicaoDesejada
   758  04D1                     _setPosicaoDesejada:	
   759                           
   760                           ;stepper.c: 28: setpoint = posicao_desejada/(5.625/32);
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _setPosicaoDesejada: [wreg+status,2+status,0+pclath+cstack]
   764  04D1  1283               	bcf	3,5	;RP0=0, select bank0
   765  04D2  1303               	bcf	3,6	;RP1=0, select bank0
   766  04D3  0853               	movf	setPosicaoDesejada@posicao_desejada+1,w
   767  04D4  00B1               	movwf	___lwtoft@c+1
   768  04D5  0852               	movf	setPosicaoDesejada@posicao_desejada,w
   769  04D6  00B0               	movwf	___lwtoft@c
   770  04D7  120A  118A  248D  120A  118A  	fcall	___lwtoft
   771  04DC  1283               	bcf	3,5	;RP0=0, select bank0
   772  04DD  1303               	bcf	3,6	;RP1=0, select bank0
   773  04DE  0830               	movf	?___lwtoft,w
   774  04DF  00B7               	movwf	___ftdiv@f1
   775  04E0  0831               	movf	?___lwtoft+1,w
   776  04E1  00B8               	movwf	___ftdiv@f1+1
   777  04E2  0832               	movf	?___lwtoft+2,w
   778  04E3  00B9               	movwf	___ftdiv@f1+2
   779  04E4  3000               	movlw	0
   780  04E5  00B4               	movwf	___ftdiv@f2
   781  04E6  3034               	movlw	52
   782  04E7  00B5               	movwf	___ftdiv@f2+1
   783  04E8  303E               	movlw	62
   784  04E9  00B6               	movwf	___ftdiv@f2+2
   785  04EA  120A  118A  2680  120A  118A  	fcall	___ftdiv
   786  04EF  1283               	bcf	3,5	;RP0=0, select bank0
   787  04F0  1303               	bcf	3,6	;RP1=0, select bank0
   788  04F1  0834               	movf	?___ftdiv,w
   789  04F2  00C4               	movwf	___fttol@f1
   790  04F3  0835               	movf	?___ftdiv+1,w
   791  04F4  00C5               	movwf	___fttol@f1+1
   792  04F5  0836               	movf	?___ftdiv+2,w
   793  04F6  00C6               	movwf	___fttol@f1+2
   794  04F7  120A  118A  25F2   	fcall	___fttol
   795  04FA  1283               	bcf	3,5	;RP0=0, select bank0
   796  04FB  1303               	bcf	3,6	;RP1=0, select bank0
   797  04FC  0845               	movf	?___fttol+1,w
   798  04FD  00D7               	movwf	_setpoint+1
   799  04FE  0844               	movf	?___fttol,w
   800  04FF  00D6               	movwf	_setpoint
   801  0500  0008               	return
   802  0501                     __end_of_setPosicaoDesejada:	
   803                           
   804                           	psect	text5
   805  048D                     __ptext5:	
   806 ;; *************** function ___lwtoft *****************
   807 ;; Defined at:
   808 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  c               2   16[BANK0 ] unsigned int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  3   16[BANK0 ] float 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       3       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          0       1       0       0       0
   825 ;;      Totals:         0       4       0       0       0
   826 ;;Total ram usage:        4 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    4
   829 ;; This function calls:
   830 ;;		___ftpack
   831 ;; This function is called by:
   832 ;;		_setPosicaoAtual
   833 ;;		_setPosicaoDesejada
   834 ;;		_getPosicaoAtual
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function ___lwtoft
   840  048D                     ___lwtoft:	
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   844  048D  1283               	bcf	3,5	;RP0=0, select bank0
   845  048E  1303               	bcf	3,6	;RP1=0, select bank0
   846  048F  0830               	movf	___lwtoft@c,w
   847  0490  00A8               	movwf	___ftpack@arg
   848  0491  0831               	movf	___lwtoft@c+1,w
   849  0492  00A9               	movwf	___ftpack@arg+1
   850  0493  01AA               	clrf	___ftpack@arg+2
   851  0494  308E               	movlw	142
   852  0495  00B3               	movwf	??___lwtoft
   853  0496  0833               	movf	??___lwtoft,w
   854  0497  00AB               	movwf	___ftpack@exp
   855  0498  01AC               	clrf	___ftpack@sign
   856  0499  120A  118A  2584   	fcall	___ftpack
   857  049C  1283               	bcf	3,5	;RP0=0, select bank0
   858  049D  1303               	bcf	3,6	;RP1=0, select bank0
   859  049E  0828               	movf	?___ftpack,w
   860  049F  00B0               	movwf	?___lwtoft
   861  04A0  0829               	movf	?___ftpack+1,w
   862  04A1  00B1               	movwf	?___lwtoft+1
   863  04A2  082A               	movf	?___ftpack+2,w
   864  04A3  00B2               	movwf	?___lwtoft+2
   865  04A4  0008               	return
   866  04A5                     __end_of___lwtoft:	
   867                           
   868                           	psect	text6
   869  05F2                     __ptext6:	
   870 ;; *************** function ___fttol *****************
   871 ;; Defined at:
   872 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  f1              3   36[BANK0 ] float 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  lval            4   45[BANK0 ] unsigned long 
   877 ;;  exp1            1   49[BANK0 ] unsigned char 
   878 ;;  sign1           1   44[BANK0 ] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  4   36[BANK0 ] long 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       4       0       0       0
   889 ;;      Locals:         0       6       0       0       0
   890 ;;      Temps:          0       4       0       0       0
   891 ;;      Totals:         0      14       0       0       0
   892 ;;Total ram usage:       14 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    3
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_setPosicaoAtual
   899 ;;		_setPosicaoDesejada
   900 ;;		_getPosicaoAtual
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function ___fttol
   906  05F2                     ___fttol:	
   907                           
   908                           ;incstack = 0
   909                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   910  05F2  1283               	bcf	3,5	;RP0=0, select bank0
   911  05F3  1303               	bcf	3,6	;RP1=0, select bank0
   912  05F4  0844               	movf	___fttol@f1,w
   913  05F5  00C8               	movwf	??___fttol
   914  05F6  0845               	movf	___fttol@f1+1,w
   915  05F7  00C9               	movwf	??___fttol+1
   916  05F8  0846               	movf	___fttol@f1+2,w
   917  05F9  00CA               	movwf	??___fttol+2
   918  05FA  1003               	clrc
   919  05FB  0D49               	rlf	??___fttol+1,w
   920  05FC  0D4A               	rlf	??___fttol+2,w
   921  05FD  00CB               	movwf	??___fttol+3
   922  05FE  084B               	movf	??___fttol+3,w
   923  05FF  00D1               	movwf	___fttol@exp1
   924  0600  0851               	movf	___fttol@exp1,w
   925  0601  1D03               	btfss	3,2
   926  0602  2E0C               	goto	l876
   927  0603  3000               	movlw	0
   928  0604  00C7               	movwf	?___fttol+3
   929  0605  3000               	movlw	0
   930  0606  00C6               	movwf	?___fttol+2
   931  0607  3000               	movlw	0
   932  0608  00C5               	movwf	?___fttol+1
   933  0609  3000               	movlw	0
   934  060A  00C4               	movwf	?___fttol
   935  060B  0008               	return
   936  060C                     l876:	
   937  060C  0844               	movf	___fttol@f1,w
   938  060D  00C8               	movwf	??___fttol
   939  060E  0845               	movf	___fttol@f1+1,w
   940  060F  00C9               	movwf	??___fttol+1
   941  0610  0846               	movf	___fttol@f1+2,w
   942  0611  00CA               	movwf	??___fttol+2
   943  0612  3017               	movlw	23
   944  0613                     u695:	
   945  0613  1003               	clrc
   946  0614  0CCA               	rrf	??___fttol+2,f
   947  0615  0CC9               	rrf	??___fttol+1,f
   948  0616  0CC8               	rrf	??___fttol,f
   949  0617  3EFF               	addlw	-1
   950  0618  1D03               	skipz
   951  0619  2E13               	goto	u695
   952  061A  0848               	movf	??___fttol,w
   953  061B  00CB               	movwf	??___fttol+3
   954  061C  084B               	movf	??___fttol+3,w
   955  061D  00CC               	movwf	___fttol@sign1
   956  061E  17C5               	bsf	___fttol@f1+1,7
   957  061F  30FF               	movlw	255
   958  0620  05C4               	andwf	___fttol@f1,f
   959  0621  30FF               	movlw	255
   960  0622  05C5               	andwf	___fttol@f1+1,f
   961  0623  3000               	movlw	0
   962  0624  05C6               	andwf	___fttol@f1+2,f
   963  0625  0844               	movf	___fttol@f1,w
   964  0626  00CD               	movwf	___fttol@lval
   965  0627  0845               	movf	___fttol@f1+1,w
   966  0628  00CE               	movwf	___fttol@lval+1
   967  0629  0846               	movf	___fttol@f1+2,w
   968  062A  00CF               	movwf	___fttol@lval+2
   969  062B  01D0               	clrf	___fttol@lval+3
   970  062C  308E               	movlw	142
   971  062D  02D1               	subwf	___fttol@exp1,f
   972  062E  1FD1               	btfss	___fttol@exp1,7
   973  062F  2E4E               	goto	l896
   974  0630  0851               	movf	___fttol@exp1,w
   975  0631  3A80               	xorlw	128
   976  0632  3E8F               	addlw	143
   977  0633  1803               	skipnc
   978  0634  2E3E               	goto	l894
   979  0635  3000               	movlw	0
   980  0636  00C7               	movwf	?___fttol+3
   981  0637  3000               	movlw	0
   982  0638  00C6               	movwf	?___fttol+2
   983  0639  3000               	movlw	0
   984  063A  00C5               	movwf	?___fttol+1
   985  063B  3000               	movlw	0
   986  063C  00C4               	movwf	?___fttol
   987  063D  0008               	return
   988  063E                     l894:	
   989  063E  3001               	movlw	1
   990  063F                     u725:	
   991  063F  1003               	clrc
   992  0640  0CD0               	rrf	___fttol@lval+3,f
   993  0641  0CCF               	rrf	___fttol@lval+2,f
   994  0642  0CCE               	rrf	___fttol@lval+1,f
   995  0643  0CCD               	rrf	___fttol@lval,f
   996  0644  3EFF               	addlw	-1
   997  0645  1D03               	skipz
   998  0646  2E3F               	goto	u725
   999  0647  3001               	movlw	1
  1000  0648  00C8               	movwf	??___fttol
  1001  0649  0848               	movf	??___fttol,w
  1002  064A  07D1               	addwf	___fttol@exp1,f
  1003  064B  1903               	btfsc	3,2
  1004  064C  2E69               	goto	l904
  1005  064D  2E3E               	goto	l894
  1006  064E                     l896:	
  1007  064E  3018               	movlw	24
  1008  064F  0251               	subwf	___fttol@exp1,w
  1009  0650  1C03               	skipc
  1010  0651  2E66               	goto	l446
  1011  0652  3000               	movlw	0
  1012  0653  00C7               	movwf	?___fttol+3
  1013  0654  3000               	movlw	0
  1014  0655  00C6               	movwf	?___fttol+2
  1015  0656  3000               	movlw	0
  1016  0657  00C5               	movwf	?___fttol+1
  1017  0658  3000               	movlw	0
  1018  0659  00C4               	movwf	?___fttol
  1019  065A  0008               	return
  1020  065B                     l902:	
  1021  065B  3001               	movlw	1
  1022  065C  00C8               	movwf	??___fttol
  1023  065D                     u755:	
  1024  065D  1003               	clrc
  1025  065E  0DCD               	rlf	___fttol@lval,f
  1026  065F  0DCE               	rlf	___fttol@lval+1,f
  1027  0660  0DCF               	rlf	___fttol@lval+2,f
  1028  0661  0DD0               	rlf	___fttol@lval+3,f
  1029  0662  0BC8               	decfsz	??___fttol,f
  1030  0663  2E5D               	goto	u755
  1031  0664  3001               	movlw	1
  1032  0665  02D1               	subwf	___fttol@exp1,f
  1033  0666                     l446:	
  1034  0666  0851               	movf	___fttol@exp1,w
  1035  0667  1D03               	btfss	3,2
  1036  0668  2E5B               	goto	l902
  1037  0669                     l904:	
  1038  0669  084C               	movf	___fttol@sign1,w
  1039  066A  1903               	btfsc	3,2
  1040  066B  2E77               	goto	l908
  1041  066C  09CD               	comf	___fttol@lval,f
  1042  066D  09CE               	comf	___fttol@lval+1,f
  1043  066E  09CF               	comf	___fttol@lval+2,f
  1044  066F  09D0               	comf	___fttol@lval+3,f
  1045  0670  0ACD               	incf	___fttol@lval,f
  1046  0671  1903               	skipnz
  1047  0672  0ACE               	incf	___fttol@lval+1,f
  1048  0673  1903               	skipnz
  1049  0674  0ACF               	incf	___fttol@lval+2,f
  1050  0675  1903               	skipnz
  1051  0676  0AD0               	incf	___fttol@lval+3,f
  1052  0677                     l908:	
  1053  0677  0850               	movf	___fttol@lval+3,w
  1054  0678  00C7               	movwf	?___fttol+3
  1055  0679  084F               	movf	___fttol@lval+2,w
  1056  067A  00C6               	movwf	?___fttol+2
  1057  067B  084E               	movf	___fttol@lval+1,w
  1058  067C  00C5               	movwf	?___fttol+1
  1059  067D  084D               	movf	___fttol@lval,w
  1060  067E  00C4               	movwf	?___fttol
  1061  067F  0008               	return
  1062  0680                     __end_of___fttol:	
  1063                           
  1064                           	psect	text7
  1065  0680                     __ptext7:	
  1066 ;; *************** function ___ftdiv *****************
  1067 ;; Defined at:
  1068 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  f2              3   20[BANK0 ] float 
  1071 ;;  f1              3   23[BANK0 ] float 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  f3              3   31[BANK0 ] float 
  1074 ;;  sign            1   35[BANK0 ] unsigned char 
  1075 ;;  exp             1   34[BANK0 ] unsigned char 
  1076 ;;  cntr            1   30[BANK0 ] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  3   20[BANK0 ] float 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       6       0       0       0
  1087 ;;      Locals:         0       6       0       0       0
  1088 ;;      Temps:          0       4       0       0       0
  1089 ;;      Totals:         0      16       0       0       0
  1090 ;;Total ram usage:       16 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    4
  1093 ;; This function calls:
  1094 ;;		___ftpack
  1095 ;; This function is called by:
  1096 ;;		_setPosicaoAtual
  1097 ;;		_setPosicaoDesejada
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function ___ftdiv
  1103  0680                     ___ftdiv:	
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1107  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0682  0837               	movf	___ftdiv@f1,w
  1110  0683  00BA               	movwf	??___ftdiv
  1111  0684  0838               	movf	___ftdiv@f1+1,w
  1112  0685  00BB               	movwf	??___ftdiv+1
  1113  0686  0839               	movf	___ftdiv@f1+2,w
  1114  0687  00BC               	movwf	??___ftdiv+2
  1115  0688  1003               	clrc
  1116  0689  0D3B               	rlf	??___ftdiv+1,w
  1117  068A  0D3C               	rlf	??___ftdiv+2,w
  1118  068B  00BD               	movwf	??___ftdiv+3
  1119  068C  083D               	movf	??___ftdiv+3,w
  1120  068D  00C2               	movwf	___ftdiv@exp
  1121  068E  0842               	movf	___ftdiv@exp,w
  1122  068F  1D03               	btfss	3,2
  1123  0690  2E98               	goto	l834
  1124  0691  3000               	movlw	0
  1125  0692  00B4               	movwf	?___ftdiv
  1126  0693  3000               	movlw	0
  1127  0694  00B5               	movwf	?___ftdiv+1
  1128  0695  3000               	movlw	0
  1129  0696  00B6               	movwf	?___ftdiv+2
  1130  0697  0008               	return
  1131  0698                     l834:	
  1132  0698  0834               	movf	___ftdiv@f2,w
  1133  0699  00BA               	movwf	??___ftdiv
  1134  069A  0835               	movf	___ftdiv@f2+1,w
  1135  069B  00BB               	movwf	??___ftdiv+1
  1136  069C  0836               	movf	___ftdiv@f2+2,w
  1137  069D  00BC               	movwf	??___ftdiv+2
  1138  069E  1003               	clrc
  1139  069F  0D3B               	rlf	??___ftdiv+1,w
  1140  06A0  0D3C               	rlf	??___ftdiv+2,w
  1141  06A1  00BD               	movwf	??___ftdiv+3
  1142  06A2  083D               	movf	??___ftdiv+3,w
  1143  06A3  00C3               	movwf	___ftdiv@sign
  1144  06A4  0843               	movf	___ftdiv@sign,w
  1145  06A5  1D03               	btfss	3,2
  1146  06A6  2EAE               	goto	l840
  1147  06A7  3000               	movlw	0
  1148  06A8  00B4               	movwf	?___ftdiv
  1149  06A9  3000               	movlw	0
  1150  06AA  00B5               	movwf	?___ftdiv+1
  1151  06AB  3000               	movlw	0
  1152  06AC  00B6               	movwf	?___ftdiv+2
  1153  06AD  0008               	return
  1154  06AE                     l840:	
  1155  06AE  3000               	movlw	0
  1156  06AF  00BF               	movwf	___ftdiv@f3
  1157  06B0  3000               	movlw	0
  1158  06B1  00C0               	movwf	___ftdiv@f3+1
  1159  06B2  3000               	movlw	0
  1160  06B3  00C1               	movwf	___ftdiv@f3+2
  1161  06B4  3089               	movlw	137
  1162  06B5  0743               	addwf	___ftdiv@sign,w
  1163  06B6  00BA               	movwf	??___ftdiv
  1164  06B7  083A               	movf	??___ftdiv,w
  1165  06B8  02C2               	subwf	___ftdiv@exp,f
  1166  06B9  0837               	movf	___ftdiv@f1,w
  1167  06BA  00BA               	movwf	??___ftdiv
  1168  06BB  0838               	movf	___ftdiv@f1+1,w
  1169  06BC  00BB               	movwf	??___ftdiv+1
  1170  06BD  0839               	movf	___ftdiv@f1+2,w
  1171  06BE  00BC               	movwf	??___ftdiv+2
  1172  06BF  3010               	movlw	16
  1173  06C0                     u625:	
  1174  06C0  1003               	clrc
  1175  06C1  0CBC               	rrf	??___ftdiv+2,f
  1176  06C2  0CBB               	rrf	??___ftdiv+1,f
  1177  06C3  0CBA               	rrf	??___ftdiv,f
  1178  06C4  3EFF               	addlw	-1
  1179  06C5  1D03               	skipz
  1180  06C6  2EC0               	goto	u625
  1181  06C7  083A               	movf	??___ftdiv,w
  1182  06C8  00BD               	movwf	??___ftdiv+3
  1183  06C9  083D               	movf	??___ftdiv+3,w
  1184  06CA  00C3               	movwf	___ftdiv@sign
  1185  06CB  0834               	movf	___ftdiv@f2,w
  1186  06CC  00BA               	movwf	??___ftdiv
  1187  06CD  0835               	movf	___ftdiv@f2+1,w
  1188  06CE  00BB               	movwf	??___ftdiv+1
  1189  06CF  0836               	movf	___ftdiv@f2+2,w
  1190  06D0  00BC               	movwf	??___ftdiv+2
  1191  06D1  3010               	movlw	16
  1192  06D2                     u635:	
  1193  06D2  1003               	clrc
  1194  06D3  0CBC               	rrf	??___ftdiv+2,f
  1195  06D4  0CBB               	rrf	??___ftdiv+1,f
  1196  06D5  0CBA               	rrf	??___ftdiv,f
  1197  06D6  3EFF               	addlw	-1
  1198  06D7  1D03               	skipz
  1199  06D8  2ED2               	goto	u635
  1200  06D9  083A               	movf	??___ftdiv,w
  1201  06DA  00BD               	movwf	??___ftdiv+3
  1202  06DB  083D               	movf	??___ftdiv+3,w
  1203  06DC  06C3               	xorwf	___ftdiv@sign,f
  1204  06DD  3080               	movlw	128
  1205  06DE  00BA               	movwf	??___ftdiv
  1206  06DF  083A               	movf	??___ftdiv,w
  1207  06E0  05C3               	andwf	___ftdiv@sign,f
  1208  06E1  17B8               	bsf	___ftdiv@f1+1,7
  1209  06E2  30FF               	movlw	255
  1210  06E3  05B7               	andwf	___ftdiv@f1,f
  1211  06E4  30FF               	movlw	255
  1212  06E5  05B8               	andwf	___ftdiv@f1+1,f
  1213  06E6  3000               	movlw	0
  1214  06E7  05B9               	andwf	___ftdiv@f1+2,f
  1215  06E8  17B5               	bsf	___ftdiv@f2+1,7
  1216  06E9  30FF               	movlw	255
  1217  06EA  05B4               	andwf	___ftdiv@f2,f
  1218  06EB  30FF               	movlw	255
  1219  06EC  05B5               	andwf	___ftdiv@f2+1,f
  1220  06ED  3000               	movlw	0
  1221  06EE  05B6               	andwf	___ftdiv@f2+2,f
  1222  06EF  3018               	movlw	24
  1223  06F0  00BA               	movwf	??___ftdiv
  1224  06F1  083A               	movf	??___ftdiv,w
  1225  06F2  00BE               	movwf	___ftdiv@cntr
  1226  06F3                     l854:	
  1227  06F3  3001               	movlw	1
  1228  06F4                     u645:	
  1229  06F4  1003               	clrc
  1230  06F5  0DBF               	rlf	___ftdiv@f3,f
  1231  06F6  0DC0               	rlf	___ftdiv@f3+1,f
  1232  06F7  0DC1               	rlf	___ftdiv@f3+2,f
  1233  06F8  3EFF               	addlw	-1
  1234  06F9  1D03               	skipz
  1235  06FA  2EF4               	goto	u645
  1236  06FB  0836               	movf	___ftdiv@f2+2,w
  1237  06FC  0239               	subwf	___ftdiv@f1+2,w
  1238  06FD  1D03               	skipz
  1239  06FE  2F05               	goto	u655
  1240  06FF  0835               	movf	___ftdiv@f2+1,w
  1241  0700  0238               	subwf	___ftdiv@f1+1,w
  1242  0701  1D03               	skipz
  1243  0702  2F05               	goto	u655
  1244  0703  0834               	movf	___ftdiv@f2,w
  1245  0704  0237               	subwf	___ftdiv@f1,w
  1246  0705                     u655:	
  1247  0705  1C03               	skipc
  1248  0706  2F12               	goto	l862
  1249  0707  0834               	movf	___ftdiv@f2,w
  1250  0708  02B7               	subwf	___ftdiv@f1,f
  1251  0709  0835               	movf	___ftdiv@f2+1,w
  1252  070A  1C03               	skipc
  1253  070B  0F35               	incfsz	___ftdiv@f2+1,w
  1254  070C  02B8               	subwf	___ftdiv@f1+1,f
  1255  070D  0836               	movf	___ftdiv@f2+2,w
  1256  070E  1C03               	skipc
  1257  070F  0A36               	incf	___ftdiv@f2+2,w
  1258  0710  02B9               	subwf	___ftdiv@f1+2,f
  1259  0711  143F               	bsf	___ftdiv@f3,0
  1260  0712                     l862:	
  1261  0712  3001               	movlw	1
  1262  0713                     u665:	
  1263  0713  1003               	clrc
  1264  0714  0DB7               	rlf	___ftdiv@f1,f
  1265  0715  0DB8               	rlf	___ftdiv@f1+1,f
  1266  0716  0DB9               	rlf	___ftdiv@f1+2,f
  1267  0717  3EFF               	addlw	-1
  1268  0718  1D03               	skipz
  1269  0719  2F13               	goto	u665
  1270  071A  3001               	movlw	1
  1271  071B  02BE               	subwf	___ftdiv@cntr,f
  1272  071C  1D03               	btfss	3,2
  1273  071D  2EF3               	goto	l854
  1274  071E  083F               	movf	___ftdiv@f3,w
  1275  071F  00A8               	movwf	___ftpack@arg
  1276  0720  0840               	movf	___ftdiv@f3+1,w
  1277  0721  00A9               	movwf	___ftpack@arg+1
  1278  0722  0841               	movf	___ftdiv@f3+2,w
  1279  0723  00AA               	movwf	___ftpack@arg+2
  1280  0724  0842               	movf	___ftdiv@exp,w
  1281  0725  00BA               	movwf	??___ftdiv
  1282  0726  083A               	movf	??___ftdiv,w
  1283  0727  00AB               	movwf	___ftpack@exp
  1284  0728  0843               	movf	___ftdiv@sign,w
  1285  0729  00BB               	movwf	??___ftdiv+1
  1286  072A  083B               	movf	??___ftdiv+1,w
  1287  072B  00AC               	movwf	___ftpack@sign
  1288  072C  120A  118A  2584   	fcall	___ftpack
  1289  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0731  0828               	movf	?___ftpack,w
  1292  0732  00B4               	movwf	?___ftdiv
  1293  0733  0829               	movf	?___ftpack+1,w
  1294  0734  00B5               	movwf	?___ftdiv+1
  1295  0735  082A               	movf	?___ftpack+2,w
  1296  0736  00B6               	movwf	?___ftdiv+2
  1297  0737  0008               	return
  1298  0738                     __end_of___ftdiv:	
  1299                           
  1300                           	psect	text8
  1301  0584                     __ptext8:	
  1302 ;; *************** function ___ftpack *****************
  1303 ;; Defined at:
  1304 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  arg             3    8[BANK0 ] unsigned um
  1307 ;;  exp             1   11[BANK0 ] unsigned char 
  1308 ;;  sign            1   12[BANK0 ] unsigned char 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  3    8[BANK0 ] float 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       5       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       3       0       0       0
  1323 ;;      Totals:         0       8       0       0       0
  1324 ;;Total ram usage:        8 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    3
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		___ftdiv
  1331 ;;		___lwtoft
  1332 ;;		___ftmul
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function ___ftpack
  1338  0584                     ___ftpack:	
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1342  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0586  082B               	movf	___ftpack@exp,w
  1345  0587  1903               	btfsc	3,2
  1346  0588  2D8E               	goto	l800
  1347  0589  082A               	movf	___ftpack@arg+2,w
  1348  058A  0429               	iorwf	___ftpack@arg+1,w
  1349  058B  0428               	iorwf	___ftpack@arg,w
  1350  058C  1D03               	skipz
  1351  058D  2DA1               	goto	l806
  1352  058E                     l800:	
  1353  058E  3000               	movlw	0
  1354  058F  00A8               	movwf	?___ftpack
  1355  0590  3000               	movlw	0
  1356  0591  00A9               	movwf	?___ftpack+1
  1357  0592  3000               	movlw	0
  1358  0593  00AA               	movwf	?___ftpack+2
  1359  0594  0008               	return
  1360  0595                     l804:	
  1361  0595  3001               	movlw	1
  1362  0596  00AD               	movwf	??___ftpack
  1363  0597  082D               	movf	??___ftpack,w
  1364  0598  07AB               	addwf	___ftpack@exp,f
  1365  0599  3001               	movlw	1
  1366  059A                     u505:	
  1367  059A  1003               	clrc
  1368  059B  0CAA               	rrf	___ftpack@arg+2,f
  1369  059C  0CA9               	rrf	___ftpack@arg+1,f
  1370  059D  0CA8               	rrf	___ftpack@arg,f
  1371  059E  3EFF               	addlw	-1
  1372  059F  1D03               	skipz
  1373  05A0  2D9A               	goto	u505
  1374  05A1                     l806:	
  1375  05A1  30FE               	movlw	254
  1376  05A2  052A               	andwf	___ftpack@arg+2,w
  1377  05A3  1903               	btfsc	3,2
  1378  05A4  2DBC               	goto	l355
  1379  05A5  2D95               	goto	l804
  1380  05A6                     l808:	
  1381  05A6  3001               	movlw	1
  1382  05A7  00AD               	movwf	??___ftpack
  1383  05A8  082D               	movf	??___ftpack,w
  1384  05A9  07AB               	addwf	___ftpack@exp,f
  1385  05AA  3001               	movlw	1
  1386  05AB  07A8               	addwf	___ftpack@arg,f
  1387  05AC  3000               	movlw	0
  1388  05AD  1803               	skipnc
  1389  05AE  3001               	movlw	1
  1390  05AF  07A9               	addwf	___ftpack@arg+1,f
  1391  05B0  3000               	movlw	0
  1392  05B1  1803               	skipnc
  1393  05B2  3001               	movlw	1
  1394  05B3  07AA               	addwf	___ftpack@arg+2,f
  1395  05B4  3001               	movlw	1
  1396  05B5                     u525:	
  1397  05B5  1003               	clrc
  1398  05B6  0CAA               	rrf	___ftpack@arg+2,f
  1399  05B7  0CA9               	rrf	___ftpack@arg+1,f
  1400  05B8  0CA8               	rrf	___ftpack@arg,f
  1401  05B9  3EFF               	addlw	-1
  1402  05BA  1D03               	skipz
  1403  05BB  2DB5               	goto	u525
  1404  05BC                     l355:	
  1405  05BC  30FF               	movlw	255
  1406  05BD  052A               	andwf	___ftpack@arg+2,w
  1407  05BE  1903               	btfsc	3,2
  1408  05BF  2DCB               	goto	l816
  1409  05C0  2DA6               	goto	l808
  1410  05C1                     l814:	
  1411  05C1  3001               	movlw	1
  1412  05C2  02AB               	subwf	___ftpack@exp,f
  1413  05C3  3001               	movlw	1
  1414  05C4                     u545:	
  1415  05C4  1003               	clrc
  1416  05C5  0DA8               	rlf	___ftpack@arg,f
  1417  05C6  0DA9               	rlf	___ftpack@arg+1,f
  1418  05C7  0DAA               	rlf	___ftpack@arg+2,f
  1419  05C8  3EFF               	addlw	-1
  1420  05C9  1D03               	skipz
  1421  05CA  2DC4               	goto	u545
  1422  05CB                     l816:	
  1423  05CB  1BA9               	btfsc	___ftpack@arg+1,7
  1424  05CC  2DD1               	goto	l362
  1425  05CD  3002               	movlw	2
  1426  05CE  022B               	subwf	___ftpack@exp,w
  1427  05CF  1803               	skipnc
  1428  05D0  2DC1               	goto	l814
  1429  05D1                     l362:	
  1430  05D1  182B               	btfsc	___ftpack@exp,0
  1431  05D2  2DD9               	goto	l363
  1432  05D3  30FF               	movlw	255
  1433  05D4  05A8               	andwf	___ftpack@arg,f
  1434  05D5  307F               	movlw	127
  1435  05D6  05A9               	andwf	___ftpack@arg+1,f
  1436  05D7  30FF               	movlw	255
  1437  05D8  05AA               	andwf	___ftpack@arg+2,f
  1438  05D9                     l363:	
  1439  05D9  1003               	clrc
  1440  05DA  0CAB               	rrf	___ftpack@exp,f
  1441  05DB  082B               	movf	___ftpack@exp,w
  1442  05DC  00AD               	movwf	??___ftpack
  1443  05DD  01AE               	clrf	??___ftpack+1
  1444  05DE  01AF               	clrf	??___ftpack+2
  1445  05DF  3010               	movlw	16
  1446  05E0                     u585:	
  1447  05E0  1003               	clrc
  1448  05E1  0DAD               	rlf	??___ftpack,f
  1449  05E2  0DAE               	rlf	??___ftpack+1,f
  1450  05E3  0DAF               	rlf	??___ftpack+2,f
  1451  05E4  3EFF               	addlw	-1
  1452  05E5  1D03               	skipz
  1453  05E6  2DE0               	goto	u585
  1454  05E7  082D               	movf	??___ftpack,w
  1455  05E8  04A8               	iorwf	___ftpack@arg,f
  1456  05E9  082E               	movf	??___ftpack+1,w
  1457  05EA  04A9               	iorwf	___ftpack@arg+1,f
  1458  05EB  082F               	movf	??___ftpack+2,w
  1459  05EC  04AA               	iorwf	___ftpack@arg+2,f
  1460  05ED  082C               	movf	___ftpack@sign,w
  1461  05EE  1903               	btfsc	3,2
  1462  05EF  0008               	return
  1463  05F0  17AA               	bsf	___ftpack@arg+2,7
  1464  05F1  0008               	return
  1465  05F2                     __end_of___ftpack:	
  1466                           
  1467                           	psect	text9
  1468  0738                     __ptext9:	
  1469 ;; *************** function _ISR *****************
  1470 ;; Defined at:
  1471 ;;		line 15 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       8       0       0       0
  1487 ;;      Temps:          7       0       0       0       0
  1488 ;;      Totals:         7       8       0       0       0
  1489 ;;Total ram usage:       15 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    2
  1492 ;; This function calls:
  1493 ;;		_calculaErro
  1494 ;; This function is called by:
  1495 ;;		Interrupt level 1
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _ISR
  1501  0738                     _ISR:	
  1502                           
  1503                           ;main.c: 17: calculaErro();
  1504  0738  120A  118A  2531  120A  118A  	fcall	_calculaErro
  1505                           
  1506                           ;main.c: 19: if(error > 0){
  1507  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1508  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1509  073F  0855               	movf	_error+1,w
  1510  0740  3A80               	xorlw	128
  1511  0741  00FF               	movwf	127
  1512  0742  3080               	movlw	128
  1513  0743  027F               	subwf	127,w
  1514  0744  1D03               	skipz
  1515  0745  2F48               	goto	u83_25
  1516  0746  3001               	movlw	1
  1517  0747  0254               	subwf	_error,w
  1518  0748                     u83_25:	
  1519  0748  1C03               	skipc
  1520  0749  2F96               	goto	i1l982
  1521                           
  1522                           ;main.c: 20: STATUSbits.C = 0;
  1523  074A  1283               	bcf	3,5	;RP0=0, select bank0
  1524  074B  1303               	bcf	3,6	;RP1=0, select bank0
  1525  074C  1003               	bcf	3,0	;volatile
  1526                           
  1527                           ;main.c: 21: phase = (phase == 0) ? 1 : phase;
  1528  074D  0858               	movf	_phase,w
  1529  074E  1903               	btfsc	3,2
  1530  074F  2F57               	goto	i1l966
  1531  0750  0858               	movf	_phase,w
  1532  0751  00F7               	movwf	??_ISR
  1533  0752  01F8               	clrf	??_ISR+1
  1534  0753  0877               	movf	??_ISR,w
  1535  0754  00A0               	movwf	_ISR$221
  1536  0755  0878               	movf	??_ISR+1,w
  1537  0756  2F5A               	goto	L1
  1538  0757                     i1l966:	
  1539  0757  3001               	movlw	1
  1540  0758  00A0               	movwf	_ISR$221
  1541  0759  3000               	movlw	0
  1542  075A                     L1:	
  1543  075A  00A1               	movwf	_ISR$221+1
  1544  075B  0820               	movf	_ISR$221,w
  1545  075C  00F7               	movwf	??_ISR
  1546  075D  0877               	movf	??_ISR,w
  1547  075E  00D8               	movwf	_phase
  1548                           
  1549                           ;main.c: 22: phase = (phase == 8) ? phase >> 3 : phase << 1;
  1550  075F  3008               	movlw	8
  1551  0760  0658               	xorwf	_phase,w
  1552  0761  1903               	btfsc	3,2
  1553  0762  2F6B               	goto	i1l972
  1554  0763  0858               	movf	_phase,w
  1555  0764  00F7               	movwf	??_ISR
  1556  0765  01F8               	clrf	??_ISR+1
  1557  0766  1003               	clrc
  1558  0767  0D77               	rlf	??_ISR,w
  1559  0768  00A2               	movwf	_ISR$222
  1560  0769  0D78               	rlf	??_ISR+1,w
  1561  076A  2F79               	goto	L2
  1562  076B                     i1l972:	
  1563  076B  0858               	movf	_phase,w
  1564  076C  00F7               	movwf	??_ISR
  1565  076D  3003               	movlw	3
  1566  076E                     u86_25:	
  1567  076E  1003               	clrc
  1568  076F  0CF7               	rrf	??_ISR,f
  1569  0770  3EFF               	addlw	-1
  1570  0771  1D03               	skipz
  1571  0772  2F6E               	goto	u86_25
  1572  0773  0877               	movf	??_ISR,w
  1573  0774  00F8               	movwf	??_ISR+1
  1574  0775  01F9               	clrf	??_ISR+2
  1575  0776  0878               	movf	??_ISR+1,w
  1576  0777  00A2               	movwf	_ISR$222
  1577  0778  0879               	movf	??_ISR+2,w
  1578  0779                     L2:	
  1579  0779  00A3               	movwf	_ISR$222+1
  1580  077A  0822               	movf	_ISR$222,w
  1581  077B  00F7               	movwf	??_ISR
  1582  077C  0877               	movf	??_ISR,w
  1583  077D  00D8               	movwf	_phase
  1584                           
  1585                           ;main.c: 23: position = ((position + 1)== 2048) ? 0 : (position + 1);
  1586  077E  0859               	movf	_position,w
  1587  077F  3E01               	addlw	1
  1588  0780  00F7               	movwf	??_ISR
  1589  0781  085A               	movf	_position+1,w
  1590  0782  1803               	skipnc
  1591  0783  3E01               	addlw	1
  1592  0784  3E00               	addlw	0
  1593  0785  00F8               	movwf	??_ISR+1
  1594  0786  3008               	movlw	8
  1595  0787  0678               	xorwf	??_ISR+1,w
  1596  0788  0477               	iorwf	??_ISR,w
  1597  0789  1903               	btfsc	3,2
  1598  078A  2F94               	goto	i1l980
  1599  078B  0859               	movf	_position,w
  1600  078C  3E01               	addlw	1
  1601  078D  00D9               	movwf	_position
  1602  078E  085A               	movf	_position+1,w
  1603  078F  1803               	skipnc
  1604  0790  3E01               	addlw	1
  1605  0791  3E00               	addlw	0
  1606  0792  00DA               	movwf	_position+1
  1607  0793  2F96               	goto	i1l982
  1608  0794                     i1l980:	
  1609  0794  01D9               	clrf	_position
  1610  0795  01DA               	clrf	_position+1
  1611  0796                     i1l982:	
  1612                           
  1613                           ;main.c: 24: }
  1614                           ;main.c: 26: if(error < 0){
  1615  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0798  1FD5               	btfss	_error+1,7
  1618  0799  2FE7               	goto	i1l79
  1619                           
  1620                           ;main.c: 27: STATUSbits.C = 0;
  1621  079A  1003               	bcf	3,0	;volatile
  1622                           
  1623                           ;main.c: 28: phase = (phase == 0) ? 8 : phase;
  1624  079B  0858               	movf	_phase,w
  1625  079C  1903               	btfsc	3,2
  1626  079D  2FA5               	goto	i1l990
  1627  079E  0858               	movf	_phase,w
  1628  079F  00F7               	movwf	??_ISR
  1629  07A0  01F8               	clrf	??_ISR+1
  1630  07A1  0877               	movf	??_ISR,w
  1631  07A2  00A4               	movwf	_ISR$223
  1632  07A3  0878               	movf	??_ISR+1,w
  1633  07A4  2FA8               	goto	L3
  1634  07A5                     i1l990:	
  1635  07A5  3008               	movlw	8
  1636  07A6  00A4               	movwf	_ISR$223
  1637  07A7  3000               	movlw	0
  1638  07A8                     L3:	
  1639  07A8  00A5               	movwf	_ISR$223+1
  1640  07A9  0824               	movf	_ISR$223,w
  1641  07AA  00F7               	movwf	??_ISR
  1642  07AB  0877               	movf	??_ISR,w
  1643  07AC  00D8               	movwf	_phase
  1644                           
  1645                           ;main.c: 29: phase = (phase == 1) ? phase << 3 : phase >> 1;
  1646  07AD  0358               	decf	_phase,w
  1647  07AE  1903               	btfsc	3,2
  1648  07AF  2FBA               	goto	i1l996
  1649  07B0  0858               	movf	_phase,w
  1650  07B1  00F7               	movwf	??_ISR
  1651  07B2  1003               	clrc
  1652  07B3  0C77               	rrf	??_ISR,w
  1653  07B4  00F8               	movwf	??_ISR+1
  1654  07B5  01F9               	clrf	??_ISR+2
  1655  07B6  0878               	movf	??_ISR+1,w
  1656  07B7  00A6               	movwf	_ISR$224
  1657  07B8  0879               	movf	??_ISR+2,w
  1658  07B9  2FC9               	goto	L4
  1659  07BA                     i1l996:	
  1660  07BA  0858               	movf	_phase,w
  1661  07BB  00F7               	movwf	??_ISR
  1662  07BC  01F8               	clrf	??_ISR+1
  1663  07BD  1003               	clrc
  1664  07BE  0DF7               	rlf	??_ISR,f
  1665  07BF  0DF8               	rlf	??_ISR+1,f
  1666  07C0  1003               	clrc
  1667  07C1  0DF7               	rlf	??_ISR,f
  1668  07C2  0DF8               	rlf	??_ISR+1,f
  1669  07C3  1003               	clrc
  1670  07C4  0DF7               	rlf	??_ISR,f
  1671  07C5  0DF8               	rlf	??_ISR+1,f
  1672  07C6  0877               	movf	??_ISR,w
  1673  07C7  00A6               	movwf	_ISR$224
  1674  07C8  0878               	movf	??_ISR+1,w
  1675  07C9                     L4:	
  1676  07C9  00A7               	movwf	_ISR$224+1
  1677  07CA  0826               	movf	_ISR$224,w
  1678  07CB  00F7               	movwf	??_ISR
  1679  07CC  0877               	movf	??_ISR,w
  1680  07CD  00D8               	movwf	_phase
  1681                           
  1682                           ;main.c: 30: position = ((position - 1)== -1) ? 2047 : (position - 1);
  1683  07CE  0859               	movf	_position,w
  1684  07CF  3EFF               	addlw	255
  1685  07D0  00F7               	movwf	??_ISR
  1686  07D1  085A               	movf	_position+1,w
  1687  07D2  1803               	skipnc
  1688  07D3  3E01               	addlw	1
  1689  07D4  3EFF               	addlw	255
  1690  07D5  00F8               	movwf	??_ISR+1
  1691  07D6  0A77               	incf	??_ISR,w
  1692  07D7  1903               	btfsc	3,2
  1693  07D8  0A78               	incf	??_ISR+1,w
  1694  07D9  1903               	btfsc	3,2
  1695  07DA  2FE3               	goto	i1l1004
  1696  07DB  0859               	movf	_position,w
  1697  07DC  3EFF               	addlw	255
  1698  07DD  00D9               	movwf	_position
  1699  07DE  085A               	movf	_position+1,w
  1700  07DF  1803               	skipnc
  1701  07E0  3E01               	addlw	1
  1702  07E1  3EFF               	addlw	255
  1703  07E2  2FE6               	goto	L5
  1704  07E3                     i1l1004:	
  1705  07E3  30FF               	movlw	255
  1706  07E4  00D9               	movwf	_position
  1707  07E5  3007               	movlw	7
  1708  07E6                     L5:	
  1709  07E6  00DA               	movwf	_position+1
  1710  07E7                     i1l79:	
  1711                           
  1712                           ;main.c: 31: }
  1713                           ;main.c: 33: PORTD = phase;
  1714  07E7  0858               	movf	_phase,w
  1715  07E8  0088               	movwf	8	;volatile
  1716                           
  1717                           ;main.c: 35: PIR1bits.TMR2IF = 0;
  1718  07E9  108C               	bcf	12,1	;volatile
  1719  07EA  087D               	movf	??_ISR+6,w
  1720  07EB  00FF               	movwf	127
  1721  07EC  087C               	movf	??_ISR+5,w
  1722  07ED  008A               	movwf	10
  1723  07EE  087B               	movf	??_ISR+4,w
  1724  07EF  0084               	movwf	4
  1725  07F0  0E7A               	swapf	(??_ISR+3)^(0+-128),w
  1726  07F1  0083               	movwf	3
  1727  07F2  0EFE               	swapf	126,f
  1728  07F3  0E7E               	swapf	126,w
  1729  07F4  0009               	retfie
  1730  07F5                     __end_of_ISR:	
  1731                           
  1732                           	psect	intentry
  1733  0004                     __pintentry:	
  1734                           ;incstack = 0
  1735                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1736                           
  1737  0004                     interrupt_function:	
  1738  007E                     saved_w	set	btemp
  1739  0004  00FE               	movwf	btemp
  1740  0005  0E03               	swapf	3,w
  1741  0006  00FA               	movwf	??_ISR+3
  1742  0007  0804               	movf	4,w
  1743  0008  00FB               	movwf	??_ISR+4
  1744  0009  080A               	movf	10,w
  1745  000A  00FC               	movwf	??_ISR+5
  1746  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1747  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1748  000D  087F               	movf	btemp+1,w
  1749  000E  00FD               	movwf	??_ISR+6
  1750  000F  120A  118A  2F38   	ljmp	_ISR
  1751                           
  1752                           	psect	text10
  1753  0531                     __ptext10:	
  1754 ;; *************** function _calculaErro *****************
  1755 ;; Defined at:
  1756 ;;		line 31 in file "C:\Users\Aluno.PC-15\Desktop\stepper_motor-pic16f887\stepper_motor\stepper.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0
  1772 ;;      Temps:          2       0       0       0       0
  1773 ;;      Totals:         2       0       0       0       0
  1774 ;;Total ram usage:        2 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    1
  1777 ;; This function calls:
  1778 ;;		_abs
  1779 ;; This function is called by:
  1780 ;;		_ISR
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _calculaErro
  1786  0531                     _calculaErro:	
  1787                           
  1788                           ;stepper.c: 32: error = abs(position - setpoint);
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _calculaErro: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1792  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0533  0956               	comf	_setpoint,w
  1795  0534  00F5               	movwf	??_calculaErro
  1796  0535  0957               	comf	_setpoint+1,w
  1797  0536  00F6               	movwf	??_calculaErro+1
  1798  0537  0AF5               	incf	??_calculaErro,f
  1799  0538  1903               	skipnz
  1800  0539  0AF6               	incf	??_calculaErro+1,f
  1801  053A  0859               	movf	_position,w
  1802  053B  0775               	addwf	??_calculaErro,w
  1803  053C  00F1               	movwf	abs@a
  1804  053D  085A               	movf	_position+1,w
  1805  053E  1803               	skipnc
  1806  053F  0A5A               	incf	_position+1,w
  1807  0540  0776               	addwf	??_calculaErro+1,w
  1808  0541  00F2               	movwf	abs@a+1
  1809  0542  120A  118A  2460  120A  118A  	fcall	_abs
  1810  0547  0872               	movf	?_abs+1,w
  1811  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1813  054A  00D5               	movwf	_error+1
  1814  054B  0871               	movf	?_abs,w
  1815  054C  00D4               	movwf	_error
  1816                           
  1817                           ;stepper.c: 34: if(setpoint > position && error > 2048)
  1818  054D  0857               	movf	_setpoint+1,w
  1819  054E  025A               	subwf	_position+1,w
  1820  054F  1D03               	skipz
  1821  0550  2D53               	goto	u79_25
  1822  0551  0856               	movf	_setpoint,w
  1823  0552  0259               	subwf	_position,w
  1824  0553                     u79_25:	
  1825  0553  1803               	skipnc
  1826  0554  2D67               	goto	i1l944
  1827  0555  0855               	movf	_error+1,w
  1828  0556  3A80               	xorlw	128
  1829  0557  00FF               	movwf	127
  1830  0558  3088               	movlw	136
  1831  0559  027F               	subwf	127,w
  1832  055A  1D03               	skipz
  1833  055B  2D5E               	goto	u80_25
  1834  055C  3001               	movlw	1
  1835  055D  0254               	subwf	_error,w
  1836  055E                     u80_25:	
  1837  055E  1C03               	skipc
  1838  055F  2D67               	goto	i1l944
  1839                           
  1840                           ;stepper.c: 35: error = -error;
  1841  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0562  09D4               	comf	_error,f
  1844  0563  09D5               	comf	_error+1,f
  1845  0564  0AD4               	incf	_error,f
  1846  0565  1903               	skipnz
  1847  0566  0AD5               	incf	_error+1,f
  1848  0567                     i1l944:	
  1849                           
  1850                           ;stepper.c: 37: if(setpoint < position && error < 2048)
  1851  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0569  085A               	movf	_position+1,w
  1854  056A  0257               	subwf	_setpoint+1,w
  1855  056B  1D03               	skipz
  1856  056C  2D6F               	goto	u81_25
  1857  056D  0859               	movf	_position,w
  1858  056E  0256               	subwf	_setpoint,w
  1859  056F                     u81_25:	
  1860  056F  1803               	skipnc
  1861  0570  0008               	return
  1862  0571  0855               	movf	_error+1,w
  1863  0572  3A80               	xorlw	128
  1864  0573  00FF               	movwf	127
  1865  0574  3088               	movlw	136
  1866  0575  027F               	subwf	127,w
  1867  0576  1D03               	skipz
  1868  0577  2D7A               	goto	u82_25
  1869  0578  3000               	movlw	0
  1870  0579  0254               	subwf	_error,w
  1871  057A                     u82_25:	
  1872  057A  1803               	skipnc
  1873  057B  0008               	return
  1874                           
  1875                           ;stepper.c: 38: error = -error;
  1876  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1877  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1878  057E  09D4               	comf	_error,f
  1879  057F  09D5               	comf	_error+1,f
  1880  0580  0AD4               	incf	_error,f
  1881  0581  1903               	skipnz
  1882  0582  0AD5               	incf	_error+1,f
  1883  0583  0008               	return
  1884  0584                     __end_of_calculaErro:	
  1885                           
  1886                           	psect	text11
  1887  0460                     __ptext11:	
  1888 ;; *************** function _abs *****************
  1889 ;; Defined at:
  1890 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  a               2    0[COMMON] int 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    0[COMMON] int 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         2       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          2       0       0       0       0
  1907 ;;      Totals:         4       0       0       0       0
  1908 ;;Total ram usage:        4 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_calculaErro
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _abs
  1919  0460                     _abs:	
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in _abs: [wreg+status,2+status,0]
  1923  0460  1FF2               	btfss	abs@a+1,7
  1924  0461  0008               	return
  1925  0462  0971               	comf	abs@a,w
  1926  0463  00F3               	movwf	??_abs
  1927  0464  0972               	comf	abs@a+1,w
  1928  0465  00F4               	movwf	??_abs+1
  1929  0466  0AF3               	incf	??_abs,f
  1930  0467  1903               	skipnz
  1931  0468  0AF4               	incf	??_abs+1,f
  1932  0469  0873               	movf	??_abs,w
  1933  046A  00F1               	movwf	?_abs
  1934  046B  0874               	movf	??_abs+1,w
  1935  046C  00F2               	movwf	?_abs+1
  1936  046D  0008               	return
  1937  046E                     __end_of_abs:	
  1938  007E                     btemp	set	126	;btemp
  1939  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     52      59
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_calculaErro
    _calculaErro->_abs

Critical Paths under _main in BANK0

    _main->_setPosicaoDesejada
    _setup->_setPosicaoAtual
    _setPosicaoAtual->___fttol
    _setPosicaoDesejada->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8952
                 _setPosicaoDesejada
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4423
                    _setPosicaoAtual
                       _setupStepper
 ---------------------------------------------------------------------------------
 (2) _setupStepper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPosicaoAtual                                      2     0      2    4423
                                             50 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _setPosicaoDesejada                                   2     0      2    4529
                                             50 BANK0      2     0      2
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1813
                                             16 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     411
                                             36 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2124
                                             20 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1632
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 15    15      0     215
                                              6 COMMON     7     7      0
                                              0 BANK0      8     8      0
                        _calculaErro
 ---------------------------------------------------------------------------------
 (6) _calculaErro                                          2     2      0     119
                                              4 COMMON     2     2      0
                                _abs
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     119
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setPosicaoDesejada
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _setup
     _setPosicaoAtual
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _setupStepper

 _ISR (ROOT)
   _calculaErro
     _abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      48      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 08 16:35:21 2022

                       __CFG_CP$OFF 0000                                 l362 05D1  
                               l363 05D9                                 l355 05BC  
                               l446 0666                                 l800 058E  
                               l804 0595                                 l814 05C1  
                               l806 05A1                                 l902 065B  
                               l816 05CB                                 l808 05A6  
                               l840 06AE                                 l904 0669  
                               l834 0698                                 l908 0677  
                               l862 0712                                 l854 06F3  
                               l876 060C                                 l894 063E  
                               l896 064E                                 _PR2 0092  
                               u505 059A                        __CFG_CPD$OFF 0000  
                               _ISR 0738                                 u525 05B5  
                               u545 05C4                                 u625 06C0  
                               u635 06D2                                 u645 06F4  
                               u725 063F                                 u655 0705  
                               u585 05E0                                 u665 0713  
                               u755 065D                                 u695 0613  
                               _abs 0460                                 fsr0 0004  
                      __CFG_IESO$ON 0000                        __CFG_LVP$OFF 0000  
                              ?_ISR 0071                        ___ftdiv@cntr 003E  
                      ___ftdiv@sign 0043                                l1010 04AA  
                              l1014 04B6                                l1018 04C3  
                              ?_abs 0071                                i1l79 07E7  
                      __CFG_WRT$OFF 0000                       __CFG_FCMEN$ON 0000  
                              abs@a 0071                                _main 04A5  
                      ___ftpack@arg 0028                        ___ftpack@exp 002B  
                              btemp 007E                       __CFG_BOREN$ON 0000  
                              start 0012                       __CFG_MCLRE$ON 0000  
                             ??_ISR 0077                        ___fttol@exp1 0051  
                             ??_abs 0073                        ___fttol@lval 004D  
              __size_of_calculaErro 0053                               ?_main 0071  
                     __CFG_WDTE$OFF 0000                     __end_of___ftdiv 0738  
                   __end_of___fttol 0680                               _T2CON 0012  
                    __CFG_DEBUG$OFF 0000                               i1l944 0567  
                             i1l980 0794                               i1l972 076B  
                             i1l990 07A5                               i1l966 0757  
                             i1l982 0796                               i1l996 07BA  
                             _PORTD 0008                               u80_25 055E  
                             u81_25 056F                               _TRISD 0088  
                             u82_25 057A                               u83_25 0748  
                             u86_25 076E                               u79_25 0553  
                             _error 0054                               _phase 0058  
                     ___ftpack@sign 002C                               _setup 046E  
                             pclath 000A                               status 0003  
                             wtemp0 007E                     __initialization 07F5  
                      __end_of_main 04D1                              ??_main 0054  
                     ___fttol@sign1 004C            __size_of_setPosicaoAtual 0030  
                            ?_setup 0071                    __end_of___ftpack 05F2  
                            i1l1004 07E3                    __end_of___lwtoft 04A5  
        __end_of_setPosicaoDesejada 0501                      __CFG_PWRTE$OFF 0000  
                         ??___ftdiv 003A                           ??___fttol 0048  
                            saved_w 007E             __end_of__initialization 07FC  
                        ___ftdiv@f1 0037                          ___ftdiv@f2 0034  
                        ___ftdiv@f3 003F                          ___fttol@f1 0044  
                    __pcstackCOMMON 0071                       __end_of_setup 047C  
                        ___lwtoft@c 0030                             ??_setup 0054  
                        __pbssBANK0 0054                   ??_setPosicaoAtual 0054  
                        __pmaintext 04A5                          __pintentry 0004  
                         ?___ftpack 0028                           ?___lwtoft 0030  
                           _ISR$221 0020                             _ISR$222 0022  
                           _ISR$223 0024                             _ISR$224 0026  
                     ??_calculaErro 0075                             ___ftdiv 0680  
                           ___fttol 05F2                          ??___ftpack 002D  
                           __ptext1 046E                             __ptext2 047C  
                           __ptext3 0501                             __ptext4 04D1  
                           __ptext5 048D                             __ptext6 05F2  
                           __ptext7 0680                             __ptext8 0584  
                           __ptext9 0738  setPosicaoDesejada@posicao_desejada 0052  
                        ??___lwtoft 0033                        __size_of_ISR 00BD  
                      __size_of_abs 000E                end_of_initialization 07FC  
                _setPosicaoDesejada 04D1                       ?_setupStepper 0071  
                         _PORTDbits 0008                 __end_of_calculaErro 0584  
               ?_setPosicaoDesejada 0052                         ___ftdiv@exp 0042  
              ??_setPosicaoDesejada 0054                      ??_setupStepper 0028  
                   _setPosicaoAtual 0501                 start_initialization 07F5  
                       __end_of_ISR 07F5                         __end_of_abs 046E  
          __CFG_FOSC$INTRC_NOCLKOUT 0000                         _calculaErro 0531  
                 __size_of___ftpack 006E                           ___latbits 0002  
                 __size_of___lwtoft 0018                       __pcstackBANK0 0020  
                         __pnvBANK0 0059                            ?___ftdiv 0034  
                          ?___fttol 0044             __end_of_setPosicaoAtual 0531  
                    __size_of_setup 000E                   interrupt_function 0004  
              __end_of_setupStepper 048D                            _PIE1bits 008C  
                          _PIR1bits 000C                    __size_of___ftdiv 00B8  
                  ?_setPosicaoAtual 0052                    __size_of___fttol 008E  
                          ___ftpack 0584                            ___lwtoft 048D  
                          __ptext10 0531                            __ptext11 0460  
                 __CFG_BOR4V$BOR40V 0000                       __size_of_main 002C  
       __size_of_setPosicaoDesejada 0030                            _setpoint 0056  
                          _position 0059                        ?_calculaErro 0071  
      setPosicaoAtual@posicao_atual 0052                          _INTCONbits 000B  
             __size_of_setupStepper 0011                            intlevel1 0000  
                      _setupStepper 047C                          _STATUSbits 0003  
